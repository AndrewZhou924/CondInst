[09/17 07:53:58] detectron2 INFO: Rank of current process: 0. World size: 1
[09/17 07:54:00] detectron2 INFO: Environment info:
----------------------  -------------------------------------------------------------
sys.platform            linux
Python                  3.7.1 (default, Sep  3 2020, 23:56:06) [GCC 5.4.0 20160609]
numpy                   1.19.1
detectron2              0.2.1 @/home/zzk/workspace/detectron2/detectron2
Compiler                GCC 6.5
CUDA compiler           CUDA 11.0
detectron2 arch flags   7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/zzk/py37/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2               GeForce RTX 2080 Ti (arch=7.5)
CUDA_HOME               /usr/local/cuda
Pillow                  7.2.0
torchvision             0.5.0 @/home/zzk/py37/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20200912
cv2                     4.4.0
----------------------  -------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[09/17 07:54:00] detectron2 INFO: Command line arguments: Namespace(config_file='configs/CondInst/MS_R_101_3x.yaml', dist_url='tcp://127.0.0.1:50155', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[09/17 07:54:00] detectron2 INFO: Contents of args.config_file=configs/CondInst/MS_R_101_3x.yaml:
_BASE_: "Base-FCOS.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"
  RESNETS:
    DEPTH: 101
SOLVER:
  STEPS: (60000, 80000)
  MAX_ITER: 90000
OUTPUT_DIR: "output/fcos/R_101_3x"

[09/17 07:54:00] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('HICO-det-test',)
  TRAIN: ('HICO-det-train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: bitmask
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_fcos_resnet_fpn_backbone
  DEVICE: cuda
  FCOS:
    CENTER_SAMPLE: True
    FPN_STRIDES: [8, 16, 32, 64, 128]
    INFERENCE_TH_TEST: 0.05
    INFERENCE_TH_TRAIN: 0.05
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    LOC_LOSS_TYPE: giou
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.6
    NORM: GN
    NUM_BOX_CONVS: 4
    NUM_CLASSES: 80
    NUM_CLS_CONVS: 4
    NUM_SHARE_CONVS: 0
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 100
    POS_RADIUS: 1.5
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 1000
    PRIOR_PROB: 0.01
    SIZES_OF_INTEREST: [64, 128, 256, 512]
    THRESH_WITH_CTR: False
    TOP_LEVELS: 2
    USE_DEFORMABLE: False
    USE_RELU: True
    USE_SCALE: True
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: OneStageDetector
  MOBILENET: False
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FCOS
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  VOVNET:
    BACKBONE_OUT_CHANNELS: 256
    CONV_BODY: V-39-eSE
    NORM: FrozenBN
    OUT_CHANNELS: 256
    OUT_FEATURES: ['stage2', 'stage3', 'stage4', 'stage5']
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-101.pkl
OUTPUT_DIR: output/fcos/R_101_3x
SEED: -1
SOLVER:
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[09/17 07:54:00] detectron2 INFO: Full config saved to output/fcos/R_101_3x/config.yaml
[09/17 07:54:00] d2.utils.env INFO: Using a generated random seed 453175
[09/17 07:54:02] d2.engine.defaults INFO: Model:
OneStageDetector(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): FCOS(
    (iou_loss): IOULoss()
    (fcos_head): FCOSHead(
      (cls_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (bbox_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (share_tower): Sequential()
      (mask_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (13): GroupNorm(32, 256, eps=1e-05, affine=True)
        (14): ReLU()
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (16): GroupNorm(32, 256, eps=1e-05, affine=True)
        (17): ReLU()
        (18): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (19): GroupNorm(32, 256, eps=1e-05, affine=True)
        (20): ReLU()
        (21): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (22): GroupNorm(32, 256, eps=1e-05, affine=True)
        (23): ReLU()
      )
      (cls_logits): Conv2d(256, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bbox_pred): Conv2d(256, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (ctrness): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (controller): Conv2d(256, 169, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
        (3): Scale()
        (4): Scale()
      )
    )
  )
)
[09/17 07:54:02] d2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[09/17 07:54:02] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/17 07:54:03] d2.data.datasets.coco INFO: Loaded 38116 images in COCO format from /data01/zzk/data/hico_20160224_det/hico_annotations_train2015.json
[09/17 07:54:03] d2.data.build INFO: Removed 659 images with no usable annotations. 37457 images left.
[09/17 07:54:04] d2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 59249        |   bicycle    | 3249         |      car      | 1060         |
|  motorcycle   | 2119         |   airplane   | 607          |      bus      | 925          |
|     train     | 439          |    truck     | 401          |     boat      | 1689         |
| traffic light | 171          | fire hydrant | 128          |   stop sign   | 49           |
| parking meter | 163          |    bench     | 1470         |     bird      | 550          |
|      cat      | 254          |     dog      | 718          |     horse     | 1912         |
|     sheep     | 909          |     cow      | 717          |   elephant    | 567          |
|     bear      | 90           |    zebra     | 50           |    giraffe    | 320          |
|   backpack    | 1205         |   umbrella   | 1693         |    handbag    | 192          |
|      tie      | 909          |   suitcase   | 608          |    frisbee    | 780          |
|     skis      | 1146         |  snowboard   | 824          |  sports ball  | 947          |
|     kite      | 1066         | baseball bat | 745          | baseball gl.. | 203          |
|  skateboard   | 2466         |  surfboard   | 618          | tennis racket | 295          |
|    bottle     | 890          |  wine glass  | 693          |      cup      | 454          |
|     fork      | 178          |    knife     | 636          |     spoon     | 274          |
|     bowl      | 130          |    banana    | 850          |     apple     | 283          |
|   sandwich    | 269          |    orange    | 74           |   broccoli    | 93           |
|    carrot     | 269          |   hot dog    | 374          |     pizza     | 424          |
|     donut     | 417          |     cake     | 787          |     chair     | 1425         |
|     couch     | 767          | potted plant | 143          |      bed      | 435          |
| dining table  | 1019         |    toilet    | 172          |      tv       | 251          |
|    laptop     | 719          |    mouse     | 70           |    remote     | 198          |
|   keyboard    | 323          |  cell phone  | 547          |   microwave   | 26           |
|     oven      | 122          |   toaster    | 7            |     sink      | 76           |
| refrigerator  | 69           |     book     | 1062         |     clock     | 203          |
|     vase      | 102          |   scissors   | 242          |  teddy bear   | 349          |
|  hair drier   | 52           |  toothbrush  | 348          |               |              |
|     total     | 107325       |              |              |               |              |[0m
[09/17 07:54:04] d2.data.common INFO: Serializing 37457 elements to byte tensors and concatenating them all ...
[09/17 07:54:04] d2.data.common INFO: Serialized dataset takes 14.72 MiB
[09/17 07:54:04] d2.data.build INFO: Using training sampler TrainingSampler
[09/17 07:54:04] fvcore.common.checkpoint INFO: Loading checkpoint from detectron2://ImageNetPretrained/MSRA/R-101.pkl
[09/17 07:54:04] fvcore.common.file_io INFO: Downloading https://dl.fbaipublicfiles.com/detectron2/ImageNetPretrained/MSRA/R-101.pkl ...
[09/17 07:54:04] fvcore.common.download INFO: Downloading from https://dl.fbaipublicfiles.com/detectron2/ImageNetPretrained/MSRA/R-101.pkl ...
[09/17 07:55:08] fvcore.common.download INFO: Successfully downloaded /home/zzk/.torch/fvcore_cache/detectron2/ImageNetPretrained/MSRA/R-101.pkl. 178666803 bytes.
[09/17 07:55:08] fvcore.common.file_io INFO: URL https://dl.fbaipublicfiles.com/detectron2/ImageNetPretrained/MSRA/R-101.pkl cached in /home/zzk/.torch/fvcore_cache/detectron2/ImageNetPretrained/MSRA/R-101.pkl
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: Remapping C2 weights ......
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.bias            loaded from res2_0_branch2a_bn_beta           of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.running_mean    loaded from res2_0_branch2a_bn_running_mean   of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.running_var     loaded from res2_0_branch2a_bn_running_var    of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.weight          loaded from res2_0_branch2a_bn_gamma          of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.weight               loaded from res2_0_branch2a_w                 of shape (64, 64, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.bias            loaded from res2_0_branch2b_bn_beta           of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.running_mean    loaded from res2_0_branch2b_bn_running_mean   of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.running_var     loaded from res2_0_branch2b_bn_running_var    of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.weight          loaded from res2_0_branch2b_bn_gamma          of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.weight               loaded from res2_0_branch2b_w                 of shape (64, 64, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.bias            loaded from res2_0_branch2c_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.running_mean    loaded from res2_0_branch2c_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.running_var     loaded from res2_0_branch2c_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.weight          loaded from res2_0_branch2c_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.weight               loaded from res2_0_branch2c_w                 of shape (256, 64, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.bias         loaded from res2_0_branch1_bn_beta            of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.running_mean loaded from res2_0_branch1_bn_running_mean    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.running_var  loaded from res2_0_branch1_bn_running_var     of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.weight       loaded from res2_0_branch1_bn_gamma           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.weight            loaded from res2_0_branch1_w                  of shape (256, 64, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.bias            loaded from res2_1_branch2a_bn_beta           of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.running_mean    loaded from res2_1_branch2a_bn_running_mean   of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.running_var     loaded from res2_1_branch2a_bn_running_var    of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.weight          loaded from res2_1_branch2a_bn_gamma          of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.weight               loaded from res2_1_branch2a_w                 of shape (64, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.bias            loaded from res2_1_branch2b_bn_beta           of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.running_mean    loaded from res2_1_branch2b_bn_running_mean   of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.running_var     loaded from res2_1_branch2b_bn_running_var    of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.weight          loaded from res2_1_branch2b_bn_gamma          of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.weight               loaded from res2_1_branch2b_w                 of shape (64, 64, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.bias            loaded from res2_1_branch2c_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.running_mean    loaded from res2_1_branch2c_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.running_var     loaded from res2_1_branch2c_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.weight          loaded from res2_1_branch2c_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.weight               loaded from res2_1_branch2c_w                 of shape (256, 64, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.bias            loaded from res2_2_branch2a_bn_beta           of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.running_mean    loaded from res2_2_branch2a_bn_running_mean   of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.running_var     loaded from res2_2_branch2a_bn_running_var    of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.weight          loaded from res2_2_branch2a_bn_gamma          of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.weight               loaded from res2_2_branch2a_w                 of shape (64, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.bias            loaded from res2_2_branch2b_bn_beta           of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.running_mean    loaded from res2_2_branch2b_bn_running_mean   of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.running_var     loaded from res2_2_branch2b_bn_running_var    of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.weight          loaded from res2_2_branch2b_bn_gamma          of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.weight               loaded from res2_2_branch2b_w                 of shape (64, 64, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.bias            loaded from res2_2_branch2c_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.running_mean    loaded from res2_2_branch2c_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.running_var     loaded from res2_2_branch2c_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.weight          loaded from res2_2_branch2c_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.weight               loaded from res2_2_branch2c_w                 of shape (256, 64, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.bias            loaded from res3_0_branch2a_bn_beta           of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.running_mean    loaded from res3_0_branch2a_bn_running_mean   of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.running_var     loaded from res3_0_branch2a_bn_running_var    of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.weight          loaded from res3_0_branch2a_bn_gamma          of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.weight               loaded from res3_0_branch2a_w                 of shape (128, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.bias            loaded from res3_0_branch2b_bn_beta           of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.running_mean    loaded from res3_0_branch2b_bn_running_mean   of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.running_var     loaded from res3_0_branch2b_bn_running_var    of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.weight          loaded from res3_0_branch2b_bn_gamma          of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.weight               loaded from res3_0_branch2b_w                 of shape (128, 128, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.bias            loaded from res3_0_branch2c_bn_beta           of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.running_mean    loaded from res3_0_branch2c_bn_running_mean   of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.running_var     loaded from res3_0_branch2c_bn_running_var    of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.weight          loaded from res3_0_branch2c_bn_gamma          of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.weight               loaded from res3_0_branch2c_w                 of shape (512, 128, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.bias         loaded from res3_0_branch1_bn_beta            of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.running_mean loaded from res3_0_branch1_bn_running_mean    of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.running_var  loaded from res3_0_branch1_bn_running_var     of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.weight       loaded from res3_0_branch1_bn_gamma           of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.weight            loaded from res3_0_branch1_w                  of shape (512, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.bias            loaded from res3_1_branch2a_bn_beta           of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.running_mean    loaded from res3_1_branch2a_bn_running_mean   of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.running_var     loaded from res3_1_branch2a_bn_running_var    of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.weight          loaded from res3_1_branch2a_bn_gamma          of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.weight               loaded from res3_1_branch2a_w                 of shape (128, 512, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.bias            loaded from res3_1_branch2b_bn_beta           of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.running_mean    loaded from res3_1_branch2b_bn_running_mean   of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.running_var     loaded from res3_1_branch2b_bn_running_var    of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.weight          loaded from res3_1_branch2b_bn_gamma          of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.weight               loaded from res3_1_branch2b_w                 of shape (128, 128, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.bias            loaded from res3_1_branch2c_bn_beta           of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.running_mean    loaded from res3_1_branch2c_bn_running_mean   of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.running_var     loaded from res3_1_branch2c_bn_running_var    of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.weight          loaded from res3_1_branch2c_bn_gamma          of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.weight               loaded from res3_1_branch2c_w                 of shape (512, 128, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.bias            loaded from res3_2_branch2a_bn_beta           of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.running_mean    loaded from res3_2_branch2a_bn_running_mean   of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.running_var     loaded from res3_2_branch2a_bn_running_var    of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.weight          loaded from res3_2_branch2a_bn_gamma          of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.weight               loaded from res3_2_branch2a_w                 of shape (128, 512, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.bias            loaded from res3_2_branch2b_bn_beta           of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.running_mean    loaded from res3_2_branch2b_bn_running_mean   of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.running_var     loaded from res3_2_branch2b_bn_running_var    of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.weight          loaded from res3_2_branch2b_bn_gamma          of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.weight               loaded from res3_2_branch2b_w                 of shape (128, 128, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.bias            loaded from res3_2_branch2c_bn_beta           of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.running_mean    loaded from res3_2_branch2c_bn_running_mean   of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.running_var     loaded from res3_2_branch2c_bn_running_var    of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.weight          loaded from res3_2_branch2c_bn_gamma          of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.weight               loaded from res3_2_branch2c_w                 of shape (512, 128, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.bias            loaded from res3_3_branch2a_bn_beta           of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.running_mean    loaded from res3_3_branch2a_bn_running_mean   of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.running_var     loaded from res3_3_branch2a_bn_running_var    of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.weight          loaded from res3_3_branch2a_bn_gamma          of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.weight               loaded from res3_3_branch2a_w                 of shape (128, 512, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.bias            loaded from res3_3_branch2b_bn_beta           of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.running_mean    loaded from res3_3_branch2b_bn_running_mean   of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.running_var     loaded from res3_3_branch2b_bn_running_var    of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.weight          loaded from res3_3_branch2b_bn_gamma          of shape (128,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.weight               loaded from res3_3_branch2b_w                 of shape (128, 128, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.bias            loaded from res3_3_branch2c_bn_beta           of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.running_mean    loaded from res3_3_branch2c_bn_running_mean   of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.running_var     loaded from res3_3_branch2c_bn_running_var    of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.weight          loaded from res3_3_branch2c_bn_gamma          of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.weight               loaded from res3_3_branch2c_w                 of shape (512, 128, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.bias            loaded from res4_0_branch2a_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.running_mean    loaded from res4_0_branch2a_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.running_var     loaded from res4_0_branch2a_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.weight          loaded from res4_0_branch2a_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.weight               loaded from res4_0_branch2a_w                 of shape (256, 512, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.bias            loaded from res4_0_branch2b_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.running_mean    loaded from res4_0_branch2b_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.running_var     loaded from res4_0_branch2b_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.weight          loaded from res4_0_branch2b_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.weight               loaded from res4_0_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.bias            loaded from res4_0_branch2c_bn_beta           of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.running_mean    loaded from res4_0_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.running_var     loaded from res4_0_branch2c_bn_running_var    of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.weight          loaded from res4_0_branch2c_bn_gamma          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.weight               loaded from res4_0_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.bias         loaded from res4_0_branch1_bn_beta            of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.running_mean loaded from res4_0_branch1_bn_running_mean    of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.running_var  loaded from res4_0_branch1_bn_running_var     of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.weight       loaded from res4_0_branch1_bn_gamma           of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.weight            loaded from res4_0_branch1_w                  of shape (1024, 512, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.bias            loaded from res4_1_branch2a_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.running_mean    loaded from res4_1_branch2a_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.running_var     loaded from res4_1_branch2a_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.weight          loaded from res4_1_branch2a_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.weight               loaded from res4_1_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.bias            loaded from res4_1_branch2b_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.running_mean    loaded from res4_1_branch2b_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.running_var     loaded from res4_1_branch2b_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.weight          loaded from res4_1_branch2b_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.weight               loaded from res4_1_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.bias            loaded from res4_1_branch2c_bn_beta           of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.running_mean    loaded from res4_1_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.running_var     loaded from res4_1_branch2c_bn_running_var    of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.weight          loaded from res4_1_branch2c_bn_gamma          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.weight               loaded from res4_1_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.norm.bias           loaded from res4_10_branch2a_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.norm.running_mean   loaded from res4_10_branch2a_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.norm.running_var    loaded from res4_10_branch2a_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.norm.weight         loaded from res4_10_branch2a_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.weight              loaded from res4_10_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.norm.bias           loaded from res4_10_branch2b_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.norm.running_mean   loaded from res4_10_branch2b_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.norm.running_var    loaded from res4_10_branch2b_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.norm.weight         loaded from res4_10_branch2b_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.weight              loaded from res4_10_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.norm.bias           loaded from res4_10_branch2c_bn_beta          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.norm.running_mean   loaded from res4_10_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.norm.running_var    loaded from res4_10_branch2c_bn_running_var   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.norm.weight         loaded from res4_10_branch2c_bn_gamma         of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.weight              loaded from res4_10_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.norm.bias           loaded from res4_11_branch2a_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.norm.running_mean   loaded from res4_11_branch2a_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.norm.running_var    loaded from res4_11_branch2a_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.norm.weight         loaded from res4_11_branch2a_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.weight              loaded from res4_11_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.norm.bias           loaded from res4_11_branch2b_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.norm.running_mean   loaded from res4_11_branch2b_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.norm.running_var    loaded from res4_11_branch2b_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.norm.weight         loaded from res4_11_branch2b_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.weight              loaded from res4_11_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.norm.bias           loaded from res4_11_branch2c_bn_beta          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.norm.running_mean   loaded from res4_11_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.norm.running_var    loaded from res4_11_branch2c_bn_running_var   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.norm.weight         loaded from res4_11_branch2c_bn_gamma         of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.weight              loaded from res4_11_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.norm.bias           loaded from res4_12_branch2a_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.norm.running_mean   loaded from res4_12_branch2a_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.norm.running_var    loaded from res4_12_branch2a_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.norm.weight         loaded from res4_12_branch2a_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.weight              loaded from res4_12_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.norm.bias           loaded from res4_12_branch2b_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.norm.running_mean   loaded from res4_12_branch2b_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.norm.running_var    loaded from res4_12_branch2b_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.norm.weight         loaded from res4_12_branch2b_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.weight              loaded from res4_12_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.norm.bias           loaded from res4_12_branch2c_bn_beta          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.norm.running_mean   loaded from res4_12_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.norm.running_var    loaded from res4_12_branch2c_bn_running_var   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.norm.weight         loaded from res4_12_branch2c_bn_gamma         of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.weight              loaded from res4_12_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.norm.bias           loaded from res4_13_branch2a_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.norm.running_mean   loaded from res4_13_branch2a_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.norm.running_var    loaded from res4_13_branch2a_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.norm.weight         loaded from res4_13_branch2a_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.weight              loaded from res4_13_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.norm.bias           loaded from res4_13_branch2b_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.norm.running_mean   loaded from res4_13_branch2b_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.norm.running_var    loaded from res4_13_branch2b_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.norm.weight         loaded from res4_13_branch2b_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.weight              loaded from res4_13_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.norm.bias           loaded from res4_13_branch2c_bn_beta          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.norm.running_mean   loaded from res4_13_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.norm.running_var    loaded from res4_13_branch2c_bn_running_var   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.norm.weight         loaded from res4_13_branch2c_bn_gamma         of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.weight              loaded from res4_13_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.norm.bias           loaded from res4_14_branch2a_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.norm.running_mean   loaded from res4_14_branch2a_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.norm.running_var    loaded from res4_14_branch2a_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.norm.weight         loaded from res4_14_branch2a_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.weight              loaded from res4_14_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.norm.bias           loaded from res4_14_branch2b_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.norm.running_mean   loaded from res4_14_branch2b_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.norm.running_var    loaded from res4_14_branch2b_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.norm.weight         loaded from res4_14_branch2b_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.weight              loaded from res4_14_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.norm.bias           loaded from res4_14_branch2c_bn_beta          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.norm.running_mean   loaded from res4_14_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.norm.running_var    loaded from res4_14_branch2c_bn_running_var   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.norm.weight         loaded from res4_14_branch2c_bn_gamma         of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.weight              loaded from res4_14_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.norm.bias           loaded from res4_15_branch2a_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.norm.running_mean   loaded from res4_15_branch2a_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.norm.running_var    loaded from res4_15_branch2a_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.norm.weight         loaded from res4_15_branch2a_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.weight              loaded from res4_15_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.norm.bias           loaded from res4_15_branch2b_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.norm.running_mean   loaded from res4_15_branch2b_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.norm.running_var    loaded from res4_15_branch2b_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.norm.weight         loaded from res4_15_branch2b_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.weight              loaded from res4_15_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.norm.bias           loaded from res4_15_branch2c_bn_beta          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.norm.running_mean   loaded from res4_15_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.norm.running_var    loaded from res4_15_branch2c_bn_running_var   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.norm.weight         loaded from res4_15_branch2c_bn_gamma         of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.weight              loaded from res4_15_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.norm.bias           loaded from res4_16_branch2a_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.norm.running_mean   loaded from res4_16_branch2a_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.norm.running_var    loaded from res4_16_branch2a_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.norm.weight         loaded from res4_16_branch2a_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.weight              loaded from res4_16_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.norm.bias           loaded from res4_16_branch2b_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.norm.running_mean   loaded from res4_16_branch2b_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.norm.running_var    loaded from res4_16_branch2b_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.norm.weight         loaded from res4_16_branch2b_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.weight              loaded from res4_16_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.norm.bias           loaded from res4_16_branch2c_bn_beta          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.norm.running_mean   loaded from res4_16_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.norm.running_var    loaded from res4_16_branch2c_bn_running_var   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.norm.weight         loaded from res4_16_branch2c_bn_gamma         of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.weight              loaded from res4_16_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.norm.bias           loaded from res4_17_branch2a_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.norm.running_mean   loaded from res4_17_branch2a_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.norm.running_var    loaded from res4_17_branch2a_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.norm.weight         loaded from res4_17_branch2a_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.weight              loaded from res4_17_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.norm.bias           loaded from res4_17_branch2b_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.norm.running_mean   loaded from res4_17_branch2b_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.norm.running_var    loaded from res4_17_branch2b_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.norm.weight         loaded from res4_17_branch2b_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.weight              loaded from res4_17_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.norm.bias           loaded from res4_17_branch2c_bn_beta          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.norm.running_mean   loaded from res4_17_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.norm.running_var    loaded from res4_17_branch2c_bn_running_var   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.norm.weight         loaded from res4_17_branch2c_bn_gamma         of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.weight              loaded from res4_17_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.norm.bias           loaded from res4_18_branch2a_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.norm.running_mean   loaded from res4_18_branch2a_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.norm.running_var    loaded from res4_18_branch2a_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.norm.weight         loaded from res4_18_branch2a_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.weight              loaded from res4_18_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.norm.bias           loaded from res4_18_branch2b_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.norm.running_mean   loaded from res4_18_branch2b_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.norm.running_var    loaded from res4_18_branch2b_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.norm.weight         loaded from res4_18_branch2b_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.weight              loaded from res4_18_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.norm.bias           loaded from res4_18_branch2c_bn_beta          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.norm.running_mean   loaded from res4_18_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.norm.running_var    loaded from res4_18_branch2c_bn_running_var   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.norm.weight         loaded from res4_18_branch2c_bn_gamma         of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.weight              loaded from res4_18_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.norm.bias           loaded from res4_19_branch2a_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.norm.running_mean   loaded from res4_19_branch2a_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.norm.running_var    loaded from res4_19_branch2a_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.norm.weight         loaded from res4_19_branch2a_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.weight              loaded from res4_19_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.norm.bias           loaded from res4_19_branch2b_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.norm.running_mean   loaded from res4_19_branch2b_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.norm.running_var    loaded from res4_19_branch2b_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.norm.weight         loaded from res4_19_branch2b_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.weight              loaded from res4_19_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.norm.bias           loaded from res4_19_branch2c_bn_beta          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.norm.running_mean   loaded from res4_19_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.norm.running_var    loaded from res4_19_branch2c_bn_running_var   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.norm.weight         loaded from res4_19_branch2c_bn_gamma         of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.weight              loaded from res4_19_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.bias            loaded from res4_2_branch2a_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.running_mean    loaded from res4_2_branch2a_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.running_var     loaded from res4_2_branch2a_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.weight          loaded from res4_2_branch2a_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.weight               loaded from res4_2_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.bias            loaded from res4_2_branch2b_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.running_mean    loaded from res4_2_branch2b_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.running_var     loaded from res4_2_branch2b_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.weight          loaded from res4_2_branch2b_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.weight               loaded from res4_2_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.bias            loaded from res4_2_branch2c_bn_beta           of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.running_mean    loaded from res4_2_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.running_var     loaded from res4_2_branch2c_bn_running_var    of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.weight          loaded from res4_2_branch2c_bn_gamma          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.weight               loaded from res4_2_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.norm.bias           loaded from res4_20_branch2a_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.norm.running_mean   loaded from res4_20_branch2a_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.norm.running_var    loaded from res4_20_branch2a_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.norm.weight         loaded from res4_20_branch2a_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.weight              loaded from res4_20_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.norm.bias           loaded from res4_20_branch2b_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.norm.running_mean   loaded from res4_20_branch2b_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.norm.running_var    loaded from res4_20_branch2b_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.norm.weight         loaded from res4_20_branch2b_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.weight              loaded from res4_20_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.norm.bias           loaded from res4_20_branch2c_bn_beta          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.norm.running_mean   loaded from res4_20_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.norm.running_var    loaded from res4_20_branch2c_bn_running_var   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.norm.weight         loaded from res4_20_branch2c_bn_gamma         of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.weight              loaded from res4_20_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.norm.bias           loaded from res4_21_branch2a_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.norm.running_mean   loaded from res4_21_branch2a_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.norm.running_var    loaded from res4_21_branch2a_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.norm.weight         loaded from res4_21_branch2a_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.weight              loaded from res4_21_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.norm.bias           loaded from res4_21_branch2b_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.norm.running_mean   loaded from res4_21_branch2b_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.norm.running_var    loaded from res4_21_branch2b_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.norm.weight         loaded from res4_21_branch2b_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.weight              loaded from res4_21_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.norm.bias           loaded from res4_21_branch2c_bn_beta          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.norm.running_mean   loaded from res4_21_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.norm.running_var    loaded from res4_21_branch2c_bn_running_var   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.norm.weight         loaded from res4_21_branch2c_bn_gamma         of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.weight              loaded from res4_21_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.norm.bias           loaded from res4_22_branch2a_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.norm.running_mean   loaded from res4_22_branch2a_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.norm.running_var    loaded from res4_22_branch2a_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.norm.weight         loaded from res4_22_branch2a_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.weight              loaded from res4_22_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.norm.bias           loaded from res4_22_branch2b_bn_beta          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.norm.running_mean   loaded from res4_22_branch2b_bn_running_mean  of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.norm.running_var    loaded from res4_22_branch2b_bn_running_var   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.norm.weight         loaded from res4_22_branch2b_bn_gamma         of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.weight              loaded from res4_22_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.norm.bias           loaded from res4_22_branch2c_bn_beta          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.norm.running_mean   loaded from res4_22_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.norm.running_var    loaded from res4_22_branch2c_bn_running_var   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.norm.weight         loaded from res4_22_branch2c_bn_gamma         of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.weight              loaded from res4_22_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.bias            loaded from res4_3_branch2a_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.running_mean    loaded from res4_3_branch2a_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.running_var     loaded from res4_3_branch2a_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.weight          loaded from res4_3_branch2a_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.weight               loaded from res4_3_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.bias            loaded from res4_3_branch2b_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.running_mean    loaded from res4_3_branch2b_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.running_var     loaded from res4_3_branch2b_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.weight          loaded from res4_3_branch2b_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.weight               loaded from res4_3_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.bias            loaded from res4_3_branch2c_bn_beta           of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.running_mean    loaded from res4_3_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.running_var     loaded from res4_3_branch2c_bn_running_var    of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.weight          loaded from res4_3_branch2c_bn_gamma          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.weight               loaded from res4_3_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.bias            loaded from res4_4_branch2a_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.running_mean    loaded from res4_4_branch2a_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.running_var     loaded from res4_4_branch2a_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.weight          loaded from res4_4_branch2a_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.weight               loaded from res4_4_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.bias            loaded from res4_4_branch2b_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.running_mean    loaded from res4_4_branch2b_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.running_var     loaded from res4_4_branch2b_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.weight          loaded from res4_4_branch2b_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.weight               loaded from res4_4_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.bias            loaded from res4_4_branch2c_bn_beta           of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.running_mean    loaded from res4_4_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.running_var     loaded from res4_4_branch2c_bn_running_var    of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.weight          loaded from res4_4_branch2c_bn_gamma          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.weight               loaded from res4_4_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.bias            loaded from res4_5_branch2a_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.running_mean    loaded from res4_5_branch2a_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.running_var     loaded from res4_5_branch2a_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.weight          loaded from res4_5_branch2a_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.weight               loaded from res4_5_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.bias            loaded from res4_5_branch2b_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.running_mean    loaded from res4_5_branch2b_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.running_var     loaded from res4_5_branch2b_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.weight          loaded from res4_5_branch2b_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.weight               loaded from res4_5_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.bias            loaded from res4_5_branch2c_bn_beta           of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.running_mean    loaded from res4_5_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.running_var     loaded from res4_5_branch2c_bn_running_var    of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.weight          loaded from res4_5_branch2c_bn_gamma          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.weight               loaded from res4_5_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.norm.bias            loaded from res4_6_branch2a_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.norm.running_mean    loaded from res4_6_branch2a_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.norm.running_var     loaded from res4_6_branch2a_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.norm.weight          loaded from res4_6_branch2a_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.weight               loaded from res4_6_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.norm.bias            loaded from res4_6_branch2b_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.norm.running_mean    loaded from res4_6_branch2b_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.norm.running_var     loaded from res4_6_branch2b_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.norm.weight          loaded from res4_6_branch2b_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.weight               loaded from res4_6_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.norm.bias            loaded from res4_6_branch2c_bn_beta           of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.norm.running_mean    loaded from res4_6_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.norm.running_var     loaded from res4_6_branch2c_bn_running_var    of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.norm.weight          loaded from res4_6_branch2c_bn_gamma          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.weight               loaded from res4_6_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.norm.bias            loaded from res4_7_branch2a_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.norm.running_mean    loaded from res4_7_branch2a_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.norm.running_var     loaded from res4_7_branch2a_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.norm.weight          loaded from res4_7_branch2a_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.weight               loaded from res4_7_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.norm.bias            loaded from res4_7_branch2b_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.norm.running_mean    loaded from res4_7_branch2b_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.norm.running_var     loaded from res4_7_branch2b_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.norm.weight          loaded from res4_7_branch2b_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.weight               loaded from res4_7_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.norm.bias            loaded from res4_7_branch2c_bn_beta           of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.norm.running_mean    loaded from res4_7_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.norm.running_var     loaded from res4_7_branch2c_bn_running_var    of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.norm.weight          loaded from res4_7_branch2c_bn_gamma          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.weight               loaded from res4_7_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.norm.bias            loaded from res4_8_branch2a_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.norm.running_mean    loaded from res4_8_branch2a_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.norm.running_var     loaded from res4_8_branch2a_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.norm.weight          loaded from res4_8_branch2a_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.weight               loaded from res4_8_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.norm.bias            loaded from res4_8_branch2b_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.norm.running_mean    loaded from res4_8_branch2b_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.norm.running_var     loaded from res4_8_branch2b_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.norm.weight          loaded from res4_8_branch2b_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.weight               loaded from res4_8_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.norm.bias            loaded from res4_8_branch2c_bn_beta           of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.norm.running_mean    loaded from res4_8_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.norm.running_var     loaded from res4_8_branch2c_bn_running_var    of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.norm.weight          loaded from res4_8_branch2c_bn_gamma          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.weight               loaded from res4_8_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.norm.bias            loaded from res4_9_branch2a_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.norm.running_mean    loaded from res4_9_branch2a_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.norm.running_var     loaded from res4_9_branch2a_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.norm.weight          loaded from res4_9_branch2a_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.weight               loaded from res4_9_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.norm.bias            loaded from res4_9_branch2b_bn_beta           of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.norm.running_mean    loaded from res4_9_branch2b_bn_running_mean   of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.norm.running_var     loaded from res4_9_branch2b_bn_running_var    of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.norm.weight          loaded from res4_9_branch2b_bn_gamma          of shape (256,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.weight               loaded from res4_9_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.norm.bias            loaded from res4_9_branch2c_bn_beta           of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.norm.running_mean    loaded from res4_9_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.norm.running_var     loaded from res4_9_branch2c_bn_running_var    of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.norm.weight          loaded from res4_9_branch2c_bn_gamma          of shape (1024,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.weight               loaded from res4_9_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.bias            loaded from res5_0_branch2a_bn_beta           of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.running_mean    loaded from res5_0_branch2a_bn_running_mean   of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.running_var     loaded from res5_0_branch2a_bn_running_var    of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.weight          loaded from res5_0_branch2a_bn_gamma          of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.weight               loaded from res5_0_branch2a_w                 of shape (512, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.bias            loaded from res5_0_branch2b_bn_beta           of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.running_mean    loaded from res5_0_branch2b_bn_running_mean   of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.running_var     loaded from res5_0_branch2b_bn_running_var    of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.weight          loaded from res5_0_branch2b_bn_gamma          of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.weight               loaded from res5_0_branch2b_w                 of shape (512, 512, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.bias            loaded from res5_0_branch2c_bn_beta           of shape (2048,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.running_mean    loaded from res5_0_branch2c_bn_running_mean   of shape (2048,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.running_var     loaded from res5_0_branch2c_bn_running_var    of shape (2048,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.weight          loaded from res5_0_branch2c_bn_gamma          of shape (2048,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.weight               loaded from res5_0_branch2c_w                 of shape (2048, 512, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.bias         loaded from res5_0_branch1_bn_beta            of shape (2048,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.running_mean loaded from res5_0_branch1_bn_running_mean    of shape (2048,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.running_var  loaded from res5_0_branch1_bn_running_var     of shape (2048,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.weight       loaded from res5_0_branch1_bn_gamma           of shape (2048,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.weight            loaded from res5_0_branch1_w                  of shape (2048, 1024, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.bias            loaded from res5_1_branch2a_bn_beta           of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.running_mean    loaded from res5_1_branch2a_bn_running_mean   of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.running_var     loaded from res5_1_branch2a_bn_running_var    of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.weight          loaded from res5_1_branch2a_bn_gamma          of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.weight               loaded from res5_1_branch2a_w                 of shape (512, 2048, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.bias            loaded from res5_1_branch2b_bn_beta           of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.running_mean    loaded from res5_1_branch2b_bn_running_mean   of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.running_var     loaded from res5_1_branch2b_bn_running_var    of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.weight          loaded from res5_1_branch2b_bn_gamma          of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.weight               loaded from res5_1_branch2b_w                 of shape (512, 512, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.bias            loaded from res5_1_branch2c_bn_beta           of shape (2048,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.running_mean    loaded from res5_1_branch2c_bn_running_mean   of shape (2048,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.running_var     loaded from res5_1_branch2c_bn_running_var    of shape (2048,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.weight          loaded from res5_1_branch2c_bn_gamma          of shape (2048,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.weight               loaded from res5_1_branch2c_w                 of shape (2048, 512, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.bias            loaded from res5_2_branch2a_bn_beta           of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.running_mean    loaded from res5_2_branch2a_bn_running_mean   of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.running_var     loaded from res5_2_branch2a_bn_running_var    of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.weight          loaded from res5_2_branch2a_bn_gamma          of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.weight               loaded from res5_2_branch2a_w                 of shape (512, 2048, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.bias            loaded from res5_2_branch2b_bn_beta           of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.running_mean    loaded from res5_2_branch2b_bn_running_mean   of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.running_var     loaded from res5_2_branch2b_bn_running_var    of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.weight          loaded from res5_2_branch2b_bn_gamma          of shape (512,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.weight               loaded from res5_2_branch2b_w                 of shape (512, 512, 3, 3)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.bias            loaded from res5_2_branch2c_bn_beta           of shape (2048,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.running_mean    loaded from res5_2_branch2c_bn_running_mean   of shape (2048,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.running_var     loaded from res5_2_branch2c_bn_running_var    of shape (2048,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.weight          loaded from res5_2_branch2c_bn_gamma          of shape (2048,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.weight               loaded from res5_2_branch2c_w                 of shape (2048, 512, 1, 1)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.bias              loaded from res_conv1_bn_beta                 of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.running_mean      loaded from res_conv1_bn_running_mean         of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.running_var       loaded from res_conv1_bn_running_var          of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.weight            loaded from res_conv1_bn_gamma                of shape (64,)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.weight                 loaded from conv1_w                           of shape (64, 3, 7, 7)
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.fpn_lateral3.{bias, weight}[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mbackbone.fpn_output3.{bias, weight}[0m
  [34mbackbone.fpn_output4.{bias, weight}[0m
  [34mbackbone.fpn_output5.{bias, weight}[0m
  [34mbackbone.top_block.p6.{bias, weight}[0m
  [34mbackbone.top_block.p7.{bias, weight}[0m
  [34mpixel_mean[0m
  [34mpixel_std[0m
  [34mproposal_generator.fcos_head.bbox_pred.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.0.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.1.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.10.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.3.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.4.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.6.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.7.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.9.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_logits.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.0.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.1.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.10.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.3.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.4.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.6.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.7.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.9.{bias, weight}[0m
  [34mproposal_generator.fcos_head.controller.{bias, weight}[0m
  [34mproposal_generator.fcos_head.ctrness.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.0.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.1.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.10.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.12.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.13.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.15.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.16.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.18.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.19.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.21.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.22.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.3.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.4.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.6.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.7.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.9.{bias, weight}[0m
  [34mproposal_generator.fcos_head.scales.0.scale[0m
  [34mproposal_generator.fcos_head.scales.1.scale[0m
  [34mproposal_generator.fcos_head.scales.2.scale[0m
  [34mproposal_generator.fcos_head.scales.3.scale[0m
  [34mproposal_generator.fcos_head.scales.4.scale[0m
[09/17 07:55:08] d2.checkpoint.c2_model_loading INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000_b[0m
  [35mfc1000_w[0m
[09/17 07:57:01] detectron2 INFO: Rank of current process: 0. World size: 1
[09/17 07:57:03] detectron2 INFO: Environment info:
----------------------  -------------------------------------------------------------
sys.platform            linux
Python                  3.7.1 (default, Sep  3 2020, 23:56:06) [GCC 5.4.0 20160609]
numpy                   1.19.1
detectron2              0.2.1 @/home/zzk/workspace/detectron2/detectron2
Compiler                GCC 6.5
CUDA compiler           CUDA 11.0
detectron2 arch flags   7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/zzk/py37/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2               GeForce RTX 2080 Ti (arch=7.5)
CUDA_HOME               /usr/local/cuda
Pillow                  7.2.0
torchvision             0.5.0 @/home/zzk/py37/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20200912
cv2                     4.4.0
----------------------  -------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[09/17 07:57:03] detectron2 INFO: Command line arguments: Namespace(config_file='configs/CondInst/MS_R_101_3x.yaml', dist_url='tcp://127.0.0.1:50155', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[09/17 07:57:03] detectron2 INFO: Contents of args.config_file=configs/CondInst/MS_R_101_3x.yaml:
_BASE_: "Base-FCOS.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"
  RESNETS:
    DEPTH: 101
SOLVER:
  STEPS: (60000, 80000)
  MAX_ITER: 90000
OUTPUT_DIR: "output/fcos/R_101_3x"

[09/17 07:57:03] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('HICO-det-test',)
  TRAIN: ('HICO-det-train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: bitmask
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_fcos_resnet_fpn_backbone
  DEVICE: cuda
  FCOS:
    CENTER_SAMPLE: True
    FPN_STRIDES: [8, 16, 32, 64, 128]
    INFERENCE_TH_TEST: 0.05
    INFERENCE_TH_TRAIN: 0.05
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    LOC_LOSS_TYPE: giou
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.6
    NORM: GN
    NUM_BOX_CONVS: 4
    NUM_CLASSES: 80
    NUM_CLS_CONVS: 4
    NUM_SHARE_CONVS: 0
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 100
    POS_RADIUS: 1.5
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 1000
    PRIOR_PROB: 0.01
    SIZES_OF_INTEREST: [64, 128, 256, 512]
    THRESH_WITH_CTR: False
    TOP_LEVELS: 2
    USE_DEFORMABLE: False
    USE_RELU: True
    USE_SCALE: True
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: OneStageDetector
  MOBILENET: False
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FCOS
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  VOVNET:
    BACKBONE_OUT_CHANNELS: 256
    CONV_BODY: V-39-eSE
    NORM: FrozenBN
    OUT_CHANNELS: 256
    OUT_FEATURES: ['stage2', 'stage3', 'stage4', 'stage5']
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-101.pkl
OUTPUT_DIR: output/fcos/R_101_3x
SEED: -1
SOLVER:
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[09/17 07:57:03] detectron2 INFO: Full config saved to output/fcos/R_101_3x/config.yaml
[09/17 07:57:03] d2.utils.env INFO: Using a generated random seed 3771023
[09/17 07:57:06] d2.engine.defaults INFO: Model:
OneStageDetector(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): FCOS(
    (iou_loss): IOULoss()
    (fcos_head): FCOSHead(
      (cls_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (bbox_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (share_tower): Sequential()
      (mask_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (13): GroupNorm(32, 256, eps=1e-05, affine=True)
        (14): ReLU()
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (16): GroupNorm(32, 256, eps=1e-05, affine=True)
        (17): ReLU()
        (18): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (19): GroupNorm(32, 256, eps=1e-05, affine=True)
        (20): ReLU()
        (21): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (22): GroupNorm(32, 256, eps=1e-05, affine=True)
        (23): ReLU()
      )
      (cls_logits): Conv2d(256, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bbox_pred): Conv2d(256, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (ctrness): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (controller): Conv2d(256, 169, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
        (3): Scale()
        (4): Scale()
      )
    )
  )
)
[09/17 07:57:06] d2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[09/17 07:57:07] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/17 07:57:07] d2.data.datasets.coco INFO: Loaded 38116 images in COCO format from /data01/zzk/data/hico_20160224_det/hico_annotations_train2015.json
[09/17 07:57:07] d2.data.build INFO: Removed 659 images with no usable annotations. 37457 images left.
[09/17 07:57:08] d2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 59249        |   bicycle    | 3249         |      car      | 1060         |
|  motorcycle   | 2119         |   airplane   | 607          |      bus      | 925          |
|     train     | 439          |    truck     | 401          |     boat      | 1689         |
| traffic light | 171          | fire hydrant | 128          |   stop sign   | 49           |
| parking meter | 163          |    bench     | 1470         |     bird      | 550          |
|      cat      | 254          |     dog      | 718          |     horse     | 1912         |
|     sheep     | 909          |     cow      | 717          |   elephant    | 567          |
|     bear      | 90           |    zebra     | 50           |    giraffe    | 320          |
|   backpack    | 1205         |   umbrella   | 1693         |    handbag    | 192          |
|      tie      | 909          |   suitcase   | 608          |    frisbee    | 780          |
|     skis      | 1146         |  snowboard   | 824          |  sports ball  | 947          |
|     kite      | 1066         | baseball bat | 745          | baseball gl.. | 203          |
|  skateboard   | 2466         |  surfboard   | 618          | tennis racket | 295          |
|    bottle     | 890          |  wine glass  | 693          |      cup      | 454          |
|     fork      | 178          |    knife     | 636          |     spoon     | 274          |
|     bowl      | 130          |    banana    | 850          |     apple     | 283          |
|   sandwich    | 269          |    orange    | 74           |   broccoli    | 93           |
|    carrot     | 269          |   hot dog    | 374          |     pizza     | 424          |
|     donut     | 417          |     cake     | 787          |     chair     | 1425         |
|     couch     | 767          | potted plant | 143          |      bed      | 435          |
| dining table  | 1019         |    toilet    | 172          |      tv       | 251          |
|    laptop     | 719          |    mouse     | 70           |    remote     | 198          |
|   keyboard    | 323          |  cell phone  | 547          |   microwave   | 26           |
|     oven      | 122          |   toaster    | 7            |     sink      | 76           |
| refrigerator  | 69           |     book     | 1062         |     clock     | 203          |
|     vase      | 102          |   scissors   | 242          |  teddy bear   | 349          |
|  hair drier   | 52           |  toothbrush  | 348          |               |              |
|     total     | 107325       |              |              |               |              |[0m
[09/17 07:57:08] d2.data.common INFO: Serializing 37457 elements to byte tensors and concatenating them all ...
[09/17 07:57:08] d2.data.common INFO: Serialized dataset takes 14.72 MiB
[09/17 07:57:08] d2.data.build INFO: Using training sampler TrainingSampler
[09/17 07:57:08] fvcore.common.checkpoint INFO: Loading checkpoint from detectron2://ImageNetPretrained/MSRA/R-101.pkl
[09/17 07:57:08] fvcore.common.file_io INFO: URL https://dl.fbaipublicfiles.com/detectron2/ImageNetPretrained/MSRA/R-101.pkl cached in /home/zzk/.torch/fvcore_cache/detectron2/ImageNetPretrained/MSRA/R-101.pkl
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: Remapping C2 weights ......
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.bias            loaded from res2_0_branch2a_bn_beta           of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.running_mean    loaded from res2_0_branch2a_bn_running_mean   of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.running_var     loaded from res2_0_branch2a_bn_running_var    of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.weight          loaded from res2_0_branch2a_bn_gamma          of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.weight               loaded from res2_0_branch2a_w                 of shape (64, 64, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.bias            loaded from res2_0_branch2b_bn_beta           of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.running_mean    loaded from res2_0_branch2b_bn_running_mean   of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.running_var     loaded from res2_0_branch2b_bn_running_var    of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.weight          loaded from res2_0_branch2b_bn_gamma          of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.weight               loaded from res2_0_branch2b_w                 of shape (64, 64, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.bias            loaded from res2_0_branch2c_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.running_mean    loaded from res2_0_branch2c_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.running_var     loaded from res2_0_branch2c_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.weight          loaded from res2_0_branch2c_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.weight               loaded from res2_0_branch2c_w                 of shape (256, 64, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.bias         loaded from res2_0_branch1_bn_beta            of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.running_mean loaded from res2_0_branch1_bn_running_mean    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.running_var  loaded from res2_0_branch1_bn_running_var     of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.weight       loaded from res2_0_branch1_bn_gamma           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.weight            loaded from res2_0_branch1_w                  of shape (256, 64, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.bias            loaded from res2_1_branch2a_bn_beta           of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.running_mean    loaded from res2_1_branch2a_bn_running_mean   of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.running_var     loaded from res2_1_branch2a_bn_running_var    of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.weight          loaded from res2_1_branch2a_bn_gamma          of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.weight               loaded from res2_1_branch2a_w                 of shape (64, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.bias            loaded from res2_1_branch2b_bn_beta           of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.running_mean    loaded from res2_1_branch2b_bn_running_mean   of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.running_var     loaded from res2_1_branch2b_bn_running_var    of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.weight          loaded from res2_1_branch2b_bn_gamma          of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.weight               loaded from res2_1_branch2b_w                 of shape (64, 64, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.bias            loaded from res2_1_branch2c_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.running_mean    loaded from res2_1_branch2c_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.running_var     loaded from res2_1_branch2c_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.weight          loaded from res2_1_branch2c_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.weight               loaded from res2_1_branch2c_w                 of shape (256, 64, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.bias            loaded from res2_2_branch2a_bn_beta           of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.running_mean    loaded from res2_2_branch2a_bn_running_mean   of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.running_var     loaded from res2_2_branch2a_bn_running_var    of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.weight          loaded from res2_2_branch2a_bn_gamma          of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.weight               loaded from res2_2_branch2a_w                 of shape (64, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.bias            loaded from res2_2_branch2b_bn_beta           of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.running_mean    loaded from res2_2_branch2b_bn_running_mean   of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.running_var     loaded from res2_2_branch2b_bn_running_var    of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.weight          loaded from res2_2_branch2b_bn_gamma          of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.weight               loaded from res2_2_branch2b_w                 of shape (64, 64, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.bias            loaded from res2_2_branch2c_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.running_mean    loaded from res2_2_branch2c_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.running_var     loaded from res2_2_branch2c_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.weight          loaded from res2_2_branch2c_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.weight               loaded from res2_2_branch2c_w                 of shape (256, 64, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.bias            loaded from res3_0_branch2a_bn_beta           of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.running_mean    loaded from res3_0_branch2a_bn_running_mean   of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.running_var     loaded from res3_0_branch2a_bn_running_var    of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.weight          loaded from res3_0_branch2a_bn_gamma          of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.weight               loaded from res3_0_branch2a_w                 of shape (128, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.bias            loaded from res3_0_branch2b_bn_beta           of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.running_mean    loaded from res3_0_branch2b_bn_running_mean   of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.running_var     loaded from res3_0_branch2b_bn_running_var    of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.weight          loaded from res3_0_branch2b_bn_gamma          of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.weight               loaded from res3_0_branch2b_w                 of shape (128, 128, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.bias            loaded from res3_0_branch2c_bn_beta           of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.running_mean    loaded from res3_0_branch2c_bn_running_mean   of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.running_var     loaded from res3_0_branch2c_bn_running_var    of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.weight          loaded from res3_0_branch2c_bn_gamma          of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.weight               loaded from res3_0_branch2c_w                 of shape (512, 128, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.bias         loaded from res3_0_branch1_bn_beta            of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.running_mean loaded from res3_0_branch1_bn_running_mean    of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.running_var  loaded from res3_0_branch1_bn_running_var     of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.weight       loaded from res3_0_branch1_bn_gamma           of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.weight            loaded from res3_0_branch1_w                  of shape (512, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.bias            loaded from res3_1_branch2a_bn_beta           of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.running_mean    loaded from res3_1_branch2a_bn_running_mean   of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.running_var     loaded from res3_1_branch2a_bn_running_var    of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.weight          loaded from res3_1_branch2a_bn_gamma          of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.weight               loaded from res3_1_branch2a_w                 of shape (128, 512, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.bias            loaded from res3_1_branch2b_bn_beta           of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.running_mean    loaded from res3_1_branch2b_bn_running_mean   of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.running_var     loaded from res3_1_branch2b_bn_running_var    of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.weight          loaded from res3_1_branch2b_bn_gamma          of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.weight               loaded from res3_1_branch2b_w                 of shape (128, 128, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.bias            loaded from res3_1_branch2c_bn_beta           of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.running_mean    loaded from res3_1_branch2c_bn_running_mean   of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.running_var     loaded from res3_1_branch2c_bn_running_var    of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.weight          loaded from res3_1_branch2c_bn_gamma          of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.weight               loaded from res3_1_branch2c_w                 of shape (512, 128, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.bias            loaded from res3_2_branch2a_bn_beta           of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.running_mean    loaded from res3_2_branch2a_bn_running_mean   of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.running_var     loaded from res3_2_branch2a_bn_running_var    of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.weight          loaded from res3_2_branch2a_bn_gamma          of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.weight               loaded from res3_2_branch2a_w                 of shape (128, 512, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.bias            loaded from res3_2_branch2b_bn_beta           of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.running_mean    loaded from res3_2_branch2b_bn_running_mean   of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.running_var     loaded from res3_2_branch2b_bn_running_var    of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.weight          loaded from res3_2_branch2b_bn_gamma          of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.weight               loaded from res3_2_branch2b_w                 of shape (128, 128, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.bias            loaded from res3_2_branch2c_bn_beta           of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.running_mean    loaded from res3_2_branch2c_bn_running_mean   of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.running_var     loaded from res3_2_branch2c_bn_running_var    of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.weight          loaded from res3_2_branch2c_bn_gamma          of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.weight               loaded from res3_2_branch2c_w                 of shape (512, 128, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.bias            loaded from res3_3_branch2a_bn_beta           of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.running_mean    loaded from res3_3_branch2a_bn_running_mean   of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.running_var     loaded from res3_3_branch2a_bn_running_var    of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.weight          loaded from res3_3_branch2a_bn_gamma          of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.weight               loaded from res3_3_branch2a_w                 of shape (128, 512, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.bias            loaded from res3_3_branch2b_bn_beta           of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.running_mean    loaded from res3_3_branch2b_bn_running_mean   of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.running_var     loaded from res3_3_branch2b_bn_running_var    of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.weight          loaded from res3_3_branch2b_bn_gamma          of shape (128,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.weight               loaded from res3_3_branch2b_w                 of shape (128, 128, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.bias            loaded from res3_3_branch2c_bn_beta           of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.running_mean    loaded from res3_3_branch2c_bn_running_mean   of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.running_var     loaded from res3_3_branch2c_bn_running_var    of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.weight          loaded from res3_3_branch2c_bn_gamma          of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.weight               loaded from res3_3_branch2c_w                 of shape (512, 128, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.bias            loaded from res4_0_branch2a_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.running_mean    loaded from res4_0_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.running_var     loaded from res4_0_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.weight          loaded from res4_0_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.weight               loaded from res4_0_branch2a_w                 of shape (256, 512, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.bias            loaded from res4_0_branch2b_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.running_mean    loaded from res4_0_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.running_var     loaded from res4_0_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.weight          loaded from res4_0_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.weight               loaded from res4_0_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.bias            loaded from res4_0_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.running_mean    loaded from res4_0_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.running_var     loaded from res4_0_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.weight          loaded from res4_0_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.weight               loaded from res4_0_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.bias         loaded from res4_0_branch1_bn_beta            of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.running_mean loaded from res4_0_branch1_bn_running_mean    of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.running_var  loaded from res4_0_branch1_bn_running_var     of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.weight       loaded from res4_0_branch1_bn_gamma           of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.weight            loaded from res4_0_branch1_w                  of shape (1024, 512, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.bias            loaded from res4_1_branch2a_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.running_mean    loaded from res4_1_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.running_var     loaded from res4_1_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.weight          loaded from res4_1_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.weight               loaded from res4_1_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.bias            loaded from res4_1_branch2b_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.running_mean    loaded from res4_1_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.running_var     loaded from res4_1_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.weight          loaded from res4_1_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.weight               loaded from res4_1_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.bias            loaded from res4_1_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.running_mean    loaded from res4_1_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.running_var     loaded from res4_1_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.weight          loaded from res4_1_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.weight               loaded from res4_1_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.norm.bias           loaded from res4_10_branch2a_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.norm.running_mean   loaded from res4_10_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.norm.running_var    loaded from res4_10_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.norm.weight         loaded from res4_10_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.weight              loaded from res4_10_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.norm.bias           loaded from res4_10_branch2b_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.norm.running_mean   loaded from res4_10_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.norm.running_var    loaded from res4_10_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.norm.weight         loaded from res4_10_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.weight              loaded from res4_10_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.norm.bias           loaded from res4_10_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.norm.running_mean   loaded from res4_10_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.norm.running_var    loaded from res4_10_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.norm.weight         loaded from res4_10_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.weight              loaded from res4_10_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.norm.bias           loaded from res4_11_branch2a_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.norm.running_mean   loaded from res4_11_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.norm.running_var    loaded from res4_11_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.norm.weight         loaded from res4_11_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.weight              loaded from res4_11_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.norm.bias           loaded from res4_11_branch2b_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.norm.running_mean   loaded from res4_11_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.norm.running_var    loaded from res4_11_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.norm.weight         loaded from res4_11_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.weight              loaded from res4_11_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.norm.bias           loaded from res4_11_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.norm.running_mean   loaded from res4_11_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.norm.running_var    loaded from res4_11_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.norm.weight         loaded from res4_11_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.weight              loaded from res4_11_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.norm.bias           loaded from res4_12_branch2a_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.norm.running_mean   loaded from res4_12_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.norm.running_var    loaded from res4_12_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.norm.weight         loaded from res4_12_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.weight              loaded from res4_12_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.norm.bias           loaded from res4_12_branch2b_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.norm.running_mean   loaded from res4_12_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.norm.running_var    loaded from res4_12_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.norm.weight         loaded from res4_12_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.weight              loaded from res4_12_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.norm.bias           loaded from res4_12_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.norm.running_mean   loaded from res4_12_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.norm.running_var    loaded from res4_12_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.norm.weight         loaded from res4_12_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.weight              loaded from res4_12_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.norm.bias           loaded from res4_13_branch2a_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.norm.running_mean   loaded from res4_13_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.norm.running_var    loaded from res4_13_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.norm.weight         loaded from res4_13_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.weight              loaded from res4_13_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.norm.bias           loaded from res4_13_branch2b_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.norm.running_mean   loaded from res4_13_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.norm.running_var    loaded from res4_13_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.norm.weight         loaded from res4_13_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.weight              loaded from res4_13_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.norm.bias           loaded from res4_13_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.norm.running_mean   loaded from res4_13_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.norm.running_var    loaded from res4_13_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.norm.weight         loaded from res4_13_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.weight              loaded from res4_13_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.norm.bias           loaded from res4_14_branch2a_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.norm.running_mean   loaded from res4_14_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.norm.running_var    loaded from res4_14_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.norm.weight         loaded from res4_14_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.weight              loaded from res4_14_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.norm.bias           loaded from res4_14_branch2b_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.norm.running_mean   loaded from res4_14_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.norm.running_var    loaded from res4_14_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.norm.weight         loaded from res4_14_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.weight              loaded from res4_14_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.norm.bias           loaded from res4_14_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.norm.running_mean   loaded from res4_14_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.norm.running_var    loaded from res4_14_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.norm.weight         loaded from res4_14_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.weight              loaded from res4_14_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.norm.bias           loaded from res4_15_branch2a_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.norm.running_mean   loaded from res4_15_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.norm.running_var    loaded from res4_15_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.norm.weight         loaded from res4_15_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.weight              loaded from res4_15_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.norm.bias           loaded from res4_15_branch2b_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.norm.running_mean   loaded from res4_15_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.norm.running_var    loaded from res4_15_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.norm.weight         loaded from res4_15_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.weight              loaded from res4_15_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.norm.bias           loaded from res4_15_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.norm.running_mean   loaded from res4_15_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.norm.running_var    loaded from res4_15_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.norm.weight         loaded from res4_15_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.weight              loaded from res4_15_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.norm.bias           loaded from res4_16_branch2a_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.norm.running_mean   loaded from res4_16_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.norm.running_var    loaded from res4_16_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.norm.weight         loaded from res4_16_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.weight              loaded from res4_16_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.norm.bias           loaded from res4_16_branch2b_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.norm.running_mean   loaded from res4_16_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.norm.running_var    loaded from res4_16_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.norm.weight         loaded from res4_16_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.weight              loaded from res4_16_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.norm.bias           loaded from res4_16_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.norm.running_mean   loaded from res4_16_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.norm.running_var    loaded from res4_16_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.norm.weight         loaded from res4_16_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.weight              loaded from res4_16_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.norm.bias           loaded from res4_17_branch2a_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.norm.running_mean   loaded from res4_17_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.norm.running_var    loaded from res4_17_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.norm.weight         loaded from res4_17_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.weight              loaded from res4_17_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.norm.bias           loaded from res4_17_branch2b_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.norm.running_mean   loaded from res4_17_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.norm.running_var    loaded from res4_17_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.norm.weight         loaded from res4_17_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.weight              loaded from res4_17_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.norm.bias           loaded from res4_17_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.norm.running_mean   loaded from res4_17_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.norm.running_var    loaded from res4_17_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.norm.weight         loaded from res4_17_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.weight              loaded from res4_17_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.norm.bias           loaded from res4_18_branch2a_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.norm.running_mean   loaded from res4_18_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.norm.running_var    loaded from res4_18_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.norm.weight         loaded from res4_18_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.weight              loaded from res4_18_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.norm.bias           loaded from res4_18_branch2b_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.norm.running_mean   loaded from res4_18_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.norm.running_var    loaded from res4_18_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.norm.weight         loaded from res4_18_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.weight              loaded from res4_18_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.norm.bias           loaded from res4_18_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.norm.running_mean   loaded from res4_18_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.norm.running_var    loaded from res4_18_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.norm.weight         loaded from res4_18_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.weight              loaded from res4_18_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.norm.bias           loaded from res4_19_branch2a_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.norm.running_mean   loaded from res4_19_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.norm.running_var    loaded from res4_19_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.norm.weight         loaded from res4_19_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.weight              loaded from res4_19_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.norm.bias           loaded from res4_19_branch2b_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.norm.running_mean   loaded from res4_19_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.norm.running_var    loaded from res4_19_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.norm.weight         loaded from res4_19_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.weight              loaded from res4_19_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.norm.bias           loaded from res4_19_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.norm.running_mean   loaded from res4_19_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.norm.running_var    loaded from res4_19_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.norm.weight         loaded from res4_19_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.weight              loaded from res4_19_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.bias            loaded from res4_2_branch2a_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.running_mean    loaded from res4_2_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.running_var     loaded from res4_2_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.weight          loaded from res4_2_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.weight               loaded from res4_2_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.bias            loaded from res4_2_branch2b_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.running_mean    loaded from res4_2_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.running_var     loaded from res4_2_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.weight          loaded from res4_2_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.weight               loaded from res4_2_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.bias            loaded from res4_2_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.running_mean    loaded from res4_2_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.running_var     loaded from res4_2_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.weight          loaded from res4_2_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.weight               loaded from res4_2_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.norm.bias           loaded from res4_20_branch2a_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.norm.running_mean   loaded from res4_20_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.norm.running_var    loaded from res4_20_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.norm.weight         loaded from res4_20_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.weight              loaded from res4_20_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.norm.bias           loaded from res4_20_branch2b_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.norm.running_mean   loaded from res4_20_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.norm.running_var    loaded from res4_20_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.norm.weight         loaded from res4_20_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.weight              loaded from res4_20_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.norm.bias           loaded from res4_20_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.norm.running_mean   loaded from res4_20_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.norm.running_var    loaded from res4_20_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.norm.weight         loaded from res4_20_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.weight              loaded from res4_20_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.norm.bias           loaded from res4_21_branch2a_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.norm.running_mean   loaded from res4_21_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.norm.running_var    loaded from res4_21_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.norm.weight         loaded from res4_21_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.weight              loaded from res4_21_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.norm.bias           loaded from res4_21_branch2b_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.norm.running_mean   loaded from res4_21_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.norm.running_var    loaded from res4_21_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.norm.weight         loaded from res4_21_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.weight              loaded from res4_21_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.norm.bias           loaded from res4_21_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.norm.running_mean   loaded from res4_21_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.norm.running_var    loaded from res4_21_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.norm.weight         loaded from res4_21_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.weight              loaded from res4_21_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.norm.bias           loaded from res4_22_branch2a_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.norm.running_mean   loaded from res4_22_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.norm.running_var    loaded from res4_22_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.norm.weight         loaded from res4_22_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.weight              loaded from res4_22_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.norm.bias           loaded from res4_22_branch2b_bn_beta          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.norm.running_mean   loaded from res4_22_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.norm.running_var    loaded from res4_22_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.norm.weight         loaded from res4_22_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.weight              loaded from res4_22_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.norm.bias           loaded from res4_22_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.norm.running_mean   loaded from res4_22_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.norm.running_var    loaded from res4_22_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.norm.weight         loaded from res4_22_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.weight              loaded from res4_22_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.bias            loaded from res4_3_branch2a_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.running_mean    loaded from res4_3_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.running_var     loaded from res4_3_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.weight          loaded from res4_3_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.weight               loaded from res4_3_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.bias            loaded from res4_3_branch2b_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.running_mean    loaded from res4_3_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.running_var     loaded from res4_3_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.weight          loaded from res4_3_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.weight               loaded from res4_3_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.bias            loaded from res4_3_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.running_mean    loaded from res4_3_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.running_var     loaded from res4_3_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.weight          loaded from res4_3_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.weight               loaded from res4_3_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.bias            loaded from res4_4_branch2a_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.running_mean    loaded from res4_4_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.running_var     loaded from res4_4_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.weight          loaded from res4_4_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.weight               loaded from res4_4_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.bias            loaded from res4_4_branch2b_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.running_mean    loaded from res4_4_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.running_var     loaded from res4_4_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.weight          loaded from res4_4_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.weight               loaded from res4_4_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.bias            loaded from res4_4_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.running_mean    loaded from res4_4_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.running_var     loaded from res4_4_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.weight          loaded from res4_4_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.weight               loaded from res4_4_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.bias            loaded from res4_5_branch2a_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.running_mean    loaded from res4_5_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.running_var     loaded from res4_5_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.weight          loaded from res4_5_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.weight               loaded from res4_5_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.bias            loaded from res4_5_branch2b_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.running_mean    loaded from res4_5_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.running_var     loaded from res4_5_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.weight          loaded from res4_5_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.weight               loaded from res4_5_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.bias            loaded from res4_5_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.running_mean    loaded from res4_5_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.running_var     loaded from res4_5_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.weight          loaded from res4_5_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.weight               loaded from res4_5_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.norm.bias            loaded from res4_6_branch2a_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.norm.running_mean    loaded from res4_6_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.norm.running_var     loaded from res4_6_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.norm.weight          loaded from res4_6_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.weight               loaded from res4_6_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.norm.bias            loaded from res4_6_branch2b_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.norm.running_mean    loaded from res4_6_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.norm.running_var     loaded from res4_6_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.norm.weight          loaded from res4_6_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.weight               loaded from res4_6_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.norm.bias            loaded from res4_6_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.norm.running_mean    loaded from res4_6_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.norm.running_var     loaded from res4_6_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.norm.weight          loaded from res4_6_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.weight               loaded from res4_6_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.norm.bias            loaded from res4_7_branch2a_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.norm.running_mean    loaded from res4_7_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.norm.running_var     loaded from res4_7_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.norm.weight          loaded from res4_7_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.weight               loaded from res4_7_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.norm.bias            loaded from res4_7_branch2b_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.norm.running_mean    loaded from res4_7_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.norm.running_var     loaded from res4_7_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.norm.weight          loaded from res4_7_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.weight               loaded from res4_7_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.norm.bias            loaded from res4_7_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.norm.running_mean    loaded from res4_7_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.norm.running_var     loaded from res4_7_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.norm.weight          loaded from res4_7_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.weight               loaded from res4_7_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.norm.bias            loaded from res4_8_branch2a_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.norm.running_mean    loaded from res4_8_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.norm.running_var     loaded from res4_8_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.norm.weight          loaded from res4_8_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.weight               loaded from res4_8_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.norm.bias            loaded from res4_8_branch2b_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.norm.running_mean    loaded from res4_8_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.norm.running_var     loaded from res4_8_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.norm.weight          loaded from res4_8_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.weight               loaded from res4_8_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.norm.bias            loaded from res4_8_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.norm.running_mean    loaded from res4_8_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.norm.running_var     loaded from res4_8_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.norm.weight          loaded from res4_8_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.weight               loaded from res4_8_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.norm.bias            loaded from res4_9_branch2a_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.norm.running_mean    loaded from res4_9_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.norm.running_var     loaded from res4_9_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.norm.weight          loaded from res4_9_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.weight               loaded from res4_9_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.norm.bias            loaded from res4_9_branch2b_bn_beta           of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.norm.running_mean    loaded from res4_9_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.norm.running_var     loaded from res4_9_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.norm.weight          loaded from res4_9_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.weight               loaded from res4_9_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.norm.bias            loaded from res4_9_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.norm.running_mean    loaded from res4_9_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.norm.running_var     loaded from res4_9_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.norm.weight          loaded from res4_9_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.weight               loaded from res4_9_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.bias            loaded from res5_0_branch2a_bn_beta           of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.running_mean    loaded from res5_0_branch2a_bn_running_mean   of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.running_var     loaded from res5_0_branch2a_bn_running_var    of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.weight          loaded from res5_0_branch2a_bn_gamma          of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.weight               loaded from res5_0_branch2a_w                 of shape (512, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.bias            loaded from res5_0_branch2b_bn_beta           of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.running_mean    loaded from res5_0_branch2b_bn_running_mean   of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.running_var     loaded from res5_0_branch2b_bn_running_var    of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.weight          loaded from res5_0_branch2b_bn_gamma          of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.weight               loaded from res5_0_branch2b_w                 of shape (512, 512, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.bias            loaded from res5_0_branch2c_bn_beta           of shape (2048,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.running_mean    loaded from res5_0_branch2c_bn_running_mean   of shape (2048,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.running_var     loaded from res5_0_branch2c_bn_running_var    of shape (2048,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.weight          loaded from res5_0_branch2c_bn_gamma          of shape (2048,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.weight               loaded from res5_0_branch2c_w                 of shape (2048, 512, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.bias         loaded from res5_0_branch1_bn_beta            of shape (2048,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.running_mean loaded from res5_0_branch1_bn_running_mean    of shape (2048,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.running_var  loaded from res5_0_branch1_bn_running_var     of shape (2048,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.weight       loaded from res5_0_branch1_bn_gamma           of shape (2048,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.weight            loaded from res5_0_branch1_w                  of shape (2048, 1024, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.bias            loaded from res5_1_branch2a_bn_beta           of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.running_mean    loaded from res5_1_branch2a_bn_running_mean   of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.running_var     loaded from res5_1_branch2a_bn_running_var    of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.weight          loaded from res5_1_branch2a_bn_gamma          of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.weight               loaded from res5_1_branch2a_w                 of shape (512, 2048, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.bias            loaded from res5_1_branch2b_bn_beta           of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.running_mean    loaded from res5_1_branch2b_bn_running_mean   of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.running_var     loaded from res5_1_branch2b_bn_running_var    of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.weight          loaded from res5_1_branch2b_bn_gamma          of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.weight               loaded from res5_1_branch2b_w                 of shape (512, 512, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.bias            loaded from res5_1_branch2c_bn_beta           of shape (2048,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.running_mean    loaded from res5_1_branch2c_bn_running_mean   of shape (2048,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.running_var     loaded from res5_1_branch2c_bn_running_var    of shape (2048,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.weight          loaded from res5_1_branch2c_bn_gamma          of shape (2048,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.weight               loaded from res5_1_branch2c_w                 of shape (2048, 512, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.bias            loaded from res5_2_branch2a_bn_beta           of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.running_mean    loaded from res5_2_branch2a_bn_running_mean   of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.running_var     loaded from res5_2_branch2a_bn_running_var    of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.weight          loaded from res5_2_branch2a_bn_gamma          of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.weight               loaded from res5_2_branch2a_w                 of shape (512, 2048, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.bias            loaded from res5_2_branch2b_bn_beta           of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.running_mean    loaded from res5_2_branch2b_bn_running_mean   of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.running_var     loaded from res5_2_branch2b_bn_running_var    of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.weight          loaded from res5_2_branch2b_bn_gamma          of shape (512,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.weight               loaded from res5_2_branch2b_w                 of shape (512, 512, 3, 3)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.bias            loaded from res5_2_branch2c_bn_beta           of shape (2048,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.running_mean    loaded from res5_2_branch2c_bn_running_mean   of shape (2048,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.running_var     loaded from res5_2_branch2c_bn_running_var    of shape (2048,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.weight          loaded from res5_2_branch2c_bn_gamma          of shape (2048,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.weight               loaded from res5_2_branch2c_w                 of shape (2048, 512, 1, 1)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.bias              loaded from res_conv1_bn_beta                 of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.running_mean      loaded from res_conv1_bn_running_mean         of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.running_var       loaded from res_conv1_bn_running_var          of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.weight            loaded from res_conv1_bn_gamma                of shape (64,)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.weight                 loaded from conv1_w                           of shape (64, 3, 7, 7)
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.fpn_lateral3.{bias, weight}[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mbackbone.fpn_output3.{bias, weight}[0m
  [34mbackbone.fpn_output4.{bias, weight}[0m
  [34mbackbone.fpn_output5.{bias, weight}[0m
  [34mbackbone.top_block.p6.{bias, weight}[0m
  [34mbackbone.top_block.p7.{bias, weight}[0m
  [34mpixel_mean[0m
  [34mpixel_std[0m
  [34mproposal_generator.fcos_head.bbox_pred.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.0.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.1.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.10.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.3.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.4.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.6.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.7.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.9.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_logits.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.0.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.1.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.10.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.3.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.4.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.6.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.7.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.9.{bias, weight}[0m
  [34mproposal_generator.fcos_head.controller.{bias, weight}[0m
  [34mproposal_generator.fcos_head.ctrness.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.0.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.1.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.10.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.12.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.13.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.15.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.16.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.18.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.19.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.21.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.22.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.3.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.4.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.6.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.7.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.9.{bias, weight}[0m
  [34mproposal_generator.fcos_head.scales.0.scale[0m
  [34mproposal_generator.fcos_head.scales.1.scale[0m
  [34mproposal_generator.fcos_head.scales.2.scale[0m
  [34mproposal_generator.fcos_head.scales.3.scale[0m
  [34mproposal_generator.fcos_head.scales.4.scale[0m
[09/17 07:57:08] d2.checkpoint.c2_model_loading INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000_b[0m
  [35mfc1000_w[0m
[09/17 07:57:19] detectron2 INFO: Rank of current process: 0. World size: 1
[09/17 07:57:21] detectron2 INFO: Environment info:
----------------------  -------------------------------------------------------------
sys.platform            linux
Python                  3.7.1 (default, Sep  3 2020, 23:56:06) [GCC 5.4.0 20160609]
numpy                   1.19.1
detectron2              0.2.1 @/home/zzk/workspace/detectron2/detectron2
Compiler                GCC 6.5
CUDA compiler           CUDA 11.0
detectron2 arch flags   7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/zzk/py37/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2               GeForce RTX 2080 Ti (arch=7.5)
CUDA_HOME               /usr/local/cuda
Pillow                  7.2.0
torchvision             0.5.0 @/home/zzk/py37/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20200912
cv2                     4.4.0
----------------------  -------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[09/17 07:57:21] detectron2 INFO: Command line arguments: Namespace(config_file='configs/CondInst/MS_R_101_3x.yaml', dist_url='tcp://127.0.0.1:50155', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[09/17 07:57:21] detectron2 INFO: Contents of args.config_file=configs/CondInst/MS_R_101_3x.yaml:
_BASE_: "Base-FCOS.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"
  RESNETS:
    DEPTH: 101
SOLVER:
  STEPS: (60000, 80000)
  MAX_ITER: 90000
OUTPUT_DIR: "output/fcos/R_101_3x"

[09/17 07:57:21] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('HICO-det-test',)
  TRAIN: ('HICO-det-train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: bitmask
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_fcos_resnet_fpn_backbone
  DEVICE: cuda
  FCOS:
    CENTER_SAMPLE: True
    FPN_STRIDES: [8, 16, 32, 64, 128]
    INFERENCE_TH_TEST: 0.05
    INFERENCE_TH_TRAIN: 0.05
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    LOC_LOSS_TYPE: giou
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.6
    NORM: GN
    NUM_BOX_CONVS: 4
    NUM_CLASSES: 80
    NUM_CLS_CONVS: 4
    NUM_SHARE_CONVS: 0
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 100
    POS_RADIUS: 1.5
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 1000
    PRIOR_PROB: 0.01
    SIZES_OF_INTEREST: [64, 128, 256, 512]
    THRESH_WITH_CTR: False
    TOP_LEVELS: 2
    USE_DEFORMABLE: False
    USE_RELU: True
    USE_SCALE: True
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: OneStageDetector
  MOBILENET: False
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FCOS
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  VOVNET:
    BACKBONE_OUT_CHANNELS: 256
    CONV_BODY: V-39-eSE
    NORM: FrozenBN
    OUT_CHANNELS: 256
    OUT_FEATURES: ['stage2', 'stage3', 'stage4', 'stage5']
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-101.pkl
OUTPUT_DIR: output/fcos/R_101_3x
SEED: -1
SOLVER:
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[09/17 07:57:21] detectron2 INFO: Full config saved to output/fcos/R_101_3x/config.yaml
[09/17 07:57:21] d2.utils.env INFO: Using a generated random seed 21784885
[09/17 07:57:23] d2.engine.defaults INFO: Model:
OneStageDetector(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): FCOS(
    (iou_loss): IOULoss()
    (fcos_head): FCOSHead(
      (cls_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (bbox_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (share_tower): Sequential()
      (mask_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (13): GroupNorm(32, 256, eps=1e-05, affine=True)
        (14): ReLU()
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (16): GroupNorm(32, 256, eps=1e-05, affine=True)
        (17): ReLU()
        (18): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (19): GroupNorm(32, 256, eps=1e-05, affine=True)
        (20): ReLU()
        (21): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (22): GroupNorm(32, 256, eps=1e-05, affine=True)
        (23): ReLU()
      )
      (cls_logits): Conv2d(256, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bbox_pred): Conv2d(256, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (ctrness): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (controller): Conv2d(256, 169, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
        (3): Scale()
        (4): Scale()
      )
    )
  )
)
[09/17 07:57:23] d2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[09/17 07:57:24] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/17 07:57:24] d2.data.datasets.coco INFO: Loaded 38116 images in COCO format from /data01/zzk/data/hico_20160224_det/hico_annotations_train2015.json
[09/17 07:57:24] d2.data.build INFO: Removed 659 images with no usable annotations. 37457 images left.
[09/17 07:57:25] d2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 59249        |   bicycle    | 3249         |      car      | 1060         |
|  motorcycle   | 2119         |   airplane   | 607          |      bus      | 925          |
|     train     | 439          |    truck     | 401          |     boat      | 1689         |
| traffic light | 171          | fire hydrant | 128          |   stop sign   | 49           |
| parking meter | 163          |    bench     | 1470         |     bird      | 550          |
|      cat      | 254          |     dog      | 718          |     horse     | 1912         |
|     sheep     | 909          |     cow      | 717          |   elephant    | 567          |
|     bear      | 90           |    zebra     | 50           |    giraffe    | 320          |
|   backpack    | 1205         |   umbrella   | 1693         |    handbag    | 192          |
|      tie      | 909          |   suitcase   | 608          |    frisbee    | 780          |
|     skis      | 1146         |  snowboard   | 824          |  sports ball  | 947          |
|     kite      | 1066         | baseball bat | 745          | baseball gl.. | 203          |
|  skateboard   | 2466         |  surfboard   | 618          | tennis racket | 295          |
|    bottle     | 890          |  wine glass  | 693          |      cup      | 454          |
|     fork      | 178          |    knife     | 636          |     spoon     | 274          |
|     bowl      | 130          |    banana    | 850          |     apple     | 283          |
|   sandwich    | 269          |    orange    | 74           |   broccoli    | 93           |
|    carrot     | 269          |   hot dog    | 374          |     pizza     | 424          |
|     donut     | 417          |     cake     | 787          |     chair     | 1425         |
|     couch     | 767          | potted plant | 143          |      bed      | 435          |
| dining table  | 1019         |    toilet    | 172          |      tv       | 251          |
|    laptop     | 719          |    mouse     | 70           |    remote     | 198          |
|   keyboard    | 323          |  cell phone  | 547          |   microwave   | 26           |
|     oven      | 122          |   toaster    | 7            |     sink      | 76           |
| refrigerator  | 69           |     book     | 1062         |     clock     | 203          |
|     vase      | 102          |   scissors   | 242          |  teddy bear   | 349          |
|  hair drier   | 52           |  toothbrush  | 348          |               |              |
|     total     | 107325       |              |              |               |              |[0m
[09/17 07:57:25] d2.data.common INFO: Serializing 37457 elements to byte tensors and concatenating them all ...
[09/17 07:57:25] d2.data.common INFO: Serialized dataset takes 14.72 MiB
[09/17 07:57:25] d2.data.build INFO: Using training sampler TrainingSampler
[09/17 07:57:25] fvcore.common.checkpoint INFO: Loading checkpoint from detectron2://ImageNetPretrained/MSRA/R-101.pkl
[09/17 07:57:25] fvcore.common.file_io INFO: URL https://dl.fbaipublicfiles.com/detectron2/ImageNetPretrained/MSRA/R-101.pkl cached in /home/zzk/.torch/fvcore_cache/detectron2/ImageNetPretrained/MSRA/R-101.pkl
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: Remapping C2 weights ......
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.bias            loaded from res2_0_branch2a_bn_beta           of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.running_mean    loaded from res2_0_branch2a_bn_running_mean   of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.running_var     loaded from res2_0_branch2a_bn_running_var    of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.weight          loaded from res2_0_branch2a_bn_gamma          of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.weight               loaded from res2_0_branch2a_w                 of shape (64, 64, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.bias            loaded from res2_0_branch2b_bn_beta           of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.running_mean    loaded from res2_0_branch2b_bn_running_mean   of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.running_var     loaded from res2_0_branch2b_bn_running_var    of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.weight          loaded from res2_0_branch2b_bn_gamma          of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.weight               loaded from res2_0_branch2b_w                 of shape (64, 64, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.bias            loaded from res2_0_branch2c_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.running_mean    loaded from res2_0_branch2c_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.running_var     loaded from res2_0_branch2c_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.weight          loaded from res2_0_branch2c_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.weight               loaded from res2_0_branch2c_w                 of shape (256, 64, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.bias         loaded from res2_0_branch1_bn_beta            of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.running_mean loaded from res2_0_branch1_bn_running_mean    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.running_var  loaded from res2_0_branch1_bn_running_var     of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.weight       loaded from res2_0_branch1_bn_gamma           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.weight            loaded from res2_0_branch1_w                  of shape (256, 64, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.bias            loaded from res2_1_branch2a_bn_beta           of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.running_mean    loaded from res2_1_branch2a_bn_running_mean   of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.running_var     loaded from res2_1_branch2a_bn_running_var    of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.weight          loaded from res2_1_branch2a_bn_gamma          of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.weight               loaded from res2_1_branch2a_w                 of shape (64, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.bias            loaded from res2_1_branch2b_bn_beta           of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.running_mean    loaded from res2_1_branch2b_bn_running_mean   of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.running_var     loaded from res2_1_branch2b_bn_running_var    of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.weight          loaded from res2_1_branch2b_bn_gamma          of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.weight               loaded from res2_1_branch2b_w                 of shape (64, 64, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.bias            loaded from res2_1_branch2c_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.running_mean    loaded from res2_1_branch2c_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.running_var     loaded from res2_1_branch2c_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.weight          loaded from res2_1_branch2c_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.weight               loaded from res2_1_branch2c_w                 of shape (256, 64, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.bias            loaded from res2_2_branch2a_bn_beta           of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.running_mean    loaded from res2_2_branch2a_bn_running_mean   of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.running_var     loaded from res2_2_branch2a_bn_running_var    of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.weight          loaded from res2_2_branch2a_bn_gamma          of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.weight               loaded from res2_2_branch2a_w                 of shape (64, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.bias            loaded from res2_2_branch2b_bn_beta           of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.running_mean    loaded from res2_2_branch2b_bn_running_mean   of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.running_var     loaded from res2_2_branch2b_bn_running_var    of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.weight          loaded from res2_2_branch2b_bn_gamma          of shape (64,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.weight               loaded from res2_2_branch2b_w                 of shape (64, 64, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.bias            loaded from res2_2_branch2c_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.running_mean    loaded from res2_2_branch2c_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.running_var     loaded from res2_2_branch2c_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.weight          loaded from res2_2_branch2c_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.weight               loaded from res2_2_branch2c_w                 of shape (256, 64, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.bias            loaded from res3_0_branch2a_bn_beta           of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.running_mean    loaded from res3_0_branch2a_bn_running_mean   of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.running_var     loaded from res3_0_branch2a_bn_running_var    of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.weight          loaded from res3_0_branch2a_bn_gamma          of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.weight               loaded from res3_0_branch2a_w                 of shape (128, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.bias            loaded from res3_0_branch2b_bn_beta           of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.running_mean    loaded from res3_0_branch2b_bn_running_mean   of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.running_var     loaded from res3_0_branch2b_bn_running_var    of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.weight          loaded from res3_0_branch2b_bn_gamma          of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.weight               loaded from res3_0_branch2b_w                 of shape (128, 128, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.bias            loaded from res3_0_branch2c_bn_beta           of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.running_mean    loaded from res3_0_branch2c_bn_running_mean   of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.running_var     loaded from res3_0_branch2c_bn_running_var    of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.weight          loaded from res3_0_branch2c_bn_gamma          of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.weight               loaded from res3_0_branch2c_w                 of shape (512, 128, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.bias         loaded from res3_0_branch1_bn_beta            of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.running_mean loaded from res3_0_branch1_bn_running_mean    of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.running_var  loaded from res3_0_branch1_bn_running_var     of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.weight       loaded from res3_0_branch1_bn_gamma           of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.weight            loaded from res3_0_branch1_w                  of shape (512, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.bias            loaded from res3_1_branch2a_bn_beta           of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.running_mean    loaded from res3_1_branch2a_bn_running_mean   of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.running_var     loaded from res3_1_branch2a_bn_running_var    of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.weight          loaded from res3_1_branch2a_bn_gamma          of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.weight               loaded from res3_1_branch2a_w                 of shape (128, 512, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.bias            loaded from res3_1_branch2b_bn_beta           of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.running_mean    loaded from res3_1_branch2b_bn_running_mean   of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.running_var     loaded from res3_1_branch2b_bn_running_var    of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.weight          loaded from res3_1_branch2b_bn_gamma          of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.weight               loaded from res3_1_branch2b_w                 of shape (128, 128, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.bias            loaded from res3_1_branch2c_bn_beta           of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.running_mean    loaded from res3_1_branch2c_bn_running_mean   of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.running_var     loaded from res3_1_branch2c_bn_running_var    of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.weight          loaded from res3_1_branch2c_bn_gamma          of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.weight               loaded from res3_1_branch2c_w                 of shape (512, 128, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.bias            loaded from res3_2_branch2a_bn_beta           of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.running_mean    loaded from res3_2_branch2a_bn_running_mean   of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.running_var     loaded from res3_2_branch2a_bn_running_var    of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.weight          loaded from res3_2_branch2a_bn_gamma          of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.weight               loaded from res3_2_branch2a_w                 of shape (128, 512, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.bias            loaded from res3_2_branch2b_bn_beta           of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.running_mean    loaded from res3_2_branch2b_bn_running_mean   of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.running_var     loaded from res3_2_branch2b_bn_running_var    of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.weight          loaded from res3_2_branch2b_bn_gamma          of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.weight               loaded from res3_2_branch2b_w                 of shape (128, 128, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.bias            loaded from res3_2_branch2c_bn_beta           of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.running_mean    loaded from res3_2_branch2c_bn_running_mean   of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.running_var     loaded from res3_2_branch2c_bn_running_var    of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.weight          loaded from res3_2_branch2c_bn_gamma          of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.weight               loaded from res3_2_branch2c_w                 of shape (512, 128, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.bias            loaded from res3_3_branch2a_bn_beta           of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.running_mean    loaded from res3_3_branch2a_bn_running_mean   of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.running_var     loaded from res3_3_branch2a_bn_running_var    of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.weight          loaded from res3_3_branch2a_bn_gamma          of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.weight               loaded from res3_3_branch2a_w                 of shape (128, 512, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.bias            loaded from res3_3_branch2b_bn_beta           of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.running_mean    loaded from res3_3_branch2b_bn_running_mean   of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.running_var     loaded from res3_3_branch2b_bn_running_var    of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.weight          loaded from res3_3_branch2b_bn_gamma          of shape (128,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.weight               loaded from res3_3_branch2b_w                 of shape (128, 128, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.bias            loaded from res3_3_branch2c_bn_beta           of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.running_mean    loaded from res3_3_branch2c_bn_running_mean   of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.running_var     loaded from res3_3_branch2c_bn_running_var    of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.weight          loaded from res3_3_branch2c_bn_gamma          of shape (512,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.weight               loaded from res3_3_branch2c_w                 of shape (512, 128, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.bias            loaded from res4_0_branch2a_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.running_mean    loaded from res4_0_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.running_var     loaded from res4_0_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.weight          loaded from res4_0_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.weight               loaded from res4_0_branch2a_w                 of shape (256, 512, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.bias            loaded from res4_0_branch2b_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.running_mean    loaded from res4_0_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.running_var     loaded from res4_0_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.weight          loaded from res4_0_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.weight               loaded from res4_0_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.bias            loaded from res4_0_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.running_mean    loaded from res4_0_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.running_var     loaded from res4_0_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.weight          loaded from res4_0_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.weight               loaded from res4_0_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.bias         loaded from res4_0_branch1_bn_beta            of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.running_mean loaded from res4_0_branch1_bn_running_mean    of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.running_var  loaded from res4_0_branch1_bn_running_var     of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.weight       loaded from res4_0_branch1_bn_gamma           of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.weight            loaded from res4_0_branch1_w                  of shape (1024, 512, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.bias            loaded from res4_1_branch2a_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.running_mean    loaded from res4_1_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.running_var     loaded from res4_1_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.weight          loaded from res4_1_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.weight               loaded from res4_1_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.bias            loaded from res4_1_branch2b_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.running_mean    loaded from res4_1_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.running_var     loaded from res4_1_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.weight          loaded from res4_1_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.weight               loaded from res4_1_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.bias            loaded from res4_1_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.running_mean    loaded from res4_1_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.running_var     loaded from res4_1_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.weight          loaded from res4_1_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.weight               loaded from res4_1_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.norm.bias           loaded from res4_10_branch2a_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.norm.running_mean   loaded from res4_10_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.norm.running_var    loaded from res4_10_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.norm.weight         loaded from res4_10_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.weight              loaded from res4_10_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.norm.bias           loaded from res4_10_branch2b_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.norm.running_mean   loaded from res4_10_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.norm.running_var    loaded from res4_10_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.norm.weight         loaded from res4_10_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.weight              loaded from res4_10_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.norm.bias           loaded from res4_10_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.norm.running_mean   loaded from res4_10_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.norm.running_var    loaded from res4_10_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.norm.weight         loaded from res4_10_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.weight              loaded from res4_10_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.norm.bias           loaded from res4_11_branch2a_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.norm.running_mean   loaded from res4_11_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.norm.running_var    loaded from res4_11_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.norm.weight         loaded from res4_11_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.weight              loaded from res4_11_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.norm.bias           loaded from res4_11_branch2b_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.norm.running_mean   loaded from res4_11_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.norm.running_var    loaded from res4_11_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.norm.weight         loaded from res4_11_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.weight              loaded from res4_11_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.norm.bias           loaded from res4_11_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.norm.running_mean   loaded from res4_11_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.norm.running_var    loaded from res4_11_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.norm.weight         loaded from res4_11_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.weight              loaded from res4_11_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.norm.bias           loaded from res4_12_branch2a_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.norm.running_mean   loaded from res4_12_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.norm.running_var    loaded from res4_12_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.norm.weight         loaded from res4_12_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.weight              loaded from res4_12_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.norm.bias           loaded from res4_12_branch2b_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.norm.running_mean   loaded from res4_12_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.norm.running_var    loaded from res4_12_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.norm.weight         loaded from res4_12_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.weight              loaded from res4_12_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.norm.bias           loaded from res4_12_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.norm.running_mean   loaded from res4_12_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.norm.running_var    loaded from res4_12_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.norm.weight         loaded from res4_12_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.weight              loaded from res4_12_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.norm.bias           loaded from res4_13_branch2a_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.norm.running_mean   loaded from res4_13_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.norm.running_var    loaded from res4_13_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.norm.weight         loaded from res4_13_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.weight              loaded from res4_13_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.norm.bias           loaded from res4_13_branch2b_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.norm.running_mean   loaded from res4_13_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.norm.running_var    loaded from res4_13_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.norm.weight         loaded from res4_13_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.weight              loaded from res4_13_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.norm.bias           loaded from res4_13_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.norm.running_mean   loaded from res4_13_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.norm.running_var    loaded from res4_13_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.norm.weight         loaded from res4_13_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.weight              loaded from res4_13_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.norm.bias           loaded from res4_14_branch2a_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.norm.running_mean   loaded from res4_14_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.norm.running_var    loaded from res4_14_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.norm.weight         loaded from res4_14_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.weight              loaded from res4_14_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.norm.bias           loaded from res4_14_branch2b_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.norm.running_mean   loaded from res4_14_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.norm.running_var    loaded from res4_14_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.norm.weight         loaded from res4_14_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.weight              loaded from res4_14_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.norm.bias           loaded from res4_14_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.norm.running_mean   loaded from res4_14_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.norm.running_var    loaded from res4_14_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.norm.weight         loaded from res4_14_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.weight              loaded from res4_14_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.norm.bias           loaded from res4_15_branch2a_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.norm.running_mean   loaded from res4_15_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.norm.running_var    loaded from res4_15_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.norm.weight         loaded from res4_15_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.weight              loaded from res4_15_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.norm.bias           loaded from res4_15_branch2b_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.norm.running_mean   loaded from res4_15_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.norm.running_var    loaded from res4_15_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.norm.weight         loaded from res4_15_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.weight              loaded from res4_15_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.norm.bias           loaded from res4_15_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.norm.running_mean   loaded from res4_15_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.norm.running_var    loaded from res4_15_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.norm.weight         loaded from res4_15_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.weight              loaded from res4_15_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.norm.bias           loaded from res4_16_branch2a_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.norm.running_mean   loaded from res4_16_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.norm.running_var    loaded from res4_16_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.norm.weight         loaded from res4_16_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.weight              loaded from res4_16_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.norm.bias           loaded from res4_16_branch2b_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.norm.running_mean   loaded from res4_16_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.norm.running_var    loaded from res4_16_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.norm.weight         loaded from res4_16_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.weight              loaded from res4_16_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.norm.bias           loaded from res4_16_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.norm.running_mean   loaded from res4_16_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.norm.running_var    loaded from res4_16_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.norm.weight         loaded from res4_16_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.weight              loaded from res4_16_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.norm.bias           loaded from res4_17_branch2a_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.norm.running_mean   loaded from res4_17_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.norm.running_var    loaded from res4_17_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.norm.weight         loaded from res4_17_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.weight              loaded from res4_17_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.norm.bias           loaded from res4_17_branch2b_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.norm.running_mean   loaded from res4_17_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.norm.running_var    loaded from res4_17_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.norm.weight         loaded from res4_17_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.weight              loaded from res4_17_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.norm.bias           loaded from res4_17_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.norm.running_mean   loaded from res4_17_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.norm.running_var    loaded from res4_17_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.norm.weight         loaded from res4_17_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.weight              loaded from res4_17_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.norm.bias           loaded from res4_18_branch2a_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.norm.running_mean   loaded from res4_18_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.norm.running_var    loaded from res4_18_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.norm.weight         loaded from res4_18_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.weight              loaded from res4_18_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.norm.bias           loaded from res4_18_branch2b_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.norm.running_mean   loaded from res4_18_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.norm.running_var    loaded from res4_18_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.norm.weight         loaded from res4_18_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.weight              loaded from res4_18_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.norm.bias           loaded from res4_18_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.norm.running_mean   loaded from res4_18_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.norm.running_var    loaded from res4_18_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.norm.weight         loaded from res4_18_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.weight              loaded from res4_18_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.norm.bias           loaded from res4_19_branch2a_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.norm.running_mean   loaded from res4_19_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.norm.running_var    loaded from res4_19_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.norm.weight         loaded from res4_19_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.weight              loaded from res4_19_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.norm.bias           loaded from res4_19_branch2b_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.norm.running_mean   loaded from res4_19_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.norm.running_var    loaded from res4_19_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.norm.weight         loaded from res4_19_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.weight              loaded from res4_19_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.norm.bias           loaded from res4_19_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.norm.running_mean   loaded from res4_19_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.norm.running_var    loaded from res4_19_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.norm.weight         loaded from res4_19_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.weight              loaded from res4_19_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.bias            loaded from res4_2_branch2a_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.running_mean    loaded from res4_2_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.running_var     loaded from res4_2_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.weight          loaded from res4_2_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.weight               loaded from res4_2_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.bias            loaded from res4_2_branch2b_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.running_mean    loaded from res4_2_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.running_var     loaded from res4_2_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.weight          loaded from res4_2_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.weight               loaded from res4_2_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.bias            loaded from res4_2_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.running_mean    loaded from res4_2_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.running_var     loaded from res4_2_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.weight          loaded from res4_2_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.weight               loaded from res4_2_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.norm.bias           loaded from res4_20_branch2a_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.norm.running_mean   loaded from res4_20_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.norm.running_var    loaded from res4_20_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.norm.weight         loaded from res4_20_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.weight              loaded from res4_20_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.norm.bias           loaded from res4_20_branch2b_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.norm.running_mean   loaded from res4_20_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.norm.running_var    loaded from res4_20_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.norm.weight         loaded from res4_20_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.weight              loaded from res4_20_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.norm.bias           loaded from res4_20_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.norm.running_mean   loaded from res4_20_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.norm.running_var    loaded from res4_20_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.norm.weight         loaded from res4_20_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.weight              loaded from res4_20_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.norm.bias           loaded from res4_21_branch2a_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.norm.running_mean   loaded from res4_21_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.norm.running_var    loaded from res4_21_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.norm.weight         loaded from res4_21_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.weight              loaded from res4_21_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.norm.bias           loaded from res4_21_branch2b_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.norm.running_mean   loaded from res4_21_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.norm.running_var    loaded from res4_21_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.norm.weight         loaded from res4_21_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.weight              loaded from res4_21_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.norm.bias           loaded from res4_21_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.norm.running_mean   loaded from res4_21_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.norm.running_var    loaded from res4_21_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.norm.weight         loaded from res4_21_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.weight              loaded from res4_21_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.norm.bias           loaded from res4_22_branch2a_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.norm.running_mean   loaded from res4_22_branch2a_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.norm.running_var    loaded from res4_22_branch2a_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.norm.weight         loaded from res4_22_branch2a_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.weight              loaded from res4_22_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.norm.bias           loaded from res4_22_branch2b_bn_beta          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.norm.running_mean   loaded from res4_22_branch2b_bn_running_mean  of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.norm.running_var    loaded from res4_22_branch2b_bn_running_var   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.norm.weight         loaded from res4_22_branch2b_bn_gamma         of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.weight              loaded from res4_22_branch2b_w                of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.norm.bias           loaded from res4_22_branch2c_bn_beta          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.norm.running_mean   loaded from res4_22_branch2c_bn_running_mean  of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.norm.running_var    loaded from res4_22_branch2c_bn_running_var   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.norm.weight         loaded from res4_22_branch2c_bn_gamma         of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.weight              loaded from res4_22_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.bias            loaded from res4_3_branch2a_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.running_mean    loaded from res4_3_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.running_var     loaded from res4_3_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.weight          loaded from res4_3_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.weight               loaded from res4_3_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.bias            loaded from res4_3_branch2b_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.running_mean    loaded from res4_3_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.running_var     loaded from res4_3_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.weight          loaded from res4_3_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.weight               loaded from res4_3_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.bias            loaded from res4_3_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.running_mean    loaded from res4_3_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.running_var     loaded from res4_3_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.weight          loaded from res4_3_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.weight               loaded from res4_3_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.bias            loaded from res4_4_branch2a_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.running_mean    loaded from res4_4_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.running_var     loaded from res4_4_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.weight          loaded from res4_4_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.weight               loaded from res4_4_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.bias            loaded from res4_4_branch2b_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.running_mean    loaded from res4_4_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.running_var     loaded from res4_4_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.weight          loaded from res4_4_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.weight               loaded from res4_4_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.bias            loaded from res4_4_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.running_mean    loaded from res4_4_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.running_var     loaded from res4_4_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.weight          loaded from res4_4_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.weight               loaded from res4_4_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.bias            loaded from res4_5_branch2a_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.running_mean    loaded from res4_5_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.running_var     loaded from res4_5_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.weight          loaded from res4_5_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.weight               loaded from res4_5_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.bias            loaded from res4_5_branch2b_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.running_mean    loaded from res4_5_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.running_var     loaded from res4_5_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.weight          loaded from res4_5_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.weight               loaded from res4_5_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.bias            loaded from res4_5_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.running_mean    loaded from res4_5_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.running_var     loaded from res4_5_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.weight          loaded from res4_5_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.weight               loaded from res4_5_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.norm.bias            loaded from res4_6_branch2a_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.norm.running_mean    loaded from res4_6_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.norm.running_var     loaded from res4_6_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.norm.weight          loaded from res4_6_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.weight               loaded from res4_6_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.norm.bias            loaded from res4_6_branch2b_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.norm.running_mean    loaded from res4_6_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.norm.running_var     loaded from res4_6_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.norm.weight          loaded from res4_6_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.weight               loaded from res4_6_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.norm.bias            loaded from res4_6_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.norm.running_mean    loaded from res4_6_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.norm.running_var     loaded from res4_6_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.norm.weight          loaded from res4_6_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.weight               loaded from res4_6_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.norm.bias            loaded from res4_7_branch2a_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.norm.running_mean    loaded from res4_7_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.norm.running_var     loaded from res4_7_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.norm.weight          loaded from res4_7_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.weight               loaded from res4_7_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.norm.bias            loaded from res4_7_branch2b_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.norm.running_mean    loaded from res4_7_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.norm.running_var     loaded from res4_7_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.norm.weight          loaded from res4_7_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.weight               loaded from res4_7_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.norm.bias            loaded from res4_7_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.norm.running_mean    loaded from res4_7_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.norm.running_var     loaded from res4_7_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.norm.weight          loaded from res4_7_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.weight               loaded from res4_7_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.norm.bias            loaded from res4_8_branch2a_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.norm.running_mean    loaded from res4_8_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.norm.running_var     loaded from res4_8_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.norm.weight          loaded from res4_8_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.weight               loaded from res4_8_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.norm.bias            loaded from res4_8_branch2b_bn_beta           of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.norm.running_mean    loaded from res4_8_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.norm.running_var     loaded from res4_8_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.norm.weight          loaded from res4_8_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.weight               loaded from res4_8_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.norm.bias            loaded from res4_8_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.norm.running_mean    loaded from res4_8_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.norm.running_var     loaded from res4_8_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.norm.weight          loaded from res4_8_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.weight               loaded from res4_8_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:25] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.norm.bias            loaded from res4_9_branch2a_bn_beta           of shape (256,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.norm.running_mean    loaded from res4_9_branch2a_bn_running_mean   of shape (256,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.norm.running_var     loaded from res4_9_branch2a_bn_running_var    of shape (256,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.norm.weight          loaded from res4_9_branch2a_bn_gamma          of shape (256,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.weight               loaded from res4_9_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.norm.bias            loaded from res4_9_branch2b_bn_beta           of shape (256,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.norm.running_mean    loaded from res4_9_branch2b_bn_running_mean   of shape (256,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.norm.running_var     loaded from res4_9_branch2b_bn_running_var    of shape (256,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.norm.weight          loaded from res4_9_branch2b_bn_gamma          of shape (256,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.weight               loaded from res4_9_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.norm.bias            loaded from res4_9_branch2c_bn_beta           of shape (1024,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.norm.running_mean    loaded from res4_9_branch2c_bn_running_mean   of shape (1024,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.norm.running_var     loaded from res4_9_branch2c_bn_running_var    of shape (1024,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.norm.weight          loaded from res4_9_branch2c_bn_gamma          of shape (1024,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.weight               loaded from res4_9_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.bias            loaded from res5_0_branch2a_bn_beta           of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.running_mean    loaded from res5_0_branch2a_bn_running_mean   of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.running_var     loaded from res5_0_branch2a_bn_running_var    of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.weight          loaded from res5_0_branch2a_bn_gamma          of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.weight               loaded from res5_0_branch2a_w                 of shape (512, 1024, 1, 1)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.bias            loaded from res5_0_branch2b_bn_beta           of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.running_mean    loaded from res5_0_branch2b_bn_running_mean   of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.running_var     loaded from res5_0_branch2b_bn_running_var    of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.weight          loaded from res5_0_branch2b_bn_gamma          of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.weight               loaded from res5_0_branch2b_w                 of shape (512, 512, 3, 3)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.bias            loaded from res5_0_branch2c_bn_beta           of shape (2048,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.running_mean    loaded from res5_0_branch2c_bn_running_mean   of shape (2048,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.running_var     loaded from res5_0_branch2c_bn_running_var    of shape (2048,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.weight          loaded from res5_0_branch2c_bn_gamma          of shape (2048,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.weight               loaded from res5_0_branch2c_w                 of shape (2048, 512, 1, 1)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.bias         loaded from res5_0_branch1_bn_beta            of shape (2048,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.running_mean loaded from res5_0_branch1_bn_running_mean    of shape (2048,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.running_var  loaded from res5_0_branch1_bn_running_var     of shape (2048,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.weight       loaded from res5_0_branch1_bn_gamma           of shape (2048,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.weight            loaded from res5_0_branch1_w                  of shape (2048, 1024, 1, 1)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.bias            loaded from res5_1_branch2a_bn_beta           of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.running_mean    loaded from res5_1_branch2a_bn_running_mean   of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.running_var     loaded from res5_1_branch2a_bn_running_var    of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.weight          loaded from res5_1_branch2a_bn_gamma          of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.weight               loaded from res5_1_branch2a_w                 of shape (512, 2048, 1, 1)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.bias            loaded from res5_1_branch2b_bn_beta           of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.running_mean    loaded from res5_1_branch2b_bn_running_mean   of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.running_var     loaded from res5_1_branch2b_bn_running_var    of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.weight          loaded from res5_1_branch2b_bn_gamma          of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.weight               loaded from res5_1_branch2b_w                 of shape (512, 512, 3, 3)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.bias            loaded from res5_1_branch2c_bn_beta           of shape (2048,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.running_mean    loaded from res5_1_branch2c_bn_running_mean   of shape (2048,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.running_var     loaded from res5_1_branch2c_bn_running_var    of shape (2048,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.weight          loaded from res5_1_branch2c_bn_gamma          of shape (2048,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.weight               loaded from res5_1_branch2c_w                 of shape (2048, 512, 1, 1)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.bias            loaded from res5_2_branch2a_bn_beta           of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.running_mean    loaded from res5_2_branch2a_bn_running_mean   of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.running_var     loaded from res5_2_branch2a_bn_running_var    of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.weight          loaded from res5_2_branch2a_bn_gamma          of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.weight               loaded from res5_2_branch2a_w                 of shape (512, 2048, 1, 1)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.bias            loaded from res5_2_branch2b_bn_beta           of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.running_mean    loaded from res5_2_branch2b_bn_running_mean   of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.running_var     loaded from res5_2_branch2b_bn_running_var    of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.weight          loaded from res5_2_branch2b_bn_gamma          of shape (512,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.weight               loaded from res5_2_branch2b_w                 of shape (512, 512, 3, 3)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.bias            loaded from res5_2_branch2c_bn_beta           of shape (2048,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.running_mean    loaded from res5_2_branch2c_bn_running_mean   of shape (2048,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.running_var     loaded from res5_2_branch2c_bn_running_var    of shape (2048,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.weight          loaded from res5_2_branch2c_bn_gamma          of shape (2048,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.weight               loaded from res5_2_branch2c_w                 of shape (2048, 512, 1, 1)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.bias              loaded from res_conv1_bn_beta                 of shape (64,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.running_mean      loaded from res_conv1_bn_running_mean         of shape (64,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.running_var       loaded from res_conv1_bn_running_var          of shape (64,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.weight            loaded from res_conv1_bn_gamma                of shape (64,)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.weight                 loaded from conv1_w                           of shape (64, 3, 7, 7)
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.fpn_lateral3.{bias, weight}[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mbackbone.fpn_output3.{bias, weight}[0m
  [34mbackbone.fpn_output4.{bias, weight}[0m
  [34mbackbone.fpn_output5.{bias, weight}[0m
  [34mbackbone.top_block.p6.{bias, weight}[0m
  [34mbackbone.top_block.p7.{bias, weight}[0m
  [34mpixel_mean[0m
  [34mpixel_std[0m
  [34mproposal_generator.fcos_head.bbox_pred.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.0.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.1.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.10.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.3.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.4.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.6.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.7.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.9.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_logits.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.0.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.1.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.10.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.3.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.4.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.6.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.7.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.9.{bias, weight}[0m
  [34mproposal_generator.fcos_head.controller.{bias, weight}[0m
  [34mproposal_generator.fcos_head.ctrness.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.0.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.1.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.10.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.12.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.13.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.15.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.16.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.18.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.19.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.21.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.22.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.3.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.4.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.6.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.7.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.9.{bias, weight}[0m
  [34mproposal_generator.fcos_head.scales.0.scale[0m
  [34mproposal_generator.fcos_head.scales.1.scale[0m
  [34mproposal_generator.fcos_head.scales.2.scale[0m
  [34mproposal_generator.fcos_head.scales.3.scale[0m
  [34mproposal_generator.fcos_head.scales.4.scale[0m
[09/17 07:57:26] d2.checkpoint.c2_model_loading INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000_b[0m
  [35mfc1000_w[0m
[09/17 08:04:14] detectron2 INFO: Rank of current process: 0. World size: 1
[09/17 08:04:16] detectron2 INFO: Environment info:
----------------------  -------------------------------------------------------------
sys.platform            linux
Python                  3.7.1 (default, Sep  3 2020, 23:56:06) [GCC 5.4.0 20160609]
numpy                   1.19.1
detectron2              0.2.1 @/home/zzk/workspace/detectron2/detectron2
Compiler                GCC 6.5
CUDA compiler           CUDA 11.0
detectron2 arch flags   7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/zzk/py37/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2               GeForce RTX 2080 Ti (arch=7.5)
CUDA_HOME               /usr/local/cuda
Pillow                  7.2.0
torchvision             0.5.0 @/home/zzk/py37/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20200912
cv2                     4.4.0
----------------------  -------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[09/17 08:04:16] detectron2 INFO: Command line arguments: Namespace(config_file='configs/CondInst/MS_R_101_3x.yaml', dist_url='tcp://127.0.0.1:50155', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[09/17 08:04:16] detectron2 INFO: Contents of args.config_file=configs/CondInst/MS_R_101_3x.yaml:
_BASE_: "Base-FCOS.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"
  RESNETS:
    DEPTH: 101
SOLVER:
  STEPS: (60000, 80000)
  MAX_ITER: 90000
OUTPUT_DIR: "output/fcos/R_101_3x"

[09/17 08:04:16] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('HICO-det-test',)
  TRAIN: ('HICO-det-train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: bitmask
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_fcos_resnet_fpn_backbone
  DEVICE: cuda
  FCOS:
    CENTER_SAMPLE: True
    FPN_STRIDES: [8, 16, 32, 64, 128]
    INFERENCE_TH_TEST: 0.05
    INFERENCE_TH_TRAIN: 0.05
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    LOC_LOSS_TYPE: giou
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.6
    NORM: GN
    NUM_BOX_CONVS: 4
    NUM_CLASSES: 80
    NUM_CLS_CONVS: 4
    NUM_SHARE_CONVS: 0
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 100
    POS_RADIUS: 1.5
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 1000
    PRIOR_PROB: 0.01
    SIZES_OF_INTEREST: [64, 128, 256, 512]
    THRESH_WITH_CTR: False
    TOP_LEVELS: 2
    USE_DEFORMABLE: False
    USE_RELU: True
    USE_SCALE: True
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: OneStageDetector
  MOBILENET: False
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FCOS
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  VOVNET:
    BACKBONE_OUT_CHANNELS: 256
    CONV_BODY: V-39-eSE
    NORM: FrozenBN
    OUT_CHANNELS: 256
    OUT_FEATURES: ['stage2', 'stage3', 'stage4', 'stage5']
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-101.pkl
OUTPUT_DIR: output/fcos/R_101_3x
SEED: -1
SOLVER:
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[09/17 08:04:16] detectron2 INFO: Full config saved to output/fcos/R_101_3x/config.yaml
[09/17 08:04:16] d2.utils.env INFO: Using a generated random seed 16241243
[09/17 08:04:18] d2.engine.defaults INFO: Model:
OneStageDetector(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): FCOS(
    (iou_loss): IOULoss()
    (fcos_head): FCOSHead(
      (cls_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (bbox_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (share_tower): Sequential()
      (mask_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (13): GroupNorm(32, 256, eps=1e-05, affine=True)
        (14): ReLU()
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (16): GroupNorm(32, 256, eps=1e-05, affine=True)
        (17): ReLU()
        (18): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (19): GroupNorm(32, 256, eps=1e-05, affine=True)
        (20): ReLU()
        (21): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (22): GroupNorm(32, 256, eps=1e-05, affine=True)
        (23): ReLU()
      )
      (cls_logits): Conv2d(256, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bbox_pred): Conv2d(256, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (ctrness): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (controller): Conv2d(256, 169, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
        (3): Scale()
        (4): Scale()
      )
    )
  )
)
[09/17 08:04:18] d2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[09/17 08:04:18] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/17 08:04:18] d2.data.datasets.coco INFO: Loaded 38116 images in COCO format from /data01/zzk/data/hico_20160224_det/hico_annotations_train2015.json
[09/17 08:04:19] d2.data.build INFO: Removed 659 images with no usable annotations. 37457 images left.
[09/17 08:04:19] d2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 59249        |   bicycle    | 3249         |      car      | 1060         |
|  motorcycle   | 2119         |   airplane   | 607          |      bus      | 925          |
|     train     | 439          |    truck     | 401          |     boat      | 1689         |
| traffic light | 171          | fire hydrant | 128          |   stop sign   | 49           |
| parking meter | 163          |    bench     | 1470         |     bird      | 550          |
|      cat      | 254          |     dog      | 718          |     horse     | 1912         |
|     sheep     | 909          |     cow      | 717          |   elephant    | 567          |
|     bear      | 90           |    zebra     | 50           |    giraffe    | 320          |
|   backpack    | 1205         |   umbrella   | 1693         |    handbag    | 192          |
|      tie      | 909          |   suitcase   | 608          |    frisbee    | 780          |
|     skis      | 1146         |  snowboard   | 824          |  sports ball  | 947          |
|     kite      | 1066         | baseball bat | 745          | baseball gl.. | 203          |
|  skateboard   | 2466         |  surfboard   | 618          | tennis racket | 295          |
|    bottle     | 890          |  wine glass  | 693          |      cup      | 454          |
|     fork      | 178          |    knife     | 636          |     spoon     | 274          |
|     bowl      | 130          |    banana    | 850          |     apple     | 283          |
|   sandwich    | 269          |    orange    | 74           |   broccoli    | 93           |
|    carrot     | 269          |   hot dog    | 374          |     pizza     | 424          |
|     donut     | 417          |     cake     | 787          |     chair     | 1425         |
|     couch     | 767          | potted plant | 143          |      bed      | 435          |
| dining table  | 1019         |    toilet    | 172          |      tv       | 251          |
|    laptop     | 719          |    mouse     | 70           |    remote     | 198          |
|   keyboard    | 323          |  cell phone  | 547          |   microwave   | 26           |
|     oven      | 122          |   toaster    | 7            |     sink      | 76           |
| refrigerator  | 69           |     book     | 1062         |     clock     | 203          |
|     vase      | 102          |   scissors   | 242          |  teddy bear   | 349          |
|  hair drier   | 52           |  toothbrush  | 348          |               |              |
|     total     | 107325       |              |              |               |              |[0m
[09/17 08:04:19] d2.data.common INFO: Serializing 37457 elements to byte tensors and concatenating them all ...
[09/17 08:04:20] d2.data.common INFO: Serialized dataset takes 14.72 MiB
[09/17 08:04:20] d2.data.build INFO: Using training sampler TrainingSampler
[09/17 08:04:20] fvcore.common.checkpoint INFO: Loading checkpoint from detectron2://ImageNetPretrained/MSRA/R-101.pkl
[09/17 08:04:20] fvcore.common.file_io INFO: URL https://dl.fbaipublicfiles.com/detectron2/ImageNetPretrained/MSRA/R-101.pkl cached in /home/zzk/.torch/fvcore_cache/detectron2/ImageNetPretrained/MSRA/R-101.pkl
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: Remapping C2 weights ......
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.bias            loaded from res2_0_branch2a_bn_beta           of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.running_mean    loaded from res2_0_branch2a_bn_running_mean   of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.running_var     loaded from res2_0_branch2a_bn_running_var    of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.norm.weight          loaded from res2_0_branch2a_bn_gamma          of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv1.weight               loaded from res2_0_branch2a_w                 of shape (64, 64, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.bias            loaded from res2_0_branch2b_bn_beta           of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.running_mean    loaded from res2_0_branch2b_bn_running_mean   of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.running_var     loaded from res2_0_branch2b_bn_running_var    of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.norm.weight          loaded from res2_0_branch2b_bn_gamma          of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv2.weight               loaded from res2_0_branch2b_w                 of shape (64, 64, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.bias            loaded from res2_0_branch2c_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.running_mean    loaded from res2_0_branch2c_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.running_var     loaded from res2_0_branch2c_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.norm.weight          loaded from res2_0_branch2c_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.conv3.weight               loaded from res2_0_branch2c_w                 of shape (256, 64, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.bias         loaded from res2_0_branch1_bn_beta            of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.running_mean loaded from res2_0_branch1_bn_running_mean    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.running_var  loaded from res2_0_branch1_bn_running_var     of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.norm.weight       loaded from res2_0_branch1_bn_gamma           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.0.shortcut.weight            loaded from res2_0_branch1_w                  of shape (256, 64, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.bias            loaded from res2_1_branch2a_bn_beta           of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.running_mean    loaded from res2_1_branch2a_bn_running_mean   of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.running_var     loaded from res2_1_branch2a_bn_running_var    of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.norm.weight          loaded from res2_1_branch2a_bn_gamma          of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv1.weight               loaded from res2_1_branch2a_w                 of shape (64, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.bias            loaded from res2_1_branch2b_bn_beta           of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.running_mean    loaded from res2_1_branch2b_bn_running_mean   of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.running_var     loaded from res2_1_branch2b_bn_running_var    of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.norm.weight          loaded from res2_1_branch2b_bn_gamma          of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv2.weight               loaded from res2_1_branch2b_w                 of shape (64, 64, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.bias            loaded from res2_1_branch2c_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.running_mean    loaded from res2_1_branch2c_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.running_var     loaded from res2_1_branch2c_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.norm.weight          loaded from res2_1_branch2c_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.1.conv3.weight               loaded from res2_1_branch2c_w                 of shape (256, 64, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.bias            loaded from res2_2_branch2a_bn_beta           of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.running_mean    loaded from res2_2_branch2a_bn_running_mean   of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.running_var     loaded from res2_2_branch2a_bn_running_var    of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.norm.weight          loaded from res2_2_branch2a_bn_gamma          of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv1.weight               loaded from res2_2_branch2a_w                 of shape (64, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.bias            loaded from res2_2_branch2b_bn_beta           of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.running_mean    loaded from res2_2_branch2b_bn_running_mean   of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.running_var     loaded from res2_2_branch2b_bn_running_var    of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.norm.weight          loaded from res2_2_branch2b_bn_gamma          of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv2.weight               loaded from res2_2_branch2b_w                 of shape (64, 64, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.bias            loaded from res2_2_branch2c_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.running_mean    loaded from res2_2_branch2c_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.running_var     loaded from res2_2_branch2c_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.norm.weight          loaded from res2_2_branch2c_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res2.2.conv3.weight               loaded from res2_2_branch2c_w                 of shape (256, 64, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.bias            loaded from res3_0_branch2a_bn_beta           of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.running_mean    loaded from res3_0_branch2a_bn_running_mean   of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.running_var     loaded from res3_0_branch2a_bn_running_var    of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.norm.weight          loaded from res3_0_branch2a_bn_gamma          of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv1.weight               loaded from res3_0_branch2a_w                 of shape (128, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.bias            loaded from res3_0_branch2b_bn_beta           of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.running_mean    loaded from res3_0_branch2b_bn_running_mean   of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.running_var     loaded from res3_0_branch2b_bn_running_var    of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.norm.weight          loaded from res3_0_branch2b_bn_gamma          of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv2.weight               loaded from res3_0_branch2b_w                 of shape (128, 128, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.bias            loaded from res3_0_branch2c_bn_beta           of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.running_mean    loaded from res3_0_branch2c_bn_running_mean   of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.running_var     loaded from res3_0_branch2c_bn_running_var    of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.norm.weight          loaded from res3_0_branch2c_bn_gamma          of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.conv3.weight               loaded from res3_0_branch2c_w                 of shape (512, 128, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.bias         loaded from res3_0_branch1_bn_beta            of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.running_mean loaded from res3_0_branch1_bn_running_mean    of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.running_var  loaded from res3_0_branch1_bn_running_var     of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.norm.weight       loaded from res3_0_branch1_bn_gamma           of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.0.shortcut.weight            loaded from res3_0_branch1_w                  of shape (512, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.bias            loaded from res3_1_branch2a_bn_beta           of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.running_mean    loaded from res3_1_branch2a_bn_running_mean   of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.running_var     loaded from res3_1_branch2a_bn_running_var    of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.norm.weight          loaded from res3_1_branch2a_bn_gamma          of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv1.weight               loaded from res3_1_branch2a_w                 of shape (128, 512, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.bias            loaded from res3_1_branch2b_bn_beta           of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.running_mean    loaded from res3_1_branch2b_bn_running_mean   of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.running_var     loaded from res3_1_branch2b_bn_running_var    of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.norm.weight          loaded from res3_1_branch2b_bn_gamma          of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv2.weight               loaded from res3_1_branch2b_w                 of shape (128, 128, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.bias            loaded from res3_1_branch2c_bn_beta           of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.running_mean    loaded from res3_1_branch2c_bn_running_mean   of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.running_var     loaded from res3_1_branch2c_bn_running_var    of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.norm.weight          loaded from res3_1_branch2c_bn_gamma          of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.1.conv3.weight               loaded from res3_1_branch2c_w                 of shape (512, 128, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.bias            loaded from res3_2_branch2a_bn_beta           of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.running_mean    loaded from res3_2_branch2a_bn_running_mean   of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.running_var     loaded from res3_2_branch2a_bn_running_var    of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.norm.weight          loaded from res3_2_branch2a_bn_gamma          of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv1.weight               loaded from res3_2_branch2a_w                 of shape (128, 512, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.bias            loaded from res3_2_branch2b_bn_beta           of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.running_mean    loaded from res3_2_branch2b_bn_running_mean   of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.running_var     loaded from res3_2_branch2b_bn_running_var    of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.norm.weight          loaded from res3_2_branch2b_bn_gamma          of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv2.weight               loaded from res3_2_branch2b_w                 of shape (128, 128, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.bias            loaded from res3_2_branch2c_bn_beta           of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.running_mean    loaded from res3_2_branch2c_bn_running_mean   of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.running_var     loaded from res3_2_branch2c_bn_running_var    of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.norm.weight          loaded from res3_2_branch2c_bn_gamma          of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.2.conv3.weight               loaded from res3_2_branch2c_w                 of shape (512, 128, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.bias            loaded from res3_3_branch2a_bn_beta           of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.running_mean    loaded from res3_3_branch2a_bn_running_mean   of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.running_var     loaded from res3_3_branch2a_bn_running_var    of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.norm.weight          loaded from res3_3_branch2a_bn_gamma          of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv1.weight               loaded from res3_3_branch2a_w                 of shape (128, 512, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.bias            loaded from res3_3_branch2b_bn_beta           of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.running_mean    loaded from res3_3_branch2b_bn_running_mean   of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.running_var     loaded from res3_3_branch2b_bn_running_var    of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.norm.weight          loaded from res3_3_branch2b_bn_gamma          of shape (128,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv2.weight               loaded from res3_3_branch2b_w                 of shape (128, 128, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.bias            loaded from res3_3_branch2c_bn_beta           of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.running_mean    loaded from res3_3_branch2c_bn_running_mean   of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.running_var     loaded from res3_3_branch2c_bn_running_var    of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.norm.weight          loaded from res3_3_branch2c_bn_gamma          of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res3.3.conv3.weight               loaded from res3_3_branch2c_w                 of shape (512, 128, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.bias            loaded from res4_0_branch2a_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.running_mean    loaded from res4_0_branch2a_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.running_var     loaded from res4_0_branch2a_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.norm.weight          loaded from res4_0_branch2a_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv1.weight               loaded from res4_0_branch2a_w                 of shape (256, 512, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.bias            loaded from res4_0_branch2b_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.running_mean    loaded from res4_0_branch2b_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.running_var     loaded from res4_0_branch2b_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.norm.weight          loaded from res4_0_branch2b_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv2.weight               loaded from res4_0_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.bias            loaded from res4_0_branch2c_bn_beta           of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.running_mean    loaded from res4_0_branch2c_bn_running_mean   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.running_var     loaded from res4_0_branch2c_bn_running_var    of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.norm.weight          loaded from res4_0_branch2c_bn_gamma          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.conv3.weight               loaded from res4_0_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.bias         loaded from res4_0_branch1_bn_beta            of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.running_mean loaded from res4_0_branch1_bn_running_mean    of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.running_var  loaded from res4_0_branch1_bn_running_var     of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.norm.weight       loaded from res4_0_branch1_bn_gamma           of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.0.shortcut.weight            loaded from res4_0_branch1_w                  of shape (1024, 512, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.bias            loaded from res4_1_branch2a_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.running_mean    loaded from res4_1_branch2a_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.running_var     loaded from res4_1_branch2a_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.norm.weight          loaded from res4_1_branch2a_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv1.weight               loaded from res4_1_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.bias            loaded from res4_1_branch2b_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.running_mean    loaded from res4_1_branch2b_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.running_var     loaded from res4_1_branch2b_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.norm.weight          loaded from res4_1_branch2b_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv2.weight               loaded from res4_1_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.bias            loaded from res4_1_branch2c_bn_beta           of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.running_mean    loaded from res4_1_branch2c_bn_running_mean   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.running_var     loaded from res4_1_branch2c_bn_running_var    of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.norm.weight          loaded from res4_1_branch2c_bn_gamma          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.1.conv3.weight               loaded from res4_1_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.norm.bias           loaded from res4_10_branch2a_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.norm.running_mean   loaded from res4_10_branch2a_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.norm.running_var    loaded from res4_10_branch2a_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.norm.weight         loaded from res4_10_branch2a_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv1.weight              loaded from res4_10_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.norm.bias           loaded from res4_10_branch2b_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.norm.running_mean   loaded from res4_10_branch2b_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.norm.running_var    loaded from res4_10_branch2b_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.norm.weight         loaded from res4_10_branch2b_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv2.weight              loaded from res4_10_branch2b_w                of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.norm.bias           loaded from res4_10_branch2c_bn_beta          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.norm.running_mean   loaded from res4_10_branch2c_bn_running_mean  of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.norm.running_var    loaded from res4_10_branch2c_bn_running_var   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.norm.weight         loaded from res4_10_branch2c_bn_gamma         of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.10.conv3.weight              loaded from res4_10_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.norm.bias           loaded from res4_11_branch2a_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.norm.running_mean   loaded from res4_11_branch2a_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.norm.running_var    loaded from res4_11_branch2a_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.norm.weight         loaded from res4_11_branch2a_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv1.weight              loaded from res4_11_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.norm.bias           loaded from res4_11_branch2b_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.norm.running_mean   loaded from res4_11_branch2b_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.norm.running_var    loaded from res4_11_branch2b_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.norm.weight         loaded from res4_11_branch2b_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv2.weight              loaded from res4_11_branch2b_w                of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.norm.bias           loaded from res4_11_branch2c_bn_beta          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.norm.running_mean   loaded from res4_11_branch2c_bn_running_mean  of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.norm.running_var    loaded from res4_11_branch2c_bn_running_var   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.norm.weight         loaded from res4_11_branch2c_bn_gamma         of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.11.conv3.weight              loaded from res4_11_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.norm.bias           loaded from res4_12_branch2a_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.norm.running_mean   loaded from res4_12_branch2a_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.norm.running_var    loaded from res4_12_branch2a_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.norm.weight         loaded from res4_12_branch2a_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv1.weight              loaded from res4_12_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.norm.bias           loaded from res4_12_branch2b_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.norm.running_mean   loaded from res4_12_branch2b_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.norm.running_var    loaded from res4_12_branch2b_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.norm.weight         loaded from res4_12_branch2b_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv2.weight              loaded from res4_12_branch2b_w                of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.norm.bias           loaded from res4_12_branch2c_bn_beta          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.norm.running_mean   loaded from res4_12_branch2c_bn_running_mean  of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.norm.running_var    loaded from res4_12_branch2c_bn_running_var   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.norm.weight         loaded from res4_12_branch2c_bn_gamma         of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.12.conv3.weight              loaded from res4_12_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.norm.bias           loaded from res4_13_branch2a_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.norm.running_mean   loaded from res4_13_branch2a_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.norm.running_var    loaded from res4_13_branch2a_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.norm.weight         loaded from res4_13_branch2a_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv1.weight              loaded from res4_13_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.norm.bias           loaded from res4_13_branch2b_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.norm.running_mean   loaded from res4_13_branch2b_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.norm.running_var    loaded from res4_13_branch2b_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.norm.weight         loaded from res4_13_branch2b_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv2.weight              loaded from res4_13_branch2b_w                of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.norm.bias           loaded from res4_13_branch2c_bn_beta          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.norm.running_mean   loaded from res4_13_branch2c_bn_running_mean  of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.norm.running_var    loaded from res4_13_branch2c_bn_running_var   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.norm.weight         loaded from res4_13_branch2c_bn_gamma         of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.13.conv3.weight              loaded from res4_13_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.norm.bias           loaded from res4_14_branch2a_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.norm.running_mean   loaded from res4_14_branch2a_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.norm.running_var    loaded from res4_14_branch2a_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.norm.weight         loaded from res4_14_branch2a_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv1.weight              loaded from res4_14_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.norm.bias           loaded from res4_14_branch2b_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.norm.running_mean   loaded from res4_14_branch2b_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.norm.running_var    loaded from res4_14_branch2b_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.norm.weight         loaded from res4_14_branch2b_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv2.weight              loaded from res4_14_branch2b_w                of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.norm.bias           loaded from res4_14_branch2c_bn_beta          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.norm.running_mean   loaded from res4_14_branch2c_bn_running_mean  of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.norm.running_var    loaded from res4_14_branch2c_bn_running_var   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.norm.weight         loaded from res4_14_branch2c_bn_gamma         of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.14.conv3.weight              loaded from res4_14_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.norm.bias           loaded from res4_15_branch2a_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.norm.running_mean   loaded from res4_15_branch2a_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.norm.running_var    loaded from res4_15_branch2a_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.norm.weight         loaded from res4_15_branch2a_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv1.weight              loaded from res4_15_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.norm.bias           loaded from res4_15_branch2b_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.norm.running_mean   loaded from res4_15_branch2b_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.norm.running_var    loaded from res4_15_branch2b_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.norm.weight         loaded from res4_15_branch2b_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv2.weight              loaded from res4_15_branch2b_w                of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.norm.bias           loaded from res4_15_branch2c_bn_beta          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.norm.running_mean   loaded from res4_15_branch2c_bn_running_mean  of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.norm.running_var    loaded from res4_15_branch2c_bn_running_var   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.norm.weight         loaded from res4_15_branch2c_bn_gamma         of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.15.conv3.weight              loaded from res4_15_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.norm.bias           loaded from res4_16_branch2a_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.norm.running_mean   loaded from res4_16_branch2a_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.norm.running_var    loaded from res4_16_branch2a_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.norm.weight         loaded from res4_16_branch2a_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv1.weight              loaded from res4_16_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.norm.bias           loaded from res4_16_branch2b_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.norm.running_mean   loaded from res4_16_branch2b_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.norm.running_var    loaded from res4_16_branch2b_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.norm.weight         loaded from res4_16_branch2b_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv2.weight              loaded from res4_16_branch2b_w                of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.norm.bias           loaded from res4_16_branch2c_bn_beta          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.norm.running_mean   loaded from res4_16_branch2c_bn_running_mean  of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.norm.running_var    loaded from res4_16_branch2c_bn_running_var   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.norm.weight         loaded from res4_16_branch2c_bn_gamma         of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.16.conv3.weight              loaded from res4_16_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.norm.bias           loaded from res4_17_branch2a_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.norm.running_mean   loaded from res4_17_branch2a_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.norm.running_var    loaded from res4_17_branch2a_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.norm.weight         loaded from res4_17_branch2a_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv1.weight              loaded from res4_17_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.norm.bias           loaded from res4_17_branch2b_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.norm.running_mean   loaded from res4_17_branch2b_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.norm.running_var    loaded from res4_17_branch2b_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.norm.weight         loaded from res4_17_branch2b_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv2.weight              loaded from res4_17_branch2b_w                of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.norm.bias           loaded from res4_17_branch2c_bn_beta          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.norm.running_mean   loaded from res4_17_branch2c_bn_running_mean  of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.norm.running_var    loaded from res4_17_branch2c_bn_running_var   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.norm.weight         loaded from res4_17_branch2c_bn_gamma         of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.17.conv3.weight              loaded from res4_17_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.norm.bias           loaded from res4_18_branch2a_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.norm.running_mean   loaded from res4_18_branch2a_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.norm.running_var    loaded from res4_18_branch2a_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.norm.weight         loaded from res4_18_branch2a_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv1.weight              loaded from res4_18_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.norm.bias           loaded from res4_18_branch2b_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.norm.running_mean   loaded from res4_18_branch2b_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.norm.running_var    loaded from res4_18_branch2b_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.norm.weight         loaded from res4_18_branch2b_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv2.weight              loaded from res4_18_branch2b_w                of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.norm.bias           loaded from res4_18_branch2c_bn_beta          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.norm.running_mean   loaded from res4_18_branch2c_bn_running_mean  of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.norm.running_var    loaded from res4_18_branch2c_bn_running_var   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.norm.weight         loaded from res4_18_branch2c_bn_gamma         of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.18.conv3.weight              loaded from res4_18_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.norm.bias           loaded from res4_19_branch2a_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.norm.running_mean   loaded from res4_19_branch2a_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.norm.running_var    loaded from res4_19_branch2a_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.norm.weight         loaded from res4_19_branch2a_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv1.weight              loaded from res4_19_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.norm.bias           loaded from res4_19_branch2b_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.norm.running_mean   loaded from res4_19_branch2b_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.norm.running_var    loaded from res4_19_branch2b_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.norm.weight         loaded from res4_19_branch2b_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv2.weight              loaded from res4_19_branch2b_w                of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.norm.bias           loaded from res4_19_branch2c_bn_beta          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.norm.running_mean   loaded from res4_19_branch2c_bn_running_mean  of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.norm.running_var    loaded from res4_19_branch2c_bn_running_var   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.norm.weight         loaded from res4_19_branch2c_bn_gamma         of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.19.conv3.weight              loaded from res4_19_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.bias            loaded from res4_2_branch2a_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.running_mean    loaded from res4_2_branch2a_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.running_var     loaded from res4_2_branch2a_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.norm.weight          loaded from res4_2_branch2a_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv1.weight               loaded from res4_2_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.bias            loaded from res4_2_branch2b_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.running_mean    loaded from res4_2_branch2b_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.running_var     loaded from res4_2_branch2b_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.norm.weight          loaded from res4_2_branch2b_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv2.weight               loaded from res4_2_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.bias            loaded from res4_2_branch2c_bn_beta           of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.running_mean    loaded from res4_2_branch2c_bn_running_mean   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.running_var     loaded from res4_2_branch2c_bn_running_var    of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.norm.weight          loaded from res4_2_branch2c_bn_gamma          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.2.conv3.weight               loaded from res4_2_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.norm.bias           loaded from res4_20_branch2a_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.norm.running_mean   loaded from res4_20_branch2a_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.norm.running_var    loaded from res4_20_branch2a_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.norm.weight         loaded from res4_20_branch2a_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv1.weight              loaded from res4_20_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.norm.bias           loaded from res4_20_branch2b_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.norm.running_mean   loaded from res4_20_branch2b_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.norm.running_var    loaded from res4_20_branch2b_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.norm.weight         loaded from res4_20_branch2b_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv2.weight              loaded from res4_20_branch2b_w                of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.norm.bias           loaded from res4_20_branch2c_bn_beta          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.norm.running_mean   loaded from res4_20_branch2c_bn_running_mean  of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.norm.running_var    loaded from res4_20_branch2c_bn_running_var   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.norm.weight         loaded from res4_20_branch2c_bn_gamma         of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.20.conv3.weight              loaded from res4_20_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.norm.bias           loaded from res4_21_branch2a_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.norm.running_mean   loaded from res4_21_branch2a_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.norm.running_var    loaded from res4_21_branch2a_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.norm.weight         loaded from res4_21_branch2a_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv1.weight              loaded from res4_21_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.norm.bias           loaded from res4_21_branch2b_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.norm.running_mean   loaded from res4_21_branch2b_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.norm.running_var    loaded from res4_21_branch2b_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.norm.weight         loaded from res4_21_branch2b_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv2.weight              loaded from res4_21_branch2b_w                of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.norm.bias           loaded from res4_21_branch2c_bn_beta          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.norm.running_mean   loaded from res4_21_branch2c_bn_running_mean  of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.norm.running_var    loaded from res4_21_branch2c_bn_running_var   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.norm.weight         loaded from res4_21_branch2c_bn_gamma         of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.21.conv3.weight              loaded from res4_21_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.norm.bias           loaded from res4_22_branch2a_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.norm.running_mean   loaded from res4_22_branch2a_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.norm.running_var    loaded from res4_22_branch2a_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.norm.weight         loaded from res4_22_branch2a_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv1.weight              loaded from res4_22_branch2a_w                of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.norm.bias           loaded from res4_22_branch2b_bn_beta          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.norm.running_mean   loaded from res4_22_branch2b_bn_running_mean  of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.norm.running_var    loaded from res4_22_branch2b_bn_running_var   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.norm.weight         loaded from res4_22_branch2b_bn_gamma         of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv2.weight              loaded from res4_22_branch2b_w                of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.norm.bias           loaded from res4_22_branch2c_bn_beta          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.norm.running_mean   loaded from res4_22_branch2c_bn_running_mean  of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.norm.running_var    loaded from res4_22_branch2c_bn_running_var   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.norm.weight         loaded from res4_22_branch2c_bn_gamma         of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.22.conv3.weight              loaded from res4_22_branch2c_w                of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.bias            loaded from res4_3_branch2a_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.running_mean    loaded from res4_3_branch2a_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.running_var     loaded from res4_3_branch2a_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.norm.weight          loaded from res4_3_branch2a_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv1.weight               loaded from res4_3_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.bias            loaded from res4_3_branch2b_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.running_mean    loaded from res4_3_branch2b_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.running_var     loaded from res4_3_branch2b_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.norm.weight          loaded from res4_3_branch2b_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv2.weight               loaded from res4_3_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.bias            loaded from res4_3_branch2c_bn_beta           of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.running_mean    loaded from res4_3_branch2c_bn_running_mean   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.running_var     loaded from res4_3_branch2c_bn_running_var    of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.norm.weight          loaded from res4_3_branch2c_bn_gamma          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.3.conv3.weight               loaded from res4_3_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.bias            loaded from res4_4_branch2a_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.running_mean    loaded from res4_4_branch2a_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.running_var     loaded from res4_4_branch2a_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.norm.weight          loaded from res4_4_branch2a_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv1.weight               loaded from res4_4_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.bias            loaded from res4_4_branch2b_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.running_mean    loaded from res4_4_branch2b_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.running_var     loaded from res4_4_branch2b_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.norm.weight          loaded from res4_4_branch2b_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv2.weight               loaded from res4_4_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.bias            loaded from res4_4_branch2c_bn_beta           of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.running_mean    loaded from res4_4_branch2c_bn_running_mean   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.running_var     loaded from res4_4_branch2c_bn_running_var    of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.norm.weight          loaded from res4_4_branch2c_bn_gamma          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.4.conv3.weight               loaded from res4_4_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.bias            loaded from res4_5_branch2a_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.running_mean    loaded from res4_5_branch2a_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.running_var     loaded from res4_5_branch2a_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.norm.weight          loaded from res4_5_branch2a_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv1.weight               loaded from res4_5_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.bias            loaded from res4_5_branch2b_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.running_mean    loaded from res4_5_branch2b_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.running_var     loaded from res4_5_branch2b_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.norm.weight          loaded from res4_5_branch2b_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv2.weight               loaded from res4_5_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.bias            loaded from res4_5_branch2c_bn_beta           of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.running_mean    loaded from res4_5_branch2c_bn_running_mean   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.running_var     loaded from res4_5_branch2c_bn_running_var    of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.norm.weight          loaded from res4_5_branch2c_bn_gamma          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.5.conv3.weight               loaded from res4_5_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.norm.bias            loaded from res4_6_branch2a_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.norm.running_mean    loaded from res4_6_branch2a_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.norm.running_var     loaded from res4_6_branch2a_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.norm.weight          loaded from res4_6_branch2a_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv1.weight               loaded from res4_6_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.norm.bias            loaded from res4_6_branch2b_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.norm.running_mean    loaded from res4_6_branch2b_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.norm.running_var     loaded from res4_6_branch2b_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.norm.weight          loaded from res4_6_branch2b_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv2.weight               loaded from res4_6_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.norm.bias            loaded from res4_6_branch2c_bn_beta           of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.norm.running_mean    loaded from res4_6_branch2c_bn_running_mean   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.norm.running_var     loaded from res4_6_branch2c_bn_running_var    of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.norm.weight          loaded from res4_6_branch2c_bn_gamma          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.6.conv3.weight               loaded from res4_6_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.norm.bias            loaded from res4_7_branch2a_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.norm.running_mean    loaded from res4_7_branch2a_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.norm.running_var     loaded from res4_7_branch2a_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.norm.weight          loaded from res4_7_branch2a_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv1.weight               loaded from res4_7_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.norm.bias            loaded from res4_7_branch2b_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.norm.running_mean    loaded from res4_7_branch2b_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.norm.running_var     loaded from res4_7_branch2b_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.norm.weight          loaded from res4_7_branch2b_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv2.weight               loaded from res4_7_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.norm.bias            loaded from res4_7_branch2c_bn_beta           of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.norm.running_mean    loaded from res4_7_branch2c_bn_running_mean   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.norm.running_var     loaded from res4_7_branch2c_bn_running_var    of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.norm.weight          loaded from res4_7_branch2c_bn_gamma          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.7.conv3.weight               loaded from res4_7_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.norm.bias            loaded from res4_8_branch2a_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.norm.running_mean    loaded from res4_8_branch2a_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.norm.running_var     loaded from res4_8_branch2a_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.norm.weight          loaded from res4_8_branch2a_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv1.weight               loaded from res4_8_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.norm.bias            loaded from res4_8_branch2b_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.norm.running_mean    loaded from res4_8_branch2b_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.norm.running_var     loaded from res4_8_branch2b_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.norm.weight          loaded from res4_8_branch2b_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv2.weight               loaded from res4_8_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.norm.bias            loaded from res4_8_branch2c_bn_beta           of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.norm.running_mean    loaded from res4_8_branch2c_bn_running_mean   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.norm.running_var     loaded from res4_8_branch2c_bn_running_var    of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.norm.weight          loaded from res4_8_branch2c_bn_gamma          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.8.conv3.weight               loaded from res4_8_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.norm.bias            loaded from res4_9_branch2a_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.norm.running_mean    loaded from res4_9_branch2a_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.norm.running_var     loaded from res4_9_branch2a_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.norm.weight          loaded from res4_9_branch2a_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv1.weight               loaded from res4_9_branch2a_w                 of shape (256, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.norm.bias            loaded from res4_9_branch2b_bn_beta           of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.norm.running_mean    loaded from res4_9_branch2b_bn_running_mean   of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.norm.running_var     loaded from res4_9_branch2b_bn_running_var    of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.norm.weight          loaded from res4_9_branch2b_bn_gamma          of shape (256,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv2.weight               loaded from res4_9_branch2b_w                 of shape (256, 256, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.norm.bias            loaded from res4_9_branch2c_bn_beta           of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.norm.running_mean    loaded from res4_9_branch2c_bn_running_mean   of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.norm.running_var     loaded from res4_9_branch2c_bn_running_var    of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.norm.weight          loaded from res4_9_branch2c_bn_gamma          of shape (1024,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res4.9.conv3.weight               loaded from res4_9_branch2c_w                 of shape (1024, 256, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.bias            loaded from res5_0_branch2a_bn_beta           of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.running_mean    loaded from res5_0_branch2a_bn_running_mean   of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.running_var     loaded from res5_0_branch2a_bn_running_var    of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.norm.weight          loaded from res5_0_branch2a_bn_gamma          of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv1.weight               loaded from res5_0_branch2a_w                 of shape (512, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.bias            loaded from res5_0_branch2b_bn_beta           of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.running_mean    loaded from res5_0_branch2b_bn_running_mean   of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.running_var     loaded from res5_0_branch2b_bn_running_var    of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.norm.weight          loaded from res5_0_branch2b_bn_gamma          of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv2.weight               loaded from res5_0_branch2b_w                 of shape (512, 512, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.bias            loaded from res5_0_branch2c_bn_beta           of shape (2048,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.running_mean    loaded from res5_0_branch2c_bn_running_mean   of shape (2048,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.running_var     loaded from res5_0_branch2c_bn_running_var    of shape (2048,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.norm.weight          loaded from res5_0_branch2c_bn_gamma          of shape (2048,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.conv3.weight               loaded from res5_0_branch2c_w                 of shape (2048, 512, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.bias         loaded from res5_0_branch1_bn_beta            of shape (2048,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.running_mean loaded from res5_0_branch1_bn_running_mean    of shape (2048,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.running_var  loaded from res5_0_branch1_bn_running_var     of shape (2048,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.norm.weight       loaded from res5_0_branch1_bn_gamma           of shape (2048,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.0.shortcut.weight            loaded from res5_0_branch1_w                  of shape (2048, 1024, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.bias            loaded from res5_1_branch2a_bn_beta           of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.running_mean    loaded from res5_1_branch2a_bn_running_mean   of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.running_var     loaded from res5_1_branch2a_bn_running_var    of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.norm.weight          loaded from res5_1_branch2a_bn_gamma          of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv1.weight               loaded from res5_1_branch2a_w                 of shape (512, 2048, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.bias            loaded from res5_1_branch2b_bn_beta           of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.running_mean    loaded from res5_1_branch2b_bn_running_mean   of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.running_var     loaded from res5_1_branch2b_bn_running_var    of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.norm.weight          loaded from res5_1_branch2b_bn_gamma          of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv2.weight               loaded from res5_1_branch2b_w                 of shape (512, 512, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.bias            loaded from res5_1_branch2c_bn_beta           of shape (2048,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.running_mean    loaded from res5_1_branch2c_bn_running_mean   of shape (2048,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.running_var     loaded from res5_1_branch2c_bn_running_var    of shape (2048,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.norm.weight          loaded from res5_1_branch2c_bn_gamma          of shape (2048,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.1.conv3.weight               loaded from res5_1_branch2c_w                 of shape (2048, 512, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.bias            loaded from res5_2_branch2a_bn_beta           of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.running_mean    loaded from res5_2_branch2a_bn_running_mean   of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.running_var     loaded from res5_2_branch2a_bn_running_var    of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.norm.weight          loaded from res5_2_branch2a_bn_gamma          of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv1.weight               loaded from res5_2_branch2a_w                 of shape (512, 2048, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.bias            loaded from res5_2_branch2b_bn_beta           of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.running_mean    loaded from res5_2_branch2b_bn_running_mean   of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.running_var     loaded from res5_2_branch2b_bn_running_var    of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.norm.weight          loaded from res5_2_branch2b_bn_gamma          of shape (512,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv2.weight               loaded from res5_2_branch2b_w                 of shape (512, 512, 3, 3)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.bias            loaded from res5_2_branch2c_bn_beta           of shape (2048,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.running_mean    loaded from res5_2_branch2c_bn_running_mean   of shape (2048,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.running_var     loaded from res5_2_branch2c_bn_running_var    of shape (2048,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.norm.weight          loaded from res5_2_branch2c_bn_gamma          of shape (2048,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.res5.2.conv3.weight               loaded from res5_2_branch2c_w                 of shape (2048, 512, 1, 1)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.bias              loaded from res_conv1_bn_beta                 of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.running_mean      loaded from res_conv1_bn_running_mean         of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.running_var       loaded from res_conv1_bn_running_var          of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.norm.weight            loaded from res_conv1_bn_gamma                of shape (64,)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: backbone.bottom_up.stem.conv1.weight                 loaded from conv1_w                           of shape (64, 3, 7, 7)
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: Some model parameters or buffers are not found in the checkpoint:
  [34mbackbone.fpn_lateral3.{bias, weight}[0m
  [34mbackbone.fpn_lateral4.{bias, weight}[0m
  [34mbackbone.fpn_lateral5.{bias, weight}[0m
  [34mbackbone.fpn_output3.{bias, weight}[0m
  [34mbackbone.fpn_output4.{bias, weight}[0m
  [34mbackbone.fpn_output5.{bias, weight}[0m
  [34mbackbone.top_block.p6.{bias, weight}[0m
  [34mbackbone.top_block.p7.{bias, weight}[0m
  [34mpixel_mean[0m
  [34mpixel_std[0m
  [34mproposal_generator.fcos_head.bbox_pred.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.0.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.1.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.10.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.3.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.4.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.6.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.7.{bias, weight}[0m
  [34mproposal_generator.fcos_head.bbox_tower.9.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_logits.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.0.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.1.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.10.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.3.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.4.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.6.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.7.{bias, weight}[0m
  [34mproposal_generator.fcos_head.cls_tower.9.{bias, weight}[0m
  [34mproposal_generator.fcos_head.controller.{bias, weight}[0m
  [34mproposal_generator.fcos_head.ctrness.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.0.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.1.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.10.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.12.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.13.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.15.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.16.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.18.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.19.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.21.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.22.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.3.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.4.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.6.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.7.{bias, weight}[0m
  [34mproposal_generator.fcos_head.mask_tower.9.{bias, weight}[0m
  [34mproposal_generator.fcos_head.scales.0.scale[0m
  [34mproposal_generator.fcos_head.scales.1.scale[0m
  [34mproposal_generator.fcos_head.scales.2.scale[0m
  [34mproposal_generator.fcos_head.scales.3.scale[0m
  [34mproposal_generator.fcos_head.scales.4.scale[0m
[09/17 08:04:20] d2.checkpoint.c2_model_loading INFO: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000_b[0m
  [35mfc1000_w[0m
[09/17 08:04:32] d2.utils.events INFO:  eta: 13:44:29  iter: 19  total_loss: 2.768  loss_fcos_cls: 1.08  loss_fcos_loc: 0.9746  loss_fcos_ctr: 0.7388  loss_mask: 0  time: 0.5619  data_time: 0.0124  lr: 0.00019981  max_mem: 9360M
[09/17 08:04:43] d2.utils.events INFO:  eta: 13:51:28  iter: 39  total_loss: 2.538  loss_fcos_cls: 0.9327  loss_fcos_loc: 0.9278  loss_fcos_ctr: 0.6685  loss_mask: 0  time: 0.5602  data_time: 0.0058  lr: 0.00039961  max_mem: 9682M
[09/17 08:08:10] detectron2 INFO: Rank of current process: 0. World size: 1
[09/17 08:08:12] detectron2 INFO: Environment info:
----------------------  -------------------------------------------------------------
sys.platform            linux
Python                  3.7.1 (default, Sep  3 2020, 23:56:06) [GCC 5.4.0 20160609]
numpy                   1.19.1
detectron2              0.2.1 @/home/zzk/workspace/detectron2/detectron2
Compiler                GCC 6.5
CUDA compiler           CUDA 11.0
detectron2 arch flags   7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/zzk/py37/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2               GeForce RTX 2080 Ti (arch=7.5)
CUDA_HOME               /usr/local/cuda
Pillow                  7.2.0
torchvision             0.5.0 @/home/zzk/py37/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20200912
cv2                     4.4.0
----------------------  -------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[09/17 08:08:12] detectron2 INFO: Command line arguments: Namespace(config_file='configs/CondInst/MS_R_101_3x.yaml', dist_url='tcp://127.0.0.1:50155', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './checkpoint/CondInst_new.pth'], resume=True)
[09/17 08:08:12] detectron2 INFO: Contents of args.config_file=configs/CondInst/MS_R_101_3x.yaml:
_BASE_: "Base-FCOS.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"
  RESNETS:
    DEPTH: 101
SOLVER:
  STEPS: (60000, 80000)
  MAX_ITER: 90000
OUTPUT_DIR: "output/fcos/R_101_3x"

[09/17 08:08:12] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('HICO-det-test',)
  TRAIN: ('HICO-det-train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: bitmask
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_fcos_resnet_fpn_backbone
  DEVICE: cuda
  FCOS:
    CENTER_SAMPLE: True
    FPN_STRIDES: [8, 16, 32, 64, 128]
    INFERENCE_TH_TEST: 0.05
    INFERENCE_TH_TRAIN: 0.05
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    LOC_LOSS_TYPE: giou
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.6
    NORM: GN
    NUM_BOX_CONVS: 4
    NUM_CLASSES: 80
    NUM_CLS_CONVS: 4
    NUM_SHARE_CONVS: 0
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 100
    POS_RADIUS: 1.5
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 1000
    PRIOR_PROB: 0.01
    SIZES_OF_INTEREST: [64, 128, 256, 512]
    THRESH_WITH_CTR: False
    TOP_LEVELS: 2
    USE_DEFORMABLE: False
    USE_RELU: True
    USE_SCALE: True
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: OneStageDetector
  MOBILENET: False
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FCOS
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  VOVNET:
    BACKBONE_OUT_CHANNELS: 256
    CONV_BODY: V-39-eSE
    NORM: FrozenBN
    OUT_CHANNELS: 256
    OUT_FEATURES: ['stage2', 'stage3', 'stage4', 'stage5']
  WEIGHTS: ./checkpoint/CondInst_new.pth
OUTPUT_DIR: output/fcos/R_101_3x
SEED: -1
SOLVER:
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[09/17 08:08:12] detectron2 INFO: Full config saved to output/fcos/R_101_3x/config.yaml
[09/17 08:08:12] d2.utils.env INFO: Using a generated random seed 12206811
[09/17 08:08:14] d2.engine.defaults INFO: Model:
OneStageDetector(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): FCOS(
    (iou_loss): IOULoss()
    (fcos_head): FCOSHead(
      (cls_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (bbox_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (share_tower): Sequential()
      (mask_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (13): GroupNorm(32, 256, eps=1e-05, affine=True)
        (14): ReLU()
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (16): GroupNorm(32, 256, eps=1e-05, affine=True)
        (17): ReLU()
        (18): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (19): GroupNorm(32, 256, eps=1e-05, affine=True)
        (20): ReLU()
        (21): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (22): GroupNorm(32, 256, eps=1e-05, affine=True)
        (23): ReLU()
      )
      (cls_logits): Conv2d(256, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bbox_pred): Conv2d(256, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (ctrness): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (controller): Conv2d(256, 169, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
        (3): Scale()
        (4): Scale()
      )
    )
  )
)
[09/17 08:08:14] d2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[09/17 08:08:14] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/17 08:08:14] d2.data.datasets.coco INFO: Loaded 38116 images in COCO format from /data01/zzk/data/hico_20160224_det/hico_annotations_train2015.json
[09/17 08:08:15] d2.data.build INFO: Removed 659 images with no usable annotations. 37457 images left.
[09/17 08:08:15] d2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 59249        |   bicycle    | 3249         |      car      | 1060         |
|  motorcycle   | 2119         |   airplane   | 607          |      bus      | 925          |
|     train     | 439          |    truck     | 401          |     boat      | 1689         |
| traffic light | 171          | fire hydrant | 128          |   stop sign   | 49           |
| parking meter | 163          |    bench     | 1470         |     bird      | 550          |
|      cat      | 254          |     dog      | 718          |     horse     | 1912         |
|     sheep     | 909          |     cow      | 717          |   elephant    | 567          |
|     bear      | 90           |    zebra     | 50           |    giraffe    | 320          |
|   backpack    | 1205         |   umbrella   | 1693         |    handbag    | 192          |
|      tie      | 909          |   suitcase   | 608          |    frisbee    | 780          |
|     skis      | 1146         |  snowboard   | 824          |  sports ball  | 947          |
|     kite      | 1066         | baseball bat | 745          | baseball gl.. | 203          |
|  skateboard   | 2466         |  surfboard   | 618          | tennis racket | 295          |
|    bottle     | 890          |  wine glass  | 693          |      cup      | 454          |
|     fork      | 178          |    knife     | 636          |     spoon     | 274          |
|     bowl      | 130          |    banana    | 850          |     apple     | 283          |
|   sandwich    | 269          |    orange    | 74           |   broccoli    | 93           |
|    carrot     | 269          |   hot dog    | 374          |     pizza     | 424          |
|     donut     | 417          |     cake     | 787          |     chair     | 1425         |
|     couch     | 767          | potted plant | 143          |      bed      | 435          |
| dining table  | 1019         |    toilet    | 172          |      tv       | 251          |
|    laptop     | 719          |    mouse     | 70           |    remote     | 198          |
|   keyboard    | 323          |  cell phone  | 547          |   microwave   | 26           |
|     oven      | 122          |   toaster    | 7            |     sink      | 76           |
| refrigerator  | 69           |     book     | 1062         |     clock     | 203          |
|     vase      | 102          |   scissors   | 242          |  teddy bear   | 349          |
|  hair drier   | 52           |  toothbrush  | 348          |               |              |
|     total     | 107325       |              |              |               |              |[0m
[09/17 08:08:15] d2.data.common INFO: Serializing 37457 elements to byte tensors and concatenating them all ...
[09/17 08:08:15] d2.data.common INFO: Serialized dataset takes 14.72 MiB
[09/17 08:08:15] d2.data.build INFO: Using training sampler TrainingSampler
[09/17 08:08:16] fvcore.common.checkpoint INFO: Loading checkpoint from ./checkpoint/CondInst_new.pth
[09/17 08:08:28] d2.utils.events INFO:  eta: 14:12:46  iter: 19  total_loss: 1.336  loss_fcos_cls: 0.4249  loss_fcos_loc: 0.1981  loss_fcos_ctr: 0.6228  loss_mask: 0  time: 0.6084  data_time: 0.0131  lr: 0.00019981  max_mem: 9704M
[09/17 08:08:39] d2.utils.events INFO:  eta: 13:57:04  iter: 39  total_loss: 1.147  loss_fcos_cls: 0.3412  loss_fcos_loc: 0.2045  loss_fcos_ctr: 0.616  loss_mask: 0  time: 0.5802  data_time: 0.0058  lr: 0.00039961  max_mem: 9704M
[09/17 08:09:04] detectron2 INFO: Rank of current process: 0. World size: 1
[09/17 08:09:06] detectron2 INFO: Environment info:
----------------------  -------------------------------------------------------------
sys.platform            linux
Python                  3.7.1 (default, Sep  3 2020, 23:56:06) [GCC 5.4.0 20160609]
numpy                   1.19.1
detectron2              0.2.1 @/home/zzk/workspace/detectron2/detectron2
Compiler                GCC 6.5
CUDA compiler           CUDA 11.0
detectron2 arch flags   7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/zzk/py37/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2               GeForce RTX 2080 Ti (arch=7.5)
CUDA_HOME               /usr/local/cuda
Pillow                  7.2.0
torchvision             0.5.0 @/home/zzk/py37/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20200912
cv2                     4.4.0
----------------------  -------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[09/17 08:09:06] detectron2 INFO: Command line arguments: Namespace(config_file='configs/CondInst/MS_R_101_3x.yaml', dist_url='tcp://127.0.0.1:50155', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './checkpoint/CondInst_new.pth', 'SOLVER.IMS_PER_BATCH', '2'], resume=True)
[09/17 08:09:06] detectron2 INFO: Contents of args.config_file=configs/CondInst/MS_R_101_3x.yaml:
_BASE_: "Base-FCOS.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"
  RESNETS:
    DEPTH: 101
SOLVER:
  STEPS: (60000, 80000)
  MAX_ITER: 90000
OUTPUT_DIR: "output/fcos/R_101_3x"

[09/17 08:09:06] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('HICO-det-test',)
  TRAIN: ('HICO-det-train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: bitmask
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_fcos_resnet_fpn_backbone
  DEVICE: cuda
  FCOS:
    CENTER_SAMPLE: True
    FPN_STRIDES: [8, 16, 32, 64, 128]
    INFERENCE_TH_TEST: 0.05
    INFERENCE_TH_TRAIN: 0.05
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    LOC_LOSS_TYPE: giou
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.6
    NORM: GN
    NUM_BOX_CONVS: 4
    NUM_CLASSES: 80
    NUM_CLS_CONVS: 4
    NUM_SHARE_CONVS: 0
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 100
    POS_RADIUS: 1.5
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 1000
    PRIOR_PROB: 0.01
    SIZES_OF_INTEREST: [64, 128, 256, 512]
    THRESH_WITH_CTR: False
    TOP_LEVELS: 2
    USE_DEFORMABLE: False
    USE_RELU: True
    USE_SCALE: True
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: OneStageDetector
  MOBILENET: False
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FCOS
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  VOVNET:
    BACKBONE_OUT_CHANNELS: 256
    CONV_BODY: V-39-eSE
    NORM: FrozenBN
    OUT_CHANNELS: 256
    OUT_FEATURES: ['stage2', 'stage3', 'stage4', 'stage5']
  WEIGHTS: ./checkpoint/CondInst_new.pth
OUTPUT_DIR: output/fcos/R_101_3x
SEED: -1
SOLVER:
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[09/17 08:09:06] detectron2 INFO: Full config saved to output/fcos/R_101_3x/config.yaml
[09/17 08:09:06] d2.utils.env INFO: Using a generated random seed 6531601
[09/17 08:09:08] d2.engine.defaults INFO: Model:
OneStageDetector(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): FCOS(
    (iou_loss): IOULoss()
    (fcos_head): FCOSHead(
      (cls_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (bbox_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (share_tower): Sequential()
      (mask_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (13): GroupNorm(32, 256, eps=1e-05, affine=True)
        (14): ReLU()
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (16): GroupNorm(32, 256, eps=1e-05, affine=True)
        (17): ReLU()
        (18): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (19): GroupNorm(32, 256, eps=1e-05, affine=True)
        (20): ReLU()
        (21): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (22): GroupNorm(32, 256, eps=1e-05, affine=True)
        (23): ReLU()
      )
      (cls_logits): Conv2d(256, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bbox_pred): Conv2d(256, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (ctrness): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (controller): Conv2d(256, 169, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
        (3): Scale()
        (4): Scale()
      )
    )
  )
)
[09/17 08:09:08] d2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[09/17 08:09:09] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/17 08:09:09] d2.data.datasets.coco INFO: Loaded 38116 images in COCO format from /data01/zzk/data/hico_20160224_det/hico_annotations_train2015.json
[09/17 08:09:09] d2.data.build INFO: Removed 659 images with no usable annotations. 37457 images left.
[09/17 08:09:10] d2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 59249        |   bicycle    | 3249         |      car      | 1060         |
|  motorcycle   | 2119         |   airplane   | 607          |      bus      | 925          |
|     train     | 439          |    truck     | 401          |     boat      | 1689         |
| traffic light | 171          | fire hydrant | 128          |   stop sign   | 49           |
| parking meter | 163          |    bench     | 1470         |     bird      | 550          |
|      cat      | 254          |     dog      | 718          |     horse     | 1912         |
|     sheep     | 909          |     cow      | 717          |   elephant    | 567          |
|     bear      | 90           |    zebra     | 50           |    giraffe    | 320          |
|   backpack    | 1205         |   umbrella   | 1693         |    handbag    | 192          |
|      tie      | 909          |   suitcase   | 608          |    frisbee    | 780          |
|     skis      | 1146         |  snowboard   | 824          |  sports ball  | 947          |
|     kite      | 1066         | baseball bat | 745          | baseball gl.. | 203          |
|  skateboard   | 2466         |  surfboard   | 618          | tennis racket | 295          |
|    bottle     | 890          |  wine glass  | 693          |      cup      | 454          |
|     fork      | 178          |    knife     | 636          |     spoon     | 274          |
|     bowl      | 130          |    banana    | 850          |     apple     | 283          |
|   sandwich    | 269          |    orange    | 74           |   broccoli    | 93           |
|    carrot     | 269          |   hot dog    | 374          |     pizza     | 424          |
|     donut     | 417          |     cake     | 787          |     chair     | 1425         |
|     couch     | 767          | potted plant | 143          |      bed      | 435          |
| dining table  | 1019         |    toilet    | 172          |      tv       | 251          |
|    laptop     | 719          |    mouse     | 70           |    remote     | 198          |
|   keyboard    | 323          |  cell phone  | 547          |   microwave   | 26           |
|     oven      | 122          |   toaster    | 7            |     sink      | 76           |
| refrigerator  | 69           |     book     | 1062         |     clock     | 203          |
|     vase      | 102          |   scissors   | 242          |  teddy bear   | 349          |
|  hair drier   | 52           |  toothbrush  | 348          |               |              |
|     total     | 107325       |              |              |               |              |[0m
[09/17 08:09:10] d2.data.common INFO: Serializing 37457 elements to byte tensors and concatenating them all ...
[09/17 08:09:10] d2.data.common INFO: Serialized dataset takes 14.72 MiB
[09/17 08:09:10] d2.data.build INFO: Using training sampler TrainingSampler
[09/17 08:09:10] fvcore.common.checkpoint INFO: Loading checkpoint from ./checkpoint/CondInst_new.pth
[09/17 08:09:16] d2.utils.events INFO:  eta: 7:25:22  iter: 19  total_loss: 1.245  loss_fcos_cls: 0.3991  loss_fcos_loc: 0.1976  loss_fcos_ctr: 0.6148  loss_mask: 0  time: 0.2900  data_time: 0.0094  lr: 0.00019981  max_mem: 5132M
[09/17 08:09:22] d2.utils.events INFO:  eta: 7:10:01  iter: 39  total_loss: 1.124  loss_fcos_cls: 0.2877  loss_fcos_loc: 0.1961  loss_fcos_ctr: 0.6117  loss_mask: 0  time: 0.2859  data_time: 0.0028  lr: 0.00039961  max_mem: 5132M
[09/17 08:09:27] d2.utils.events INFO:  eta: 7:02:26  iter: 59  total_loss: 1.074  loss_fcos_cls: 0.2696  loss_fcos_loc: 0.1774  loss_fcos_ctr: 0.6125  loss_mask: 0  time: 0.2818  data_time: 0.0028  lr: 0.00059941  max_mem: 5132M
[09/17 08:09:33] d2.utils.events INFO:  eta: 7:06:59  iter: 79  total_loss: 1.192  loss_fcos_cls: 0.3317  loss_fcos_loc: 0.2455  loss_fcos_ctr: 0.6158  loss_mask: 0  time: 0.2843  data_time: 0.0028  lr: 0.00079921  max_mem: 5132M
[09/17 08:09:39] d2.utils.events INFO:  eta: 7:05:15  iter: 99  total_loss: 1.194  loss_fcos_cls: 0.3682  loss_fcos_loc: 0.2234  loss_fcos_ctr: 0.6127  loss_mask: 0  time: 0.2832  data_time: 0.0028  lr: 0.00099901  max_mem: 5132M
[09/17 08:09:45] d2.utils.events INFO:  eta: 7:07:19  iter: 119  total_loss: 1.157  loss_fcos_cls: 0.2975  loss_fcos_loc: 0.2441  loss_fcos_ctr: 0.6247  loss_mask: 0  time: 0.2846  data_time: 0.0029  lr: 0.0011988  max_mem: 5132M
[09/17 08:09:50] d2.utils.events INFO:  eta: 7:07:13  iter: 139  total_loss: 1.237  loss_fcos_cls: 0.3501  loss_fcos_loc: 0.2673  loss_fcos_ctr: 0.6209  loss_mask: 0  time: 0.2844  data_time: 0.0029  lr: 0.0013986  max_mem: 5132M
[09/17 08:09:56] d2.utils.events INFO:  eta: 7:07:04  iter: 159  total_loss: 1.175  loss_fcos_cls: 0.3144  loss_fcos_loc: 0.2315  loss_fcos_ctr: 0.6178  loss_mask: 0  time: 0.2838  data_time: 0.0028  lr: 0.0015984  max_mem: 5132M
[09/17 08:10:02] d2.utils.events INFO:  eta: 7:06:58  iter: 179  total_loss: 1.265  loss_fcos_cls: 0.3825  loss_fcos_loc: 0.2378  loss_fcos_ctr: 0.6168  loss_mask: 0  time: 0.2842  data_time: 0.0028  lr: 0.0017982  max_mem: 5132M
[09/17 08:10:08] d2.utils.events INFO:  eta: 7:06:52  iter: 199  total_loss: 1.224  loss_fcos_cls: 0.3799  loss_fcos_loc: 0.2188  loss_fcos_ctr: 0.6298  loss_mask: 0  time: 0.2846  data_time: 0.0029  lr: 0.001998  max_mem: 5132M
[09/17 08:10:14] d2.utils.events INFO:  eta: 7:09:01  iter: 219  total_loss: 1.311  loss_fcos_cls: 0.4467  loss_fcos_loc: 0.2301  loss_fcos_ctr: 0.6123  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.0021978  max_mem: 5132M
[09/17 08:10:19] d2.utils.events INFO:  eta: 7:08:55  iter: 239  total_loss: 1.429  loss_fcos_cls: 0.4537  loss_fcos_loc: 0.2872  loss_fcos_ctr: 0.6323  loss_mask: 0  time: 0.2866  data_time: 0.0030  lr: 0.0023976  max_mem: 5132M
[09/17 08:10:25] d2.utils.events INFO:  eta: 7:10:29  iter: 259  total_loss: 1.369  loss_fcos_cls: 0.4882  loss_fcos_loc: 0.2195  loss_fcos_ctr: 0.6198  loss_mask: 0  time: 0.2867  data_time: 0.0028  lr: 0.0025974  max_mem: 5132M
[09/17 08:10:31] d2.utils.events INFO:  eta: 7:11:00  iter: 279  total_loss: 1.302  loss_fcos_cls: 0.4294  loss_fcos_loc: 0.2431  loss_fcos_ctr: 0.6194  loss_mask: 0  time: 0.2863  data_time: 0.0027  lr: 0.0027972  max_mem: 5132M
[09/17 08:10:36] d2.utils.events INFO:  eta: 7:07:54  iter: 299  total_loss: 1.289  loss_fcos_cls: 0.4069  loss_fcos_loc: 0.2591  loss_fcos_ctr: 0.6126  loss_mask: 0  time: 0.2854  data_time: 0.0028  lr: 0.002997  max_mem: 5132M
[09/17 08:10:42] d2.utils.events INFO:  eta: 7:08:10  iter: 319  total_loss: 1.404  loss_fcos_cls: 0.5057  loss_fcos_loc: 0.2627  loss_fcos_ctr: 0.6216  loss_mask: 0  time: 0.2855  data_time: 0.0028  lr: 0.0031968  max_mem: 5132M
[09/17 08:10:48] d2.utils.events INFO:  eta: 7:08:04  iter: 339  total_loss: 1.362  loss_fcos_cls: 0.4512  loss_fcos_loc: 0.2932  loss_fcos_ctr: 0.6254  loss_mask: 0  time: 0.2855  data_time: 0.0028  lr: 0.0033966  max_mem: 5132M
[09/17 08:10:49] detectron2 INFO: Rank of current process: 0. World size: 1
[09/17 08:10:49] detectron2 INFO: Environment info:
----------------------  -------------------------------------------------------------
sys.platform            linux
Python                  3.7.1 (default, Sep  3 2020, 23:56:06) [GCC 5.4.0 20160609]
numpy                   1.19.1
detectron2              0.2.1 @/home/zzk/workspace/detectron2/detectron2
Compiler                GCC 6.5
CUDA compiler           CUDA 11.0
detectron2 arch flags   7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/zzk/py37/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   GeForce RTX 2080 Ti (arch=7.5)
CUDA_HOME               /usr/local/cuda
Pillow                  7.2.0
torchvision             0.5.0 @/home/zzk/py37/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20200912
cv2                     4.4.0
----------------------  -------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[09/17 08:10:49] detectron2 INFO: Command line arguments: Namespace(config_file='configs/CondInst/MS_R_101_3x.yaml', dist_url='tcp://127.0.0.1:50155', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './checkpoint/CondInst_new.pth'], resume=False)
[09/17 08:10:49] detectron2 INFO: Contents of args.config_file=configs/CondInst/MS_R_101_3x.yaml:
_BASE_: "Base-FCOS.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"
  RESNETS:
    DEPTH: 101
SOLVER:
  STEPS: (60000, 80000)
  MAX_ITER: 90000
OUTPUT_DIR: "output/fcos/R_101_3x"

[09/17 08:10:49] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('HICO-det-test',)
  TRAIN: ('HICO-det-train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: bitmask
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_fcos_resnet_fpn_backbone
  DEVICE: cuda
  FCOS:
    CENTER_SAMPLE: True
    FPN_STRIDES: [8, 16, 32, 64, 128]
    INFERENCE_TH_TEST: 0.05
    INFERENCE_TH_TRAIN: 0.05
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    LOC_LOSS_TYPE: giou
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.6
    NORM: GN
    NUM_BOX_CONVS: 4
    NUM_CLASSES: 80
    NUM_CLS_CONVS: 4
    NUM_SHARE_CONVS: 0
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 100
    POS_RADIUS: 1.5
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 1000
    PRIOR_PROB: 0.01
    SIZES_OF_INTEREST: [64, 128, 256, 512]
    THRESH_WITH_CTR: False
    TOP_LEVELS: 2
    USE_DEFORMABLE: False
    USE_RELU: True
    USE_SCALE: True
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: OneStageDetector
  MOBILENET: False
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FCOS
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  VOVNET:
    BACKBONE_OUT_CHANNELS: 256
    CONV_BODY: V-39-eSE
    NORM: FrozenBN
    OUT_CHANNELS: 256
    OUT_FEATURES: ['stage2', 'stage3', 'stage4', 'stage5']
  WEIGHTS: ./checkpoint/CondInst_new.pth
OUTPUT_DIR: output/fcos/R_101_3x
SEED: -1
SOLVER:
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[09/17 08:10:49] detectron2 INFO: Full config saved to output/fcos/R_101_3x/config.yaml
[09/17 08:10:49] d2.utils.env INFO: Using a generated random seed 49529214
[09/17 08:10:51] d2.engine.defaults INFO: Model:
OneStageDetector(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): FCOS(
    (iou_loss): IOULoss()
    (fcos_head): FCOSHead(
      (cls_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (bbox_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (share_tower): Sequential()
      (mask_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (13): GroupNorm(32, 256, eps=1e-05, affine=True)
        (14): ReLU()
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (16): GroupNorm(32, 256, eps=1e-05, affine=True)
        (17): ReLU()
        (18): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (19): GroupNorm(32, 256, eps=1e-05, affine=True)
        (20): ReLU()
        (21): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (22): GroupNorm(32, 256, eps=1e-05, affine=True)
        (23): ReLU()
      )
      (cls_logits): Conv2d(256, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bbox_pred): Conv2d(256, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (ctrness): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (controller): Conv2d(256, 169, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
        (3): Scale()
        (4): Scale()
      )
    )
  )
)
[09/17 08:10:51] fvcore.common.checkpoint INFO: Loading checkpoint from ./checkpoint/CondInst_new.pth
[09/17 08:10:52] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/17 08:10:52] d2.data.datasets.coco INFO: Loaded 9658 images in COCO format from /data01/zzk/data/hico_20160224_det/hico_annotations_test2015.json
[09/17 08:10:52] d2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 14961        |   bicycle    | 835          |      car      | 271          |
|  motorcycle   | 558          |   airplane   | 160          |      bus      | 224          |
|     train     | 114          |    truck     | 105          |     boat      | 456          |
| traffic light | 51           | fire hydrant | 38           |   stop sign   | 15           |
| parking meter | 35           |    bench     | 313          |     bird      | 174          |
|      cat      | 79           |     dog      | 194          |     horse     | 546          |
|     sheep     | 151          |     cow      | 208          |   elephant    | 163          |
|     bear      | 25           |    zebra     | 23           |    giraffe    | 78           |
|   backpack    | 272          |   umbrella   | 345          |    handbag    | 62           |
|      tie      | 189          |   suitcase   | 94           |    frisbee    | 186          |
|     skis      | 310          |  snowboard   | 199          |  sports ball  | 257          |
|     kite      | 281          | baseball bat | 177          | baseball gl.. | 50           |
|  skateboard   | 661          |  surfboard   | 168          | tennis racket | 73           |
|    bottle     | 211          |  wine glass  | 154          |      cup      | 117          |
|     fork      | 49           |    knife     | 174          |     spoon     | 71           |
|     bowl      | 51           |    banana    | 151          |     apple     | 86           |
|   sandwich    | 67           |    orange    | 87           |   broccoli    | 42           |
|    carrot     | 98           |   hot dog    | 104          |     pizza     | 117          |
|     donut     | 111          |     cake     | 194          |     chair     | 333          |
|     couch     | 189          | potted plant | 28           |      bed      | 93           |
| dining table  | 242          |    toilet    | 60           |      tv       | 51           |
|    laptop     | 157          |    mouse     | 13           |    remote     | 52           |
|   keyboard    | 72           |  cell phone  | 150          |   microwave   | 16           |
|     oven      | 38           |   toaster    | 18           |     sink      | 21           |
| refrigerator  | 19           |     book     | 255          |     clock     | 48           |
|     vase      | 23           |   scissors   | 74           |  teddy bear   | 69           |
|  hair drier   | 22           |  toothbrush  | 112          |               |              |
|     total     | 27140        |              |              |               |              |[0m
[09/17 08:10:52] d2.data.common INFO: Serializing 9658 elements to byte tensors and concatenating them all ...
[09/17 08:10:52] d2.data.common INFO: Serialized dataset takes 3.74 MiB
[09/17 08:10:52] d2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/17 08:10:54] d2.utils.events INFO:  eta: 7:09:11  iter: 359  total_loss: 1.345  loss_fcos_cls: 0.4363  loss_fcos_loc: 0.2402  loss_fcos_ctr: 0.6234  loss_mask: 0  time: 0.2858  data_time: 0.0031  lr: 0.0035964  max_mem: 5132M
[09/17 08:10:59] d2.utils.events INFO:  eta: 7:07:53  iter: 379  total_loss: 1.443  loss_fcos_cls: 0.5139  loss_fcos_loc: 0.3005  loss_fcos_ctr: 0.6344  loss_mask: 0  time: 0.2856  data_time: 0.0028  lr: 0.0037962  max_mem: 5132M
[09/17 08:11:05] d2.utils.events INFO:  eta: 7:07:25  iter: 399  total_loss: 1.355  loss_fcos_cls: 0.4543  loss_fcos_loc: 0.2821  loss_fcos_ctr: 0.6179  loss_mask: 0  time: 0.2856  data_time: 0.0029  lr: 0.003996  max_mem: 5132M
[09/17 08:11:11] d2.utils.events INFO:  eta: 7:08:55  iter: 419  total_loss: 1.334  loss_fcos_cls: 0.435  loss_fcos_loc: 0.2604  loss_fcos_ctr: 0.6216  loss_mask: 0  time: 0.2860  data_time: 0.0029  lr: 0.0041958  max_mem: 5132M
[09/17 08:11:17] d2.utils.events INFO:  eta: 7:07:58  iter: 439  total_loss: 1.415  loss_fcos_cls: 0.5282  loss_fcos_loc: 0.2654  loss_fcos_ctr: 0.6261  loss_mask: 0  time: 0.2859  data_time: 0.0030  lr: 0.0043956  max_mem: 5132M
[09/17 08:11:21] detectron2 INFO: Rank of current process: 0. World size: 1
[09/17 08:11:21] detectron2 INFO: Environment info:
----------------------  -------------------------------------------------------------
sys.platform            linux
Python                  3.7.1 (default, Sep  3 2020, 23:56:06) [GCC 5.4.0 20160609]
numpy                   1.19.1
detectron2              0.2.1 @/home/zzk/workspace/detectron2/detectron2
Compiler                GCC 6.5
CUDA compiler           CUDA 11.0
detectron2 arch flags   7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/zzk/py37/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   GeForce RTX 2080 Ti (arch=7.5)
CUDA_HOME               /usr/local/cuda
Pillow                  7.2.0
torchvision             0.5.0 @/home/zzk/py37/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20200912
cv2                     4.4.0
----------------------  -------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[09/17 08:11:21] detectron2 INFO: Command line arguments: Namespace(config_file='configs/CondInst/MS_R_101_3x.yaml', dist_url='tcp://127.0.0.1:50155', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './checkpoint/CondInst_new.pth'], resume=False)
[09/17 08:11:21] detectron2 INFO: Contents of args.config_file=configs/CondInst/MS_R_101_3x.yaml:
_BASE_: "Base-FCOS.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"
  RESNETS:
    DEPTH: 101
SOLVER:
  STEPS: (60000, 80000)
  MAX_ITER: 90000
OUTPUT_DIR: "output/fcos/R_101_3x"

[09/17 08:11:21] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('HICO-det-test',)
  TRAIN: ('HICO-det-train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: bitmask
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_fcos_resnet_fpn_backbone
  DEVICE: cuda
  FCOS:
    CENTER_SAMPLE: True
    FPN_STRIDES: [8, 16, 32, 64, 128]
    INFERENCE_TH_TEST: 0.05
    INFERENCE_TH_TRAIN: 0.05
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    LOC_LOSS_TYPE: giou
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.6
    NORM: GN
    NUM_BOX_CONVS: 4
    NUM_CLASSES: 80
    NUM_CLS_CONVS: 4
    NUM_SHARE_CONVS: 0
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 100
    POS_RADIUS: 1.5
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 1000
    PRIOR_PROB: 0.01
    SIZES_OF_INTEREST: [64, 128, 256, 512]
    THRESH_WITH_CTR: False
    TOP_LEVELS: 2
    USE_DEFORMABLE: False
    USE_RELU: True
    USE_SCALE: True
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: OneStageDetector
  MOBILENET: False
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FCOS
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  VOVNET:
    BACKBONE_OUT_CHANNELS: 256
    CONV_BODY: V-39-eSE
    NORM: FrozenBN
    OUT_CHANNELS: 256
    OUT_FEATURES: ['stage2', 'stage3', 'stage4', 'stage5']
  WEIGHTS: ./checkpoint/CondInst_new.pth
OUTPUT_DIR: output/fcos/R_101_3x
SEED: -1
SOLVER:
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[09/17 08:11:21] detectron2 INFO: Full config saved to output/fcos/R_101_3x/config.yaml
[09/17 08:11:21] d2.utils.env INFO: Using a generated random seed 21686766
[09/17 08:11:22] d2.utils.events INFO:  eta: 7:07:52  iter: 459  total_loss: 1.427  loss_fcos_cls: 0.5193  loss_fcos_loc: 0.2846  loss_fcos_ctr: 0.6241  loss_mask: 0  time: 0.2859  data_time: 0.0028  lr: 0.0045954  max_mem: 5132M
[09/17 08:11:23] d2.engine.defaults INFO: Model:
OneStageDetector(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): FCOS(
    (iou_loss): IOULoss()
    (fcos_head): FCOSHead(
      (cls_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (bbox_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (share_tower): Sequential()
      (mask_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (13): GroupNorm(32, 256, eps=1e-05, affine=True)
        (14): ReLU()
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (16): GroupNorm(32, 256, eps=1e-05, affine=True)
        (17): ReLU()
        (18): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (19): GroupNorm(32, 256, eps=1e-05, affine=True)
        (20): ReLU()
        (21): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (22): GroupNorm(32, 256, eps=1e-05, affine=True)
        (23): ReLU()
      )
      (cls_logits): Conv2d(256, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bbox_pred): Conv2d(256, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (ctrness): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (controller): Conv2d(256, 169, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
        (3): Scale()
        (4): Scale()
      )
    )
  )
)
[09/17 08:11:23] fvcore.common.checkpoint INFO: Loading checkpoint from ./checkpoint/CondInst_new.pth
[09/17 08:11:24] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/17 08:11:24] d2.data.datasets.coco INFO: Loaded 9658 images in COCO format from /data01/zzk/data/hico_20160224_det/hico_annotations_test2015.json
[09/17 08:11:24] d2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 14961        |   bicycle    | 835          |      car      | 271          |
|  motorcycle   | 558          |   airplane   | 160          |      bus      | 224          |
|     train     | 114          |    truck     | 105          |     boat      | 456          |
| traffic light | 51           | fire hydrant | 38           |   stop sign   | 15           |
| parking meter | 35           |    bench     | 313          |     bird      | 174          |
|      cat      | 79           |     dog      | 194          |     horse     | 546          |
|     sheep     | 151          |     cow      | 208          |   elephant    | 163          |
|     bear      | 25           |    zebra     | 23           |    giraffe    | 78           |
|   backpack    | 272          |   umbrella   | 345          |    handbag    | 62           |
|      tie      | 189          |   suitcase   | 94           |    frisbee    | 186          |
|     skis      | 310          |  snowboard   | 199          |  sports ball  | 257          |
|     kite      | 281          | baseball bat | 177          | baseball gl.. | 50           |
|  skateboard   | 661          |  surfboard   | 168          | tennis racket | 73           |
|    bottle     | 211          |  wine glass  | 154          |      cup      | 117          |
|     fork      | 49           |    knife     | 174          |     spoon     | 71           |
|     bowl      | 51           |    banana    | 151          |     apple     | 86           |
|   sandwich    | 67           |    orange    | 87           |   broccoli    | 42           |
|    carrot     | 98           |   hot dog    | 104          |     pizza     | 117          |
|     donut     | 111          |     cake     | 194          |     chair     | 333          |
|     couch     | 189          | potted plant | 28           |      bed      | 93           |
| dining table  | 242          |    toilet    | 60           |      tv       | 51           |
|    laptop     | 157          |    mouse     | 13           |    remote     | 52           |
|   keyboard    | 72           |  cell phone  | 150          |   microwave   | 16           |
|     oven      | 38           |   toaster    | 18           |     sink      | 21           |
| refrigerator  | 19           |     book     | 255          |     clock     | 48           |
|     vase      | 23           |   scissors   | 74           |  teddy bear   | 69           |
|  hair drier   | 22           |  toothbrush  | 112          |               |              |
|     total     | 27140        |              |              |               |              |[0m
[09/17 08:11:24] d2.data.common INFO: Serializing 9658 elements to byte tensors and concatenating them all ...
[09/17 08:11:24] d2.data.common INFO: Serialized dataset takes 3.74 MiB
[09/17 08:11:24] d2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/17 08:11:24] d2.evaluation.evaluator INFO: Start inference on 9658 images
[09/17 08:11:28] d2.utils.events INFO:  eta: 7:07:24  iter: 479  total_loss: 1.447  loss_fcos_cls: 0.5045  loss_fcos_loc: 0.2866  loss_fcos_ctr: 0.6241  loss_mask: 0  time: 0.2859  data_time: 0.0029  lr: 0.0047952  max_mem: 5132M
[09/17 08:11:34] d2.utils.events INFO:  eta: 7:07:40  iter: 499  total_loss: 1.459  loss_fcos_cls: 0.5132  loss_fcos_loc: 0.2715  loss_fcos_ctr: 0.6229  loss_mask: 0  time: 0.2859  data_time: 0.0030  lr: 0.004995  max_mem: 5132M
[09/17 08:11:40] d2.utils.events INFO:  eta: 7:08:39  iter: 519  total_loss: 1.43  loss_fcos_cls: 0.54  loss_fcos_loc: 0.2774  loss_fcos_ctr: 0.6244  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.0051948  max_mem: 5132M
[09/17 08:11:45] d2.utils.events INFO:  eta: 7:07:58  iter: 539  total_loss: 1.384  loss_fcos_cls: 0.452  loss_fcos_loc: 0.2945  loss_fcos_ctr: 0.6376  loss_mask: 0  time: 0.2862  data_time: 0.0029  lr: 0.0053946  max_mem: 5132M
[09/17 08:11:51] d2.utils.events INFO:  eta: 7:07:39  iter: 559  total_loss: 1.445  loss_fcos_cls: 0.5466  loss_fcos_loc: 0.2896  loss_fcos_ctr: 0.6269  loss_mask: 0  time: 0.2859  data_time: 0.0028  lr: 0.0055944  max_mem: 5132M
[09/17 08:11:56] d2.utils.events INFO:  eta: 7:07:17  iter: 579  total_loss: 1.44  loss_fcos_cls: 0.5047  loss_fcos_loc: 0.2836  loss_fcos_ctr: 0.634  loss_mask: 0  time: 0.2855  data_time: 0.0029  lr: 0.0057942  max_mem: 5132M
[09/17 08:12:02] d2.utils.events INFO:  eta: 7:07:24  iter: 599  total_loss: 1.554  loss_fcos_cls: 0.5502  loss_fcos_loc: 0.3148  loss_fcos_ctr: 0.6422  loss_mask: 0  time: 0.2852  data_time: 0.0029  lr: 0.005994  max_mem: 5132M
[09/17 08:12:08] d2.utils.events INFO:  eta: 7:07:22  iter: 619  total_loss: 1.498  loss_fcos_cls: 0.5264  loss_fcos_loc: 0.3198  loss_fcos_ctr: 0.6372  loss_mask: 0  time: 0.2852  data_time: 0.0030  lr: 0.0061938  max_mem: 5132M
[09/17 08:12:13] d2.utils.events INFO:  eta: 7:07:12  iter: 639  total_loss: 1.428  loss_fcos_cls: 0.5455  loss_fcos_loc: 0.3041  loss_fcos_ctr: 0.6313  loss_mask: 0  time: 0.2852  data_time: 0.0030  lr: 0.0063936  max_mem: 5132M
[09/17 08:12:19] d2.utils.events INFO:  eta: 7:06:54  iter: 659  total_loss: 1.564  loss_fcos_cls: 0.5606  loss_fcos_loc: 0.3616  loss_fcos_ctr: 0.6444  loss_mask: 0  time: 0.2853  data_time: 0.0029  lr: 0.0065934  max_mem: 5132M
[09/17 08:12:25] d2.utils.events INFO:  eta: 7:07:05  iter: 679  total_loss: 1.512  loss_fcos_cls: 0.5842  loss_fcos_loc: 0.2977  loss_fcos_ctr: 0.6257  loss_mask: 0  time: 0.2854  data_time: 0.0032  lr: 0.0067932  max_mem: 5132M
[09/17 08:12:31] d2.utils.events INFO:  eta: 7:08:23  iter: 699  total_loss: 1.569  loss_fcos_cls: 0.5997  loss_fcos_loc: 0.3411  loss_fcos_ctr: 0.6366  loss_mask: 0  time: 0.2858  data_time: 0.0032  lr: 0.006993  max_mem: 5132M
[09/17 08:12:37] d2.utils.events INFO:  eta: 7:08:17  iter: 719  total_loss: 1.522  loss_fcos_cls: 0.562  loss_fcos_loc: 0.336  loss_fcos_ctr: 0.6353  loss_mask: 0  time: 0.2859  data_time: 0.0027  lr: 0.0071928  max_mem: 5132M
[09/17 08:12:42] d2.utils.events INFO:  eta: 7:06:56  iter: 739  total_loss: 1.531  loss_fcos_cls: 0.5477  loss_fcos_loc: 0.3489  loss_fcos_ctr: 0.6455  loss_mask: 0  time: 0.2857  data_time: 0.0029  lr: 0.0073926  max_mem: 5132M
[09/17 08:12:48] d2.utils.events INFO:  eta: 7:07:13  iter: 759  total_loss: 1.475  loss_fcos_cls: 0.5436  loss_fcos_loc: 0.285  loss_fcos_ctr: 0.6327  loss_mask: 0  time: 0.2858  data_time: 0.0030  lr: 0.0075924  max_mem: 5132M
[09/17 08:12:54] d2.utils.events INFO:  eta: 7:07:32  iter: 779  total_loss: 1.43  loss_fcos_cls: 0.5152  loss_fcos_loc: 0.3147  loss_fcos_ctr: 0.6279  loss_mask: 0  time: 0.2860  data_time: 0.0029  lr: 0.0077922  max_mem: 5132M
[09/17 08:13:00] d2.utils.events INFO:  eta: 7:06:39  iter: 799  total_loss: 1.538  loss_fcos_cls: 0.6098  loss_fcos_loc: 0.3091  loss_fcos_ctr: 0.6268  loss_mask: 0  time: 0.2858  data_time: 0.0029  lr: 0.007992  max_mem: 5132M
[09/17 08:13:05] d2.utils.events INFO:  eta: 7:06:12  iter: 819  total_loss: 1.509  loss_fcos_cls: 0.5398  loss_fcos_loc: 0.3261  loss_fcos_ctr: 0.6369  loss_mask: 0  time: 0.2856  data_time: 0.0031  lr: 0.0081918  max_mem: 5132M
[09/17 08:13:11] d2.utils.events INFO:  eta: 7:06:06  iter: 839  total_loss: 1.548  loss_fcos_cls: 0.5991  loss_fcos_loc: 0.3079  loss_fcos_ctr: 0.6227  loss_mask: 0  time: 0.2856  data_time: 0.0030  lr: 0.0083916  max_mem: 5132M
[09/17 08:13:16] d2.utils.events INFO:  eta: 7:05:41  iter: 859  total_loss: 1.554  loss_fcos_cls: 0.5818  loss_fcos_loc: 0.3411  loss_fcos_ctr: 0.6367  loss_mask: 0  time: 0.2855  data_time: 0.0031  lr: 0.0085914  max_mem: 5132M
[09/17 08:13:22] d2.utils.events INFO:  eta: 7:05:35  iter: 879  total_loss: 1.468  loss_fcos_cls: 0.5461  loss_fcos_loc: 0.3081  loss_fcos_ctr: 0.6256  loss_mask: 0  time: 0.2856  data_time: 0.0029  lr: 0.0087912  max_mem: 5132M
[09/17 08:13:28] d2.utils.events INFO:  eta: 7:05:18  iter: 899  total_loss: 1.611  loss_fcos_cls: 0.6004  loss_fcos_loc: 0.3546  loss_fcos_ctr: 0.6437  loss_mask: 0  time: 0.2855  data_time: 0.0030  lr: 0.008991  max_mem: 5132M
[09/17 08:14:02] detectron2 INFO: Rank of current process: 0. World size: 1
[09/17 08:14:05] detectron2 INFO: Environment info:
----------------------  -------------------------------------------------------------
sys.platform            linux
Python                  3.7.1 (default, Sep  3 2020, 23:56:06) [GCC 5.4.0 20160609]
numpy                   1.19.1
detectron2              0.2.1 @/home/zzk/workspace/detectron2/detectron2
Compiler                GCC 6.5
CUDA compiler           CUDA 11.0
detectron2 arch flags   7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/zzk/py37/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   GeForce RTX 2080 Ti (arch=7.5)
CUDA_HOME               /usr/local/cuda
Pillow                  7.2.0
torchvision             0.5.0 @/home/zzk/py37/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20200912
cv2                     4.4.0
----------------------  -------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[09/17 08:14:05] detectron2 INFO: Command line arguments: Namespace(config_file='configs/CondInst/MS_R_101_3x.yaml', dist_url='tcp://127.0.0.1:50155', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './checkpoint/CondInst_new.pth'], resume=False)
[09/17 08:14:05] detectron2 INFO: Contents of args.config_file=configs/CondInst/MS_R_101_3x.yaml:
_BASE_: "Base-FCOS.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"
  RESNETS:
    DEPTH: 101
SOLVER:
  STEPS: (60000, 80000)
  MAX_ITER: 90000
OUTPUT_DIR: "output/fcos/R_101_3x"

[09/17 08:14:05] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('HICO-det-test',)
  TRAIN: ('HICO-det-train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: bitmask
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_fcos_resnet_fpn_backbone
  DEVICE: cuda
  FCOS:
    CENTER_SAMPLE: True
    FPN_STRIDES: [8, 16, 32, 64, 128]
    INFERENCE_TH_TEST: 0.05
    INFERENCE_TH_TRAIN: 0.05
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    LOC_LOSS_TYPE: giou
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.6
    NORM: GN
    NUM_BOX_CONVS: 4
    NUM_CLASSES: 80
    NUM_CLS_CONVS: 4
    NUM_SHARE_CONVS: 0
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 100
    POS_RADIUS: 1.5
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 1000
    PRIOR_PROB: 0.01
    SIZES_OF_INTEREST: [64, 128, 256, 512]
    THRESH_WITH_CTR: False
    TOP_LEVELS: 2
    USE_DEFORMABLE: False
    USE_RELU: True
    USE_SCALE: True
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: OneStageDetector
  MOBILENET: False
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FCOS
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  VOVNET:
    BACKBONE_OUT_CHANNELS: 256
    CONV_BODY: V-39-eSE
    NORM: FrozenBN
    OUT_CHANNELS: 256
    OUT_FEATURES: ['stage2', 'stage3', 'stage4', 'stage5']
  WEIGHTS: ./checkpoint/CondInst_new.pth
OUTPUT_DIR: output/fcos/R_101_3x
SEED: -1
SOLVER:
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[09/17 08:14:05] detectron2 INFO: Full config saved to output/fcos/R_101_3x/config.yaml
[09/17 08:14:05] d2.utils.env INFO: Using a generated random seed 5171821
[09/17 08:14:25] d2.engine.defaults INFO: Model:
OneStageDetector(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): FCOS(
    (iou_loss): IOULoss()
    (fcos_head): FCOSHead(
      (cls_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (bbox_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (share_tower): Sequential()
      (mask_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (13): GroupNorm(32, 256, eps=1e-05, affine=True)
        (14): ReLU()
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (16): GroupNorm(32, 256, eps=1e-05, affine=True)
        (17): ReLU()
        (18): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (19): GroupNorm(32, 256, eps=1e-05, affine=True)
        (20): ReLU()
        (21): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (22): GroupNorm(32, 256, eps=1e-05, affine=True)
        (23): ReLU()
      )
      (cls_logits): Conv2d(256, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bbox_pred): Conv2d(256, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (ctrness): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (controller): Conv2d(256, 169, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
        (3): Scale()
        (4): Scale()
      )
    )
  )
)
[09/17 08:14:25] fvcore.common.checkpoint INFO: Loading checkpoint from ./checkpoint/CondInst_new.pth
[09/17 08:14:25] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/17 08:14:25] d2.data.datasets.coco INFO: Loaded 9658 images in COCO format from /data01/zzk/data/hico_20160224_det/hico_annotations_test2015.json
[09/17 08:14:25] d2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 14961        |   bicycle    | 835          |      car      | 271          |
|  motorcycle   | 558          |   airplane   | 160          |      bus      | 224          |
|     train     | 114          |    truck     | 105          |     boat      | 456          |
| traffic light | 51           | fire hydrant | 38           |   stop sign   | 15           |
| parking meter | 35           |    bench     | 313          |     bird      | 174          |
|      cat      | 79           |     dog      | 194          |     horse     | 546          |
|     sheep     | 151          |     cow      | 208          |   elephant    | 163          |
|     bear      | 25           |    zebra     | 23           |    giraffe    | 78           |
|   backpack    | 272          |   umbrella   | 345          |    handbag    | 62           |
|      tie      | 189          |   suitcase   | 94           |    frisbee    | 186          |
|     skis      | 310          |  snowboard   | 199          |  sports ball  | 257          |
|     kite      | 281          | baseball bat | 177          | baseball gl.. | 50           |
|  skateboard   | 661          |  surfboard   | 168          | tennis racket | 73           |
|    bottle     | 211          |  wine glass  | 154          |      cup      | 117          |
|     fork      | 49           |    knife     | 174          |     spoon     | 71           |
|     bowl      | 51           |    banana    | 151          |     apple     | 86           |
|   sandwich    | 67           |    orange    | 87           |   broccoli    | 42           |
|    carrot     | 98           |   hot dog    | 104          |     pizza     | 117          |
|     donut     | 111          |     cake     | 194          |     chair     | 333          |
|     couch     | 189          | potted plant | 28           |      bed      | 93           |
| dining table  | 242          |    toilet    | 60           |      tv       | 51           |
|    laptop     | 157          |    mouse     | 13           |    remote     | 52           |
|   keyboard    | 72           |  cell phone  | 150          |   microwave   | 16           |
|     oven      | 38           |   toaster    | 18           |     sink      | 21           |
| refrigerator  | 19           |     book     | 255          |     clock     | 48           |
|     vase      | 23           |   scissors   | 74           |  teddy bear   | 69           |
|  hair drier   | 22           |  toothbrush  | 112          |               |              |
|     total     | 27140        |              |              |               |              |[0m
[09/17 08:14:25] d2.data.common INFO: Serializing 9658 elements to byte tensors and concatenating them all ...
[09/17 08:14:25] d2.data.common INFO: Serialized dataset takes 3.74 MiB
[09/17 08:14:25] d2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/17 08:14:25] d2.evaluation.evaluator INFO: Start inference on 9658 images
[09/17 08:19:28] detectron2 INFO: Rank of current process: 0. World size: 1
[09/17 08:19:28] detectron2 INFO: Environment info:
----------------------  -------------------------------------------------------------
sys.platform            linux
Python                  3.7.1 (default, Sep  3 2020, 23:56:06) [GCC 5.4.0 20160609]
numpy                   1.19.1
detectron2              0.2.1 @/home/zzk/workspace/detectron2/detectron2
Compiler                GCC 6.5
CUDA compiler           CUDA 11.0
detectron2 arch flags   7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/zzk/py37/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0                   GeForce RTX 2080 Ti (arch=7.5)
CUDA_HOME               /usr/local/cuda
Pillow                  7.2.0
torchvision             0.5.0 @/home/zzk/py37/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20200912
cv2                     4.4.0
----------------------  -------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[09/17 08:19:28] detectron2 INFO: Command line arguments: Namespace(config_file='configs/CondInst/MS_R_101_3x.yaml', dist_url='tcp://127.0.0.1:50155', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './checkpoint/CondInst_new.pth'], resume=False)
[09/17 08:19:28] detectron2 INFO: Contents of args.config_file=configs/CondInst/MS_R_101_3x.yaml:
_BASE_: "Base-FCOS.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"
  RESNETS:
    DEPTH: 101
SOLVER:
  STEPS: (60000, 80000)
  MAX_ITER: 90000
OUTPUT_DIR: "output/fcos/R_101_3x"

[09/17 08:19:28] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('HICO-det-test',)
  TRAIN: ('HICO-det-train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: bitmask
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_fcos_resnet_fpn_backbone
  DEVICE: cuda
  FCOS:
    CENTER_SAMPLE: True
    FPN_STRIDES: [8, 16, 32, 64, 128]
    INFERENCE_TH_TEST: 0.05
    INFERENCE_TH_TRAIN: 0.05
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    LOC_LOSS_TYPE: giou
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.6
    NORM: GN
    NUM_BOX_CONVS: 4
    NUM_CLASSES: 80
    NUM_CLS_CONVS: 4
    NUM_SHARE_CONVS: 0
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 100
    POS_RADIUS: 1.5
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 1000
    PRIOR_PROB: 0.01
    SIZES_OF_INTEREST: [64, 128, 256, 512]
    THRESH_WITH_CTR: False
    TOP_LEVELS: 2
    USE_DEFORMABLE: False
    USE_RELU: True
    USE_SCALE: True
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: OneStageDetector
  MOBILENET: False
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FCOS
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  VOVNET:
    BACKBONE_OUT_CHANNELS: 256
    CONV_BODY: V-39-eSE
    NORM: FrozenBN
    OUT_CHANNELS: 256
    OUT_FEATURES: ['stage2', 'stage3', 'stage4', 'stage5']
  WEIGHTS: ./checkpoint/CondInst_new.pth
OUTPUT_DIR: output/fcos/R_101_3x
SEED: -1
SOLVER:
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[09/17 08:19:28] detectron2 INFO: Full config saved to output/fcos/R_101_3x/config.yaml
[09/17 08:19:28] d2.utils.env INFO: Using a generated random seed 28651907
[09/17 08:19:47] d2.engine.defaults INFO: Model:
OneStageDetector(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): FCOS(
    (iou_loss): IOULoss()
    (fcos_head): FCOSHead(
      (cls_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (bbox_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (share_tower): Sequential()
      (mask_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (13): GroupNorm(32, 256, eps=1e-05, affine=True)
        (14): ReLU()
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (16): GroupNorm(32, 256, eps=1e-05, affine=True)
        (17): ReLU()
        (18): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (19): GroupNorm(32, 256, eps=1e-05, affine=True)
        (20): ReLU()
        (21): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (22): GroupNorm(32, 256, eps=1e-05, affine=True)
        (23): ReLU()
      )
      (cls_logits): Conv2d(256, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bbox_pred): Conv2d(256, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (ctrness): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (controller): Conv2d(256, 169, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
        (3): Scale()
        (4): Scale()
      )
    )
  )
)
[09/17 08:19:47] fvcore.common.checkpoint INFO: Loading checkpoint from ./checkpoint/CondInst_new.pth
[09/17 08:19:47] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/17 08:19:47] d2.data.datasets.coco INFO: Loaded 9658 images in COCO format from /data01/zzk/data/hico_20160224_det/hico_annotations_test2015.json
[09/17 08:19:48] d2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 14961        |   bicycle    | 835          |      car      | 271          |
|  motorcycle   | 558          |   airplane   | 160          |      bus      | 224          |
|     train     | 114          |    truck     | 105          |     boat      | 456          |
| traffic light | 51           | fire hydrant | 38           |   stop sign   | 15           |
| parking meter | 35           |    bench     | 313          |     bird      | 174          |
|      cat      | 79           |     dog      | 194          |     horse     | 546          |
|     sheep     | 151          |     cow      | 208          |   elephant    | 163          |
|     bear      | 25           |    zebra     | 23           |    giraffe    | 78           |
|   backpack    | 272          |   umbrella   | 345          |    handbag    | 62           |
|      tie      | 189          |   suitcase   | 94           |    frisbee    | 186          |
|     skis      | 310          |  snowboard   | 199          |  sports ball  | 257          |
|     kite      | 281          | baseball bat | 177          | baseball gl.. | 50           |
|  skateboard   | 661          |  surfboard   | 168          | tennis racket | 73           |
|    bottle     | 211          |  wine glass  | 154          |      cup      | 117          |
|     fork      | 49           |    knife     | 174          |     spoon     | 71           |
|     bowl      | 51           |    banana    | 151          |     apple     | 86           |
|   sandwich    | 67           |    orange    | 87           |   broccoli    | 42           |
|    carrot     | 98           |   hot dog    | 104          |     pizza     | 117          |
|     donut     | 111          |     cake     | 194          |     chair     | 333          |
|     couch     | 189          | potted plant | 28           |      bed      | 93           |
| dining table  | 242          |    toilet    | 60           |      tv       | 51           |
|    laptop     | 157          |    mouse     | 13           |    remote     | 52           |
|   keyboard    | 72           |  cell phone  | 150          |   microwave   | 16           |
|     oven      | 38           |   toaster    | 18           |     sink      | 21           |
| refrigerator  | 19           |     book     | 255          |     clock     | 48           |
|     vase      | 23           |   scissors   | 74           |  teddy bear   | 69           |
|  hair drier   | 22           |  toothbrush  | 112          |               |              |
|     total     | 27140        |              |              |               |              |[0m
[09/17 08:19:48] d2.data.common INFO: Serializing 9658 elements to byte tensors and concatenating them all ...
[09/17 08:19:48] d2.data.common INFO: Serialized dataset takes 3.74 MiB
[09/17 08:19:48] d2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[09/17 08:19:48] d2.evaluation.evaluator INFO: Start inference on 9658 images
[09/17 08:19:51] d2.evaluation.evaluator INFO: Inference done 11/9658. 0.0793 s / img. ETA=0:19:56
[09/17 08:19:56] d2.evaluation.evaluator INFO: Inference done 52/9658. 0.0852 s / img. ETA=0:19:55
[09/17 08:20:01] d2.evaluation.evaluator INFO: Inference done 95/9658. 0.0847 s / img. ETA=0:19:22
[09/17 08:20:06] d2.evaluation.evaluator INFO: Inference done 136/9658. 0.0859 s / img. ETA=0:19:23
[09/17 08:20:11] d2.evaluation.evaluator INFO: Inference done 182/9658. 0.0834 s / img. ETA=0:18:49
[09/17 08:20:16] d2.evaluation.evaluator INFO: Inference done 227/9658. 0.0819 s / img. ETA=0:18:32
[09/17 08:20:21] d2.evaluation.evaluator INFO: Inference done 272/9658. 0.0808 s / img. ETA=0:18:17
[09/17 08:20:26] d2.evaluation.evaluator INFO: Inference done 318/9658. 0.0803 s / img. ETA=0:18:02
[09/17 08:20:32] d2.evaluation.evaluator INFO: Inference done 362/9658. 0.0799 s / img. ETA=0:17:57
[09/17 08:20:37] d2.evaluation.evaluator INFO: Inference done 407/9658. 0.0795 s / img. ETA=0:17:48
[09/17 08:20:42] d2.evaluation.evaluator INFO: Inference done 452/9658. 0.0793 s / img. ETA=0:17:40
[09/17 08:20:47] d2.evaluation.evaluator INFO: Inference done 497/9658. 0.0791 s / img. ETA=0:17:33
[09/17 08:20:52] d2.evaluation.evaluator INFO: Inference done 543/9658. 0.0790 s / img. ETA=0:17:24
[09/17 08:20:57] d2.evaluation.evaluator INFO: Inference done 589/9658. 0.0788 s / img. ETA=0:17:16
[09/17 08:21:02] d2.evaluation.evaluator INFO: Inference done 634/9658. 0.0787 s / img. ETA=0:17:10
[09/17 08:21:07] d2.evaluation.evaluator INFO: Inference done 678/9658. 0.0787 s / img. ETA=0:17:04
[09/17 08:21:12] d2.evaluation.evaluator INFO: Inference done 722/9658. 0.0787 s / img. ETA=0:16:59
[09/17 08:21:17] d2.evaluation.evaluator INFO: Inference done 766/9658. 0.0787 s / img. ETA=0:16:55
[09/17 08:21:22] d2.evaluation.evaluator INFO: Inference done 810/9658. 0.0787 s / img. ETA=0:16:50
[09/17 08:21:27] d2.evaluation.evaluator INFO: Inference done 857/9658. 0.0786 s / img. ETA=0:16:42
[09/17 08:21:32] d2.evaluation.evaluator INFO: Inference done 901/9658. 0.0786 s / img. ETA=0:16:37
[09/17 08:21:37] d2.evaluation.evaluator INFO: Inference done 947/9658. 0.0785 s / img. ETA=0:16:30
[09/17 08:21:42] d2.evaluation.evaluator INFO: Inference done 991/9658. 0.0785 s / img. ETA=0:16:26
[09/17 08:21:47] d2.evaluation.evaluator INFO: Inference done 1035/9658. 0.0784 s / img. ETA=0:16:21
[09/17 08:21:52] d2.evaluation.evaluator INFO: Inference done 1079/9658. 0.0783 s / img. ETA=0:16:16
[09/17 08:21:58] d2.evaluation.evaluator INFO: Inference done 1125/9658. 0.0782 s / img. ETA=0:16:09
[09/17 08:22:03] d2.evaluation.evaluator INFO: Inference done 1169/9658. 0.0782 s / img. ETA=0:16:04
[09/17 08:22:08] d2.evaluation.evaluator INFO: Inference done 1214/9658. 0.0781 s / img. ETA=0:15:59
[09/17 08:22:13] d2.evaluation.evaluator INFO: Inference done 1259/9658. 0.0781 s / img. ETA=0:15:54
[09/17 08:22:18] d2.evaluation.evaluator INFO: Inference done 1305/9658. 0.0780 s / img. ETA=0:15:48
[09/17 08:22:23] d2.evaluation.evaluator INFO: Inference done 1350/9658. 0.0780 s / img. ETA=0:15:42
[09/17 08:22:28] d2.evaluation.evaluator INFO: Inference done 1395/9658. 0.0780 s / img. ETA=0:15:37
[09/17 08:22:33] d2.evaluation.evaluator INFO: Inference done 1438/9658. 0.0780 s / img. ETA=0:15:33
[09/17 08:22:38] d2.evaluation.evaluator INFO: Inference done 1483/9658. 0.0779 s / img. ETA=0:15:28
[09/17 08:22:43] d2.evaluation.evaluator INFO: Inference done 1527/9658. 0.0779 s / img. ETA=0:15:23
[09/17 08:22:48] d2.evaluation.evaluator INFO: Inference done 1571/9658. 0.0780 s / img. ETA=0:15:18
[09/17 08:22:53] d2.evaluation.evaluator INFO: Inference done 1617/9658. 0.0779 s / img. ETA=0:15:13
[09/17 08:22:58] d2.evaluation.evaluator INFO: Inference done 1662/9658. 0.0779 s / img. ETA=0:15:07
[09/17 08:23:03] d2.evaluation.evaluator INFO: Inference done 1709/9658. 0.0779 s / img. ETA=0:15:01
[09/17 08:23:09] d2.evaluation.evaluator INFO: Inference done 1754/9658. 0.0778 s / img. ETA=0:14:56
[09/17 08:23:14] d2.evaluation.evaluator INFO: Inference done 1798/9658. 0.0779 s / img. ETA=0:14:51
[09/17 08:23:19] d2.evaluation.evaluator INFO: Inference done 1843/9658. 0.0779 s / img. ETA=0:14:46
[09/17 08:23:24] d2.evaluation.evaluator INFO: Inference done 1887/9658. 0.0779 s / img. ETA=0:14:41
[09/17 08:23:29] d2.evaluation.evaluator INFO: Inference done 1932/9658. 0.0779 s / img. ETA=0:14:36
[09/17 08:23:34] d2.evaluation.evaluator INFO: Inference done 1977/9658. 0.0779 s / img. ETA=0:14:31
[09/17 08:23:39] d2.evaluation.evaluator INFO: Inference done 2022/9658. 0.0779 s / img. ETA=0:14:26
[09/17 08:23:44] d2.evaluation.evaluator INFO: Inference done 2067/9658. 0.0779 s / img. ETA=0:14:20
[09/17 08:23:49] d2.evaluation.evaluator INFO: Inference done 2109/9658. 0.0778 s / img. ETA=0:14:17
[09/17 08:23:54] d2.evaluation.evaluator INFO: Inference done 2155/9658. 0.0778 s / img. ETA=0:14:11
[09/17 08:23:59] d2.evaluation.evaluator INFO: Inference done 2199/9658. 0.0778 s / img. ETA=0:14:06
[09/17 08:24:04] d2.evaluation.evaluator INFO: Inference done 2244/9658. 0.0778 s / img. ETA=0:14:01
[09/17 08:24:09] d2.evaluation.evaluator INFO: Inference done 2288/9658. 0.0777 s / img. ETA=0:13:56
[09/17 08:24:15] d2.evaluation.evaluator INFO: Inference done 2335/9658. 0.0777 s / img. ETA=0:13:50
[09/17 08:24:20] d2.evaluation.evaluator INFO: Inference done 2380/9658. 0.0777 s / img. ETA=0:13:45
[09/17 08:24:25] d2.evaluation.evaluator INFO: Inference done 2425/9658. 0.0777 s / img. ETA=0:13:40
[09/17 08:24:30] d2.evaluation.evaluator INFO: Inference done 2472/9658. 0.0776 s / img. ETA=0:13:34
[09/17 08:24:35] d2.evaluation.evaluator INFO: Inference done 2517/9658. 0.0776 s / img. ETA=0:13:29
[09/17 08:24:40] d2.evaluation.evaluator INFO: Inference done 2561/9658. 0.0777 s / img. ETA=0:13:24
[09/17 08:24:45] d2.evaluation.evaluator INFO: Inference done 2605/9658. 0.0776 s / img. ETA=0:13:19
[09/17 08:24:50] d2.evaluation.evaluator INFO: Inference done 2651/9658. 0.0776 s / img. ETA=0:13:13
[09/17 08:24:55] d2.evaluation.evaluator INFO: Inference done 2695/9658. 0.0776 s / img. ETA=0:13:09
[09/17 08:25:00] d2.evaluation.evaluator INFO: Inference done 2740/9658. 0.0776 s / img. ETA=0:13:04
[09/17 08:25:05] d2.evaluation.evaluator INFO: Inference done 2785/9658. 0.0775 s / img. ETA=0:12:58
[09/17 08:25:10] d2.evaluation.evaluator INFO: Inference done 2829/9658. 0.0775 s / img. ETA=0:12:53
[09/17 08:25:15] d2.evaluation.evaluator INFO: Inference done 2872/9658. 0.0776 s / img. ETA=0:12:49
[09/17 08:25:20] d2.evaluation.evaluator INFO: Inference done 2916/9658. 0.0775 s / img. ETA=0:12:44
[09/17 08:25:25] d2.evaluation.evaluator INFO: Inference done 2960/9658. 0.0776 s / img. ETA=0:12:39
[09/17 08:25:30] d2.evaluation.evaluator INFO: Inference done 3006/9658. 0.0775 s / img. ETA=0:12:34
[09/17 08:25:36] d2.evaluation.evaluator INFO: Inference done 3050/9658. 0.0775 s / img. ETA=0:12:29
[09/17 08:25:41] d2.evaluation.evaluator INFO: Inference done 3095/9658. 0.0775 s / img. ETA=0:12:24
[09/17 08:25:46] d2.evaluation.evaluator INFO: Inference done 3140/9658. 0.0775 s / img. ETA=0:12:19
[09/17 08:25:51] d2.evaluation.evaluator INFO: Inference done 3186/9658. 0.0775 s / img. ETA=0:12:13
[09/17 08:25:56] d2.evaluation.evaluator INFO: Inference done 3230/9658. 0.0775 s / img. ETA=0:12:08
[09/17 08:26:01] d2.evaluation.evaluator INFO: Inference done 3274/9658. 0.0775 s / img. ETA=0:12:03
[09/17 08:26:06] d2.evaluation.evaluator INFO: Inference done 3319/9658. 0.0775 s / img. ETA=0:11:58
[09/17 08:26:11] d2.evaluation.evaluator INFO: Inference done 3364/9658. 0.0775 s / img. ETA=0:11:53
[09/17 08:26:16] d2.evaluation.evaluator INFO: Inference done 3408/9658. 0.0775 s / img. ETA=0:11:48
[09/17 08:26:21] d2.evaluation.evaluator INFO: Inference done 3454/9658. 0.0774 s / img. ETA=0:11:43
[09/17 08:26:26] d2.evaluation.evaluator INFO: Inference done 3498/9658. 0.0774 s / img. ETA=0:11:38
[09/17 08:26:31] d2.evaluation.evaluator INFO: Inference done 3542/9658. 0.0774 s / img. ETA=0:11:33
[09/17 08:26:36] d2.evaluation.evaluator INFO: Inference done 3588/9658. 0.0774 s / img. ETA=0:11:28
[09/17 08:26:41] d2.evaluation.evaluator INFO: Inference done 3631/9658. 0.0774 s / img. ETA=0:11:23
[09/17 08:26:47] d2.evaluation.evaluator INFO: Inference done 3675/9658. 0.0774 s / img. ETA=0:11:18
[09/17 08:26:52] d2.evaluation.evaluator INFO: Inference done 3721/9658. 0.0774 s / img. ETA=0:11:13
[09/17 08:26:57] d2.evaluation.evaluator INFO: Inference done 3764/9658. 0.0774 s / img. ETA=0:11:08
[09/17 08:27:02] d2.evaluation.evaluator INFO: Inference done 3809/9658. 0.0774 s / img. ETA=0:11:03
[09/17 08:27:07] d2.evaluation.evaluator INFO: Inference done 3853/9658. 0.0774 s / img. ETA=0:10:58
[09/17 08:27:12] d2.evaluation.evaluator INFO: Inference done 3897/9658. 0.0774 s / img. ETA=0:10:53
[09/17 08:27:17] d2.evaluation.evaluator INFO: Inference done 3941/9658. 0.0774 s / img. ETA=0:10:48
[09/17 08:27:22] d2.evaluation.evaluator INFO: Inference done 3985/9658. 0.0774 s / img. ETA=0:10:44
[09/17 08:27:27] d2.evaluation.evaluator INFO: Inference done 4029/9658. 0.0774 s / img. ETA=0:10:39
[09/17 08:27:32] d2.evaluation.evaluator INFO: Inference done 4075/9658. 0.0774 s / img. ETA=0:10:33
[09/17 08:27:37] d2.evaluation.evaluator INFO: Inference done 4121/9658. 0.0774 s / img. ETA=0:10:28
[09/17 08:27:42] d2.evaluation.evaluator INFO: Inference done 4165/9658. 0.0774 s / img. ETA=0:10:23
[09/17 08:27:47] d2.evaluation.evaluator INFO: Inference done 4211/9658. 0.0774 s / img. ETA=0:10:17
[09/17 08:27:52] d2.evaluation.evaluator INFO: Inference done 4256/9658. 0.0774 s / img. ETA=0:10:12
[09/17 08:27:57] d2.evaluation.evaluator INFO: Inference done 4302/9658. 0.0774 s / img. ETA=0:10:07
[09/17 08:28:02] d2.evaluation.evaluator INFO: Inference done 4347/9658. 0.0774 s / img. ETA=0:10:02
[09/17 08:28:07] d2.evaluation.evaluator INFO: Inference done 4392/9658. 0.0773 s / img. ETA=0:09:56
[09/17 08:28:13] d2.evaluation.evaluator INFO: Inference done 4438/9658. 0.0773 s / img. ETA=0:09:51
[09/17 08:28:18] d2.evaluation.evaluator INFO: Inference done 4484/9658. 0.0773 s / img. ETA=0:09:46
[09/17 08:28:23] d2.evaluation.evaluator INFO: Inference done 4529/9658. 0.0773 s / img. ETA=0:09:41
[09/17 08:28:28] d2.evaluation.evaluator INFO: Inference done 4574/9658. 0.0773 s / img. ETA=0:09:35
[09/17 08:28:33] d2.evaluation.evaluator INFO: Inference done 4619/9658. 0.0773 s / img. ETA=0:09:30
[09/17 08:28:38] d2.evaluation.evaluator INFO: Inference done 4661/9658. 0.0774 s / img. ETA=0:09:26
[09/17 08:28:43] d2.evaluation.evaluator INFO: Inference done 4706/9658. 0.0774 s / img. ETA=0:09:21
[09/17 08:28:48] d2.evaluation.evaluator INFO: Inference done 4749/9658. 0.0774 s / img. ETA=0:09:16
[09/17 08:28:53] d2.evaluation.evaluator INFO: Inference done 4794/9658. 0.0774 s / img. ETA=0:09:11
[09/17 08:28:58] d2.evaluation.evaluator INFO: Inference done 4839/9658. 0.0774 s / img. ETA=0:09:06
[09/17 08:29:03] d2.evaluation.evaluator INFO: Inference done 4883/9658. 0.0774 s / img. ETA=0:09:01
[09/17 08:29:08] d2.evaluation.evaluator INFO: Inference done 4927/9658. 0.0774 s / img. ETA=0:08:56
[09/17 08:29:13] d2.evaluation.evaluator INFO: Inference done 4971/9658. 0.0774 s / img. ETA=0:08:51
[09/17 08:29:18] d2.evaluation.evaluator INFO: Inference done 5016/9658. 0.0774 s / img. ETA=0:08:46
[09/17 08:29:23] d2.evaluation.evaluator INFO: Inference done 5062/9658. 0.0774 s / img. ETA=0:08:40
[09/17 08:29:28] d2.evaluation.evaluator INFO: Inference done 5107/9658. 0.0773 s / img. ETA=0:08:35
[09/17 08:29:33] d2.evaluation.evaluator INFO: Inference done 5153/9658. 0.0773 s / img. ETA=0:08:30
[09/17 08:29:38] d2.evaluation.evaluator INFO: Inference done 5198/9658. 0.0773 s / img. ETA=0:08:25
[09/17 08:29:43] d2.evaluation.evaluator INFO: Inference done 5243/9658. 0.0773 s / img. ETA=0:08:20
[09/17 08:29:49] d2.evaluation.evaluator INFO: Inference done 5289/9658. 0.0773 s / img. ETA=0:08:14
[09/17 08:29:54] d2.evaluation.evaluator INFO: Inference done 5333/9658. 0.0773 s / img. ETA=0:08:09
[09/17 08:29:59] d2.evaluation.evaluator INFO: Inference done 5377/9658. 0.0773 s / img. ETA=0:08:04
[09/17 08:30:04] d2.evaluation.evaluator INFO: Inference done 5422/9658. 0.0773 s / img. ETA=0:07:59
[09/17 08:30:09] d2.evaluation.evaluator INFO: Inference done 5467/9658. 0.0773 s / img. ETA=0:07:54
[09/17 08:30:14] d2.evaluation.evaluator INFO: Inference done 5511/9658. 0.0773 s / img. ETA=0:07:49
[09/17 08:30:19] d2.evaluation.evaluator INFO: Inference done 5556/9658. 0.0773 s / img. ETA=0:07:44
[09/17 08:30:24] d2.evaluation.evaluator INFO: Inference done 5602/9658. 0.0773 s / img. ETA=0:07:39
[09/17 08:30:29] d2.evaluation.evaluator INFO: Inference done 5646/9658. 0.0773 s / img. ETA=0:07:34
[09/17 08:30:34] d2.evaluation.evaluator INFO: Inference done 5690/9658. 0.0773 s / img. ETA=0:07:29
[09/17 08:30:39] d2.evaluation.evaluator INFO: Inference done 5733/9658. 0.0773 s / img. ETA=0:07:24
[09/17 08:30:44] d2.evaluation.evaluator INFO: Inference done 5778/9658. 0.0773 s / img. ETA=0:07:19
[09/17 08:30:49] d2.evaluation.evaluator INFO: Inference done 5822/9658. 0.0773 s / img. ETA=0:07:14
[09/17 08:30:55] d2.evaluation.evaluator INFO: Inference done 5867/9658. 0.0773 s / img. ETA=0:07:09
[09/17 08:31:00] d2.evaluation.evaluator INFO: Inference done 5908/9658. 0.0773 s / img. ETA=0:07:05
[09/17 08:31:05] d2.evaluation.evaluator INFO: Inference done 5951/9658. 0.0774 s / img. ETA=0:07:00
[09/17 08:31:10] d2.evaluation.evaluator INFO: Inference done 5995/9658. 0.0774 s / img. ETA=0:06:55
[09/17 08:31:15] d2.evaluation.evaluator INFO: Inference done 6040/9658. 0.0774 s / img. ETA=0:06:50
[09/17 08:31:20] d2.evaluation.evaluator INFO: Inference done 6085/9658. 0.0774 s / img. ETA=0:06:45
[09/17 08:31:25] d2.evaluation.evaluator INFO: Inference done 6130/9658. 0.0774 s / img. ETA=0:06:40
[09/17 08:31:30] d2.evaluation.evaluator INFO: Inference done 6175/9658. 0.0774 s / img. ETA=0:06:35
[09/17 08:31:35] d2.evaluation.evaluator INFO: Inference done 6220/9658. 0.0773 s / img. ETA=0:06:29
[09/17 08:31:40] d2.evaluation.evaluator INFO: Inference done 6266/9658. 0.0773 s / img. ETA=0:06:24
[09/17 08:31:45] d2.evaluation.evaluator INFO: Inference done 6311/9658. 0.0773 s / img. ETA=0:06:19
[09/17 08:31:50] d2.evaluation.evaluator INFO: Inference done 6356/9658. 0.0773 s / img. ETA=0:06:14
[09/17 08:31:55] d2.evaluation.evaluator INFO: Inference done 6399/9658. 0.0773 s / img. ETA=0:06:09
[09/17 08:32:00] d2.evaluation.evaluator INFO: Inference done 6443/9658. 0.0773 s / img. ETA=0:06:04
[09/17 08:32:05] d2.evaluation.evaluator INFO: Inference done 6486/9658. 0.0773 s / img. ETA=0:05:59
[09/17 08:32:10] d2.evaluation.evaluator INFO: Inference done 6530/9658. 0.0773 s / img. ETA=0:05:54
[09/17 08:32:16] d2.evaluation.evaluator INFO: Inference done 6575/9658. 0.0773 s / img. ETA=0:05:49
[09/17 08:32:21] d2.evaluation.evaluator INFO: Inference done 6620/9658. 0.0773 s / img. ETA=0:05:44
[09/17 08:32:26] d2.evaluation.evaluator INFO: Inference done 6664/9658. 0.0773 s / img. ETA=0:05:39
[09/17 08:32:31] d2.evaluation.evaluator INFO: Inference done 6709/9658. 0.0773 s / img. ETA=0:05:34
[09/17 08:32:36] d2.evaluation.evaluator INFO: Inference done 6753/9658. 0.0773 s / img. ETA=0:05:29
[09/17 08:32:41] d2.evaluation.evaluator INFO: Inference done 6796/9658. 0.0773 s / img. ETA=0:05:24
[09/17 08:32:46] d2.evaluation.evaluator INFO: Inference done 6840/9658. 0.0773 s / img. ETA=0:05:19
[09/17 08:32:51] d2.evaluation.evaluator INFO: Inference done 6884/9658. 0.0773 s / img. ETA=0:05:14
[09/17 08:32:56] d2.evaluation.evaluator INFO: Inference done 6930/9658. 0.0773 s / img. ETA=0:05:09
[09/17 08:33:01] d2.evaluation.evaluator INFO: Inference done 6975/9658. 0.0773 s / img. ETA=0:05:04
[09/17 08:33:06] d2.evaluation.evaluator INFO: Inference done 7019/9658. 0.0773 s / img. ETA=0:04:59
[09/17 08:33:11] d2.evaluation.evaluator INFO: Inference done 7062/9658. 0.0773 s / img. ETA=0:04:54
[09/17 08:33:16] d2.evaluation.evaluator INFO: Inference done 7105/9658. 0.0773 s / img. ETA=0:04:49
[09/17 08:33:21] d2.evaluation.evaluator INFO: Inference done 7150/9658. 0.0773 s / img. ETA=0:04:44
[09/17 08:33:27] d2.evaluation.evaluator INFO: Inference done 7196/9658. 0.0773 s / img. ETA=0:04:39
[09/17 08:33:32] d2.evaluation.evaluator INFO: Inference done 7240/9658. 0.0773 s / img. ETA=0:04:34
[09/17 08:33:37] d2.evaluation.evaluator INFO: Inference done 7285/9658. 0.0773 s / img. ETA=0:04:29
[09/17 08:33:42] d2.evaluation.evaluator INFO: Inference done 7327/9658. 0.0774 s / img. ETA=0:04:24
[09/17 08:33:47] d2.evaluation.evaluator INFO: Inference done 7372/9658. 0.0773 s / img. ETA=0:04:19
[09/17 08:33:52] d2.evaluation.evaluator INFO: Inference done 7416/9658. 0.0774 s / img. ETA=0:04:14
[09/17 08:33:57] d2.evaluation.evaluator INFO: Inference done 7460/9658. 0.0774 s / img. ETA=0:04:09
[09/17 08:34:02] d2.evaluation.evaluator INFO: Inference done 7501/9658. 0.0774 s / img. ETA=0:04:05
[09/17 08:34:07] d2.evaluation.evaluator INFO: Inference done 7546/9658. 0.0774 s / img. ETA=0:03:59
[09/17 08:34:12] d2.evaluation.evaluator INFO: Inference done 7590/9658. 0.0774 s / img. ETA=0:03:54
[09/17 08:34:17] d2.evaluation.evaluator INFO: Inference done 7634/9658. 0.0774 s / img. ETA=0:03:49
[09/17 08:34:22] d2.evaluation.evaluator INFO: Inference done 7680/9658. 0.0774 s / img. ETA=0:03:44
[09/17 08:34:27] d2.evaluation.evaluator INFO: Inference done 7724/9658. 0.0774 s / img. ETA=0:03:39
[09/17 08:34:32] d2.evaluation.evaluator INFO: Inference done 7767/9658. 0.0774 s / img. ETA=0:03:34
[09/17 08:34:37] d2.evaluation.evaluator INFO: Inference done 7814/9658. 0.0774 s / img. ETA=0:03:29
[09/17 08:34:42] d2.evaluation.evaluator INFO: Inference done 7858/9658. 0.0774 s / img. ETA=0:03:24
[09/17 08:34:47] d2.evaluation.evaluator INFO: Inference done 7902/9658. 0.0774 s / img. ETA=0:03:19
[09/17 08:34:52] d2.evaluation.evaluator INFO: Inference done 7947/9658. 0.0774 s / img. ETA=0:03:14
[09/17 08:34:57] d2.evaluation.evaluator INFO: Inference done 7992/9658. 0.0774 s / img. ETA=0:03:09
[09/17 08:35:02] d2.evaluation.evaluator INFO: Inference done 8037/9658. 0.0774 s / img. ETA=0:03:04
[09/17 08:35:08] d2.evaluation.evaluator INFO: Inference done 8081/9658. 0.0774 s / img. ETA=0:02:59
[09/17 08:35:13] d2.evaluation.evaluator INFO: Inference done 8125/9658. 0.0774 s / img. ETA=0:02:54
[09/17 08:35:18] d2.evaluation.evaluator INFO: Inference done 8170/9658. 0.0774 s / img. ETA=0:02:49
[09/17 08:35:23] d2.evaluation.evaluator INFO: Inference done 8214/9658. 0.0774 s / img. ETA=0:02:44
[09/17 08:35:28] d2.evaluation.evaluator INFO: Inference done 8258/9658. 0.0774 s / img. ETA=0:02:39
[09/17 08:35:33] d2.evaluation.evaluator INFO: Inference done 8303/9658. 0.0774 s / img. ETA=0:02:33
[09/17 08:35:38] d2.evaluation.evaluator INFO: Inference done 8347/9658. 0.0774 s / img. ETA=0:02:28
[09/17 08:35:43] d2.evaluation.evaluator INFO: Inference done 8392/9658. 0.0774 s / img. ETA=0:02:23
[09/17 08:35:48] d2.evaluation.evaluator INFO: Inference done 8435/9658. 0.0774 s / img. ETA=0:02:18
[09/17 08:35:53] d2.evaluation.evaluator INFO: Inference done 8479/9658. 0.0774 s / img. ETA=0:02:13
[09/17 08:35:58] d2.evaluation.evaluator INFO: Inference done 8524/9658. 0.0774 s / img. ETA=0:02:08
[09/17 08:36:03] d2.evaluation.evaluator INFO: Inference done 8568/9658. 0.0774 s / img. ETA=0:02:03
[09/17 08:36:08] d2.evaluation.evaluator INFO: Inference done 8613/9658. 0.0774 s / img. ETA=0:01:58
[09/17 08:36:13] d2.evaluation.evaluator INFO: Inference done 8657/9658. 0.0774 s / img. ETA=0:01:53
[09/17 08:36:19] d2.evaluation.evaluator INFO: Inference done 8701/9658. 0.0774 s / img. ETA=0:01:48
[09/17 08:36:24] d2.evaluation.evaluator INFO: Inference done 8746/9658. 0.0774 s / img. ETA=0:01:43
[09/17 08:36:29] d2.evaluation.evaluator INFO: Inference done 8789/9658. 0.0774 s / img. ETA=0:01:38
[09/17 08:36:34] d2.evaluation.evaluator INFO: Inference done 8833/9658. 0.0774 s / img. ETA=0:01:33
[09/17 08:36:39] d2.evaluation.evaluator INFO: Inference done 8878/9658. 0.0774 s / img. ETA=0:01:28
[09/17 08:36:44] d2.evaluation.evaluator INFO: Inference done 8922/9658. 0.0774 s / img. ETA=0:01:23
[09/17 08:36:49] d2.evaluation.evaluator INFO: Inference done 8967/9658. 0.0774 s / img. ETA=0:01:18
[09/17 08:36:54] d2.evaluation.evaluator INFO: Inference done 9010/9658. 0.0774 s / img. ETA=0:01:13
[09/17 08:36:59] d2.evaluation.evaluator INFO: Inference done 9051/9658. 0.0774 s / img. ETA=0:01:09
[09/17 08:37:04] d2.evaluation.evaluator INFO: Inference done 9094/9658. 0.0774 s / img. ETA=0:01:04
[09/17 08:37:09] d2.evaluation.evaluator INFO: Inference done 9139/9658. 0.0774 s / img. ETA=0:00:59
[09/17 08:37:14] d2.evaluation.evaluator INFO: Inference done 9185/9658. 0.0774 s / img. ETA=0:00:53
[09/17 08:37:19] d2.evaluation.evaluator INFO: Inference done 9227/9658. 0.0774 s / img. ETA=0:00:49
[09/17 08:37:24] d2.evaluation.evaluator INFO: Inference done 9271/9658. 0.0774 s / img. ETA=0:00:44
[09/17 08:37:30] d2.evaluation.evaluator INFO: Inference done 9315/9658. 0.0774 s / img. ETA=0:00:39
[09/17 08:37:35] d2.evaluation.evaluator INFO: Inference done 9359/9658. 0.0774 s / img. ETA=0:00:34
[09/17 08:37:40] d2.evaluation.evaluator INFO: Inference done 9402/9658. 0.0774 s / img. ETA=0:00:29
[09/17 08:37:45] d2.evaluation.evaluator INFO: Inference done 9441/9658. 0.0774 s / img. ETA=0:00:24
[09/17 08:37:50] d2.evaluation.evaluator INFO: Inference done 9488/9658. 0.0774 s / img. ETA=0:00:19
[09/17 08:37:55] d2.evaluation.evaluator INFO: Inference done 9530/9658. 0.0774 s / img. ETA=0:00:14
[09/17 08:38:00] d2.evaluation.evaluator INFO: Inference done 9572/9658. 0.0774 s / img. ETA=0:00:09
[09/17 08:38:05] d2.evaluation.evaluator INFO: Inference done 9617/9658. 0.0774 s / img. ETA=0:00:04
[09/17 08:38:10] d2.evaluation.evaluator INFO: Total inference time: 0:18:19.472856 (0.113900 s / img per device, on 1 devices)
[09/17 08:38:10] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:12:26 (0.077382 s / img per device, on 1 devices)
[09/17 08:38:17] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[09/17 08:38:17] d2.evaluation.coco_evaluation INFO: Saving results to output/fcos/R_101_3x/inference/coco_instances_results.json
[09/17 08:38:22] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[09/17 08:51:21] detectron2 INFO: Rank of current process: 0. World size: 2
[09/17 08:51:22] detectron2 INFO: Environment info:
----------------------  -------------------------------------------------------------
sys.platform            linux
Python                  3.7.1 (default, Sep  3 2020, 23:56:06) [GCC 5.4.0 20160609]
numpy                   1.19.1
detectron2              0.2.1 @/home/zzk/workspace/detectron2/detectron2
Compiler                GCC 6.5
CUDA compiler           CUDA 11.0
detectron2 arch flags   7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/zzk/py37/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2               GeForce RTX 2080 Ti (arch=7.5)
CUDA_HOME               /usr/local/cuda
Pillow                  7.2.0
torchvision             0.5.0 @/home/zzk/py37/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20200912
cv2                     4.4.0
----------------------  -------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[09/17 08:51:22] detectron2 INFO: Command line arguments: Namespace(config_file='configs/CondInst/MS_R_101_3x.yaml', dist_url='tcp://127.0.0.1:50155', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './checkpoint/CondInst_new.pth', 'SOLVER.IMS_PER_BATCH', '4'], resume=True)
[09/17 08:51:22] detectron2 INFO: Contents of args.config_file=configs/CondInst/MS_R_101_3x.yaml:
_BASE_: "Base-FCOS.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"
  RESNETS:
    DEPTH: 101
SOLVER:
  STEPS: (60000, 80000)
  MAX_ITER: 90000
OUTPUT_DIR: "output/fcos/R_101_3x"

[09/17 08:51:22] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('HICO-det-test',)
  TRAIN: ('HICO-det-train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: bitmask
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_fcos_resnet_fpn_backbone
  DEVICE: cuda
  FCOS:
    CENTER_SAMPLE: True
    FPN_STRIDES: [8, 16, 32, 64, 128]
    INFERENCE_TH_TEST: 0.05
    INFERENCE_TH_TRAIN: 0.05
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    LOC_LOSS_TYPE: giou
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.6
    NORM: GN
    NUM_BOX_CONVS: 4
    NUM_CLASSES: 80
    NUM_CLS_CONVS: 4
    NUM_SHARE_CONVS: 0
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 100
    POS_RADIUS: 1.5
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 1000
    PRIOR_PROB: 0.01
    SIZES_OF_INTEREST: [64, 128, 256, 512]
    THRESH_WITH_CTR: False
    TOP_LEVELS: 2
    USE_DEFORMABLE: False
    USE_RELU: True
    USE_SCALE: True
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: OneStageDetector
  MOBILENET: False
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FCOS
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  VOVNET:
    BACKBONE_OUT_CHANNELS: 256
    CONV_BODY: V-39-eSE
    NORM: FrozenBN
    OUT_CHANNELS: 256
    OUT_FEATURES: ['stage2', 'stage3', 'stage4', 'stage5']
  WEIGHTS: ./checkpoint/CondInst_new.pth
OUTPUT_DIR: output/fcos/R_101_3x
SEED: -1
SOLVER:
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[09/17 08:51:22] detectron2 INFO: Full config saved to output/fcos/R_101_3x/config.yaml
[09/17 08:51:22] d2.utils.env INFO: Using a generated random seed 22159508
[09/17 08:51:22] d2.engine.defaults INFO: Model:
OneStageDetector(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): FCOS(
    (iou_loss): IOULoss()
    (fcos_head): FCOSHead(
      (cls_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (bbox_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (share_tower): Sequential()
      (mask_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (13): GroupNorm(32, 256, eps=1e-05, affine=True)
        (14): ReLU()
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (16): GroupNorm(32, 256, eps=1e-05, affine=True)
        (17): ReLU()
        (18): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (19): GroupNorm(32, 256, eps=1e-05, affine=True)
        (20): ReLU()
        (21): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (22): GroupNorm(32, 256, eps=1e-05, affine=True)
        (23): ReLU()
      )
      (cls_logits): Conv2d(256, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bbox_pred): Conv2d(256, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (ctrness): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (controller): Conv2d(256, 169, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
        (3): Scale()
        (4): Scale()
      )
    )
  )
)
[09/17 08:51:22] d2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[09/17 08:51:22] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/17 08:51:23] d2.data.datasets.coco INFO: Loaded 38116 images in COCO format from /data01/zzk/data/hico_20160224_det/hico_annotations_train2015.json
[09/17 08:51:23] d2.data.build INFO: Removed 659 images with no usable annotations. 37457 images left.
[09/17 08:51:24] d2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 59249        |   bicycle    | 3249         |      car      | 1060         |
|  motorcycle   | 2119         |   airplane   | 607          |      bus      | 925          |
|     train     | 439          |    truck     | 401          |     boat      | 1689         |
| traffic light | 171          | fire hydrant | 128          |   stop sign   | 49           |
| parking meter | 163          |    bench     | 1470         |     bird      | 550          |
|      cat      | 254          |     dog      | 718          |     horse     | 1912         |
|     sheep     | 909          |     cow      | 717          |   elephant    | 567          |
|     bear      | 90           |    zebra     | 50           |    giraffe    | 320          |
|   backpack    | 1205         |   umbrella   | 1693         |    handbag    | 192          |
|      tie      | 909          |   suitcase   | 608          |    frisbee    | 780          |
|     skis      | 1146         |  snowboard   | 824          |  sports ball  | 947          |
|     kite      | 1066         | baseball bat | 745          | baseball gl.. | 203          |
|  skateboard   | 2466         |  surfboard   | 618          | tennis racket | 295          |
|    bottle     | 890          |  wine glass  | 693          |      cup      | 454          |
|     fork      | 178          |    knife     | 636          |     spoon     | 274          |
|     bowl      | 130          |    banana    | 850          |     apple     | 283          |
|   sandwich    | 269          |    orange    | 74           |   broccoli    | 93           |
|    carrot     | 269          |   hot dog    | 374          |     pizza     | 424          |
|     donut     | 417          |     cake     | 787          |     chair     | 1425         |
|     couch     | 767          | potted plant | 143          |      bed      | 435          |
| dining table  | 1019         |    toilet    | 172          |      tv       | 251          |
|    laptop     | 719          |    mouse     | 70           |    remote     | 198          |
|   keyboard    | 323          |  cell phone  | 547          |   microwave   | 26           |
|     oven      | 122          |   toaster    | 7            |     sink      | 76           |
| refrigerator  | 69           |     book     | 1062         |     clock     | 203          |
|     vase      | 102          |   scissors   | 242          |  teddy bear   | 349          |
|  hair drier   | 52           |  toothbrush  | 348          |               |              |
|     total     | 107325       |              |              |               |              |[0m
[09/17 08:51:24] d2.data.common INFO: Serializing 37457 elements to byte tensors and concatenating them all ...
[09/17 08:51:24] d2.data.common INFO: Serialized dataset takes 14.72 MiB
[09/17 08:51:24] d2.data.build INFO: Using training sampler TrainingSampler
[09/17 08:51:24] fvcore.common.checkpoint INFO: Loading checkpoint from ./checkpoint/CondInst_new.pth
[09/17 08:51:59] detectron2 INFO: Rank of current process: 0. World size: 1
[09/17 08:52:01] detectron2 INFO: Environment info:
----------------------  -------------------------------------------------------------
sys.platform            linux
Python                  3.7.1 (default, Sep  3 2020, 23:56:06) [GCC 5.4.0 20160609]
numpy                   1.19.1
detectron2              0.2.1 @/home/zzk/workspace/detectron2/detectron2
Compiler                GCC 6.5
CUDA compiler           CUDA 11.0
detectron2 arch flags   7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/zzk/py37/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2               GeForce RTX 2080 Ti (arch=7.5)
CUDA_HOME               /usr/local/cuda
Pillow                  7.2.0
torchvision             0.5.0 @/home/zzk/py37/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20200912
cv2                     4.4.0
----------------------  -------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[09/17 08:52:01] detectron2 INFO: Command line arguments: Namespace(config_file='configs/CondInst/MS_R_101_3x.yaml', dist_url='tcp://127.0.0.1:50155', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './checkpoint/CondInst_new.pth', 'SOLVER.IMS_PER_BATCH', '4'], resume=True)
[09/17 08:52:01] detectron2 INFO: Contents of args.config_file=configs/CondInst/MS_R_101_3x.yaml:
_BASE_: "Base-FCOS.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"
  RESNETS:
    DEPTH: 101
SOLVER:
  STEPS: (60000, 80000)
  MAX_ITER: 90000
OUTPUT_DIR: "output/fcos/R_101_3x"

[09/17 08:52:01] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('HICO-det-test',)
  TRAIN: ('HICO-det-train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: bitmask
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_fcos_resnet_fpn_backbone
  DEVICE: cuda
  FCOS:
    CENTER_SAMPLE: True
    FPN_STRIDES: [8, 16, 32, 64, 128]
    INFERENCE_TH_TEST: 0.05
    INFERENCE_TH_TRAIN: 0.05
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    LOC_LOSS_TYPE: giou
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.6
    NORM: GN
    NUM_BOX_CONVS: 4
    NUM_CLASSES: 80
    NUM_CLS_CONVS: 4
    NUM_SHARE_CONVS: 0
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 100
    POS_RADIUS: 1.5
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 1000
    PRIOR_PROB: 0.01
    SIZES_OF_INTEREST: [64, 128, 256, 512]
    THRESH_WITH_CTR: False
    TOP_LEVELS: 2
    USE_DEFORMABLE: False
    USE_RELU: True
    USE_SCALE: True
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: OneStageDetector
  MOBILENET: False
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FCOS
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  VOVNET:
    BACKBONE_OUT_CHANNELS: 256
    CONV_BODY: V-39-eSE
    NORM: FrozenBN
    OUT_CHANNELS: 256
    OUT_FEATURES: ['stage2', 'stage3', 'stage4', 'stage5']
  WEIGHTS: ./checkpoint/CondInst_new.pth
OUTPUT_DIR: output/fcos/R_101_3x
SEED: -1
SOLVER:
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[09/17 08:52:01] detectron2 INFO: Full config saved to output/fcos/R_101_3x/config.yaml
[09/17 08:52:01] d2.utils.env INFO: Using a generated random seed 1297351
[09/17 08:52:03] d2.engine.defaults INFO: Model:
OneStageDetector(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): FCOS(
    (iou_loss): IOULoss()
    (fcos_head): FCOSHead(
      (cls_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (bbox_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (share_tower): Sequential()
      (mask_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (13): GroupNorm(32, 256, eps=1e-05, affine=True)
        (14): ReLU()
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (16): GroupNorm(32, 256, eps=1e-05, affine=True)
        (17): ReLU()
        (18): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (19): GroupNorm(32, 256, eps=1e-05, affine=True)
        (20): ReLU()
        (21): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (22): GroupNorm(32, 256, eps=1e-05, affine=True)
        (23): ReLU()
      )
      (cls_logits): Conv2d(256, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bbox_pred): Conv2d(256, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (ctrness): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (controller): Conv2d(256, 169, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
        (3): Scale()
        (4): Scale()
      )
    )
  )
)
[09/17 08:52:03] d2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[09/17 08:52:03] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/17 08:52:03] d2.data.datasets.coco INFO: Loaded 38116 images in COCO format from /data01/zzk/data/hico_20160224_det/hico_annotations_train2015.json
[09/17 08:52:04] d2.data.build INFO: Removed 659 images with no usable annotations. 37457 images left.
[09/17 08:52:05] d2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 59249        |   bicycle    | 3249         |      car      | 1060         |
|  motorcycle   | 2119         |   airplane   | 607          |      bus      | 925          |
|     train     | 439          |    truck     | 401          |     boat      | 1689         |
| traffic light | 171          | fire hydrant | 128          |   stop sign   | 49           |
| parking meter | 163          |    bench     | 1470         |     bird      | 550          |
|      cat      | 254          |     dog      | 718          |     horse     | 1912         |
|     sheep     | 909          |     cow      | 717          |   elephant    | 567          |
|     bear      | 90           |    zebra     | 50           |    giraffe    | 320          |
|   backpack    | 1205         |   umbrella   | 1693         |    handbag    | 192          |
|      tie      | 909          |   suitcase   | 608          |    frisbee    | 780          |
|     skis      | 1146         |  snowboard   | 824          |  sports ball  | 947          |
|     kite      | 1066         | baseball bat | 745          | baseball gl.. | 203          |
|  skateboard   | 2466         |  surfboard   | 618          | tennis racket | 295          |
|    bottle     | 890          |  wine glass  | 693          |      cup      | 454          |
|     fork      | 178          |    knife     | 636          |     spoon     | 274          |
|     bowl      | 130          |    banana    | 850          |     apple     | 283          |
|   sandwich    | 269          |    orange    | 74           |   broccoli    | 93           |
|    carrot     | 269          |   hot dog    | 374          |     pizza     | 424          |
|     donut     | 417          |     cake     | 787          |     chair     | 1425         |
|     couch     | 767          | potted plant | 143          |      bed      | 435          |
| dining table  | 1019         |    toilet    | 172          |      tv       | 251          |
|    laptop     | 719          |    mouse     | 70           |    remote     | 198          |
|   keyboard    | 323          |  cell phone  | 547          |   microwave   | 26           |
|     oven      | 122          |   toaster    | 7            |     sink      | 76           |
| refrigerator  | 69           |     book     | 1062         |     clock     | 203          |
|     vase      | 102          |   scissors   | 242          |  teddy bear   | 349          |
|  hair drier   | 52           |  toothbrush  | 348          |               |              |
|     total     | 107325       |              |              |               |              |[0m
[09/17 08:52:05] d2.data.common INFO: Serializing 37457 elements to byte tensors and concatenating them all ...
[09/17 08:52:05] d2.data.common INFO: Serialized dataset takes 14.72 MiB
[09/17 08:52:05] d2.data.build INFO: Using training sampler TrainingSampler
[09/17 08:52:05] fvcore.common.checkpoint INFO: Loading checkpoint from ./checkpoint/CondInst_new.pth
[09/17 08:52:17] d2.utils.events INFO:  eta: 14:18:07  iter: 19  total_loss: 1.342  loss_fcos_cls: 0.4135  loss_fcos_loc: 0.2284  loss_fcos_ctr: 0.6216  loss_mask: 0  time: 0.5915  data_time: 0.0129  lr: 0.00019981  max_mem: 9701M
[09/17 08:52:29] d2.utils.events INFO:  eta: 14:50:17  iter: 39  total_loss: 1.077  loss_fcos_cls: 0.2906  loss_fcos_loc: 0.2006  loss_fcos_ctr: 0.6106  loss_mask: 0  time: 0.5960  data_time: 0.0065  lr: 0.00039961  max_mem: 9701M
[09/17 08:52:41] d2.utils.events INFO:  eta: 14:46:26  iter: 59  total_loss: 1.121  loss_fcos_cls: 0.2977  loss_fcos_loc: 0.2076  loss_fcos_ctr: 0.6136  loss_mask: 0  time: 0.5881  data_time: 0.0059  lr: 0.00059941  max_mem: 9701M
[09/17 08:52:52] d2.utils.events INFO:  eta: 14:35:31  iter: 79  total_loss: 1.105  loss_fcos_cls: 0.3157  loss_fcos_loc: 0.1974  loss_fcos_ctr: 0.6132  loss_mask: 0  time: 0.5845  data_time: 0.0058  lr: 0.00079921  max_mem: 9701M
[09/17 08:53:29] detectron2 INFO: Rank of current process: 0. World size: 1
[09/17 08:53:31] detectron2 INFO: Environment info:
----------------------  -------------------------------------------------------------
sys.platform            linux
Python                  3.7.1 (default, Sep  3 2020, 23:56:06) [GCC 5.4.0 20160609]
numpy                   1.19.1
detectron2              0.2.1 @/home/zzk/workspace/detectron2/detectron2
Compiler                GCC 6.5
CUDA compiler           CUDA 11.0
detectron2 arch flags   7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/zzk/py37/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2               GeForce RTX 2080 Ti (arch=7.5)
CUDA_HOME               /usr/local/cuda
Pillow                  7.2.0
torchvision             0.5.0 @/home/zzk/py37/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20200912
cv2                     4.4.0
----------------------  -------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[09/17 08:53:31] detectron2 INFO: Command line arguments: Namespace(config_file='configs/CondInst/MS_R_101_3x.yaml', dist_url='tcp://127.0.0.1:50155', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './checkpoint/CondInst_new.pth', 'SOLVER.IMS_PER_BATCH', '4'], resume=True)
[09/17 08:53:31] detectron2 INFO: Contents of args.config_file=configs/CondInst/MS_R_101_3x.yaml:
_BASE_: "Base-FCOS.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"
  RESNETS:
    DEPTH: 101
SOLVER:
  STEPS: (60000, 80000)
  MAX_ITER: 90000
OUTPUT_DIR: "output/fcos/R_101_3x"

[09/17 08:53:31] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('HICO-det-test',)
  TRAIN: ('HICO-det-train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: bitmask
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_fcos_resnet_fpn_backbone
  DEVICE: cuda
  FCOS:
    CENTER_SAMPLE: True
    FPN_STRIDES: [8, 16, 32, 64, 128]
    INFERENCE_TH_TEST: 0.05
    INFERENCE_TH_TRAIN: 0.05
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    LOC_LOSS_TYPE: giou
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.6
    NORM: GN
    NUM_BOX_CONVS: 4
    NUM_CLASSES: 80
    NUM_CLS_CONVS: 4
    NUM_SHARE_CONVS: 0
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 100
    POS_RADIUS: 1.5
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 1000
    PRIOR_PROB: 0.01
    SIZES_OF_INTEREST: [64, 128, 256, 512]
    THRESH_WITH_CTR: False
    TOP_LEVELS: 2
    USE_DEFORMABLE: False
    USE_RELU: True
    USE_SCALE: True
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: OneStageDetector
  MOBILENET: False
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FCOS
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  VOVNET:
    BACKBONE_OUT_CHANNELS: 256
    CONV_BODY: V-39-eSE
    NORM: FrozenBN
    OUT_CHANNELS: 256
    OUT_FEATURES: ['stage2', 'stage3', 'stage4', 'stage5']
  WEIGHTS: ./checkpoint/CondInst_new.pth
OUTPUT_DIR: output/fcos/R_101_3x
SEED: -1
SOLVER:
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[09/17 08:53:31] detectron2 INFO: Full config saved to output/fcos/R_101_3x/config.yaml
[09/17 08:53:31] d2.utils.env INFO: Using a generated random seed 31321396
[09/17 08:53:33] d2.engine.defaults INFO: Model:
OneStageDetector(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): FCOS(
    (iou_loss): IOULoss()
    (fcos_head): FCOSHead(
      (cls_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (bbox_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (share_tower): Sequential()
      (mask_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (13): GroupNorm(32, 256, eps=1e-05, affine=True)
        (14): ReLU()
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (16): GroupNorm(32, 256, eps=1e-05, affine=True)
        (17): ReLU()
        (18): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (19): GroupNorm(32, 256, eps=1e-05, affine=True)
        (20): ReLU()
        (21): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (22): GroupNorm(32, 256, eps=1e-05, affine=True)
        (23): ReLU()
      )
      (cls_logits): Conv2d(256, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bbox_pred): Conv2d(256, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (ctrness): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (controller): Conv2d(256, 169, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
        (3): Scale()
        (4): Scale()
      )
    )
  )
)
[09/17 08:53:33] d2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[09/17 08:53:33] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/17 08:53:34] d2.data.datasets.coco INFO: Loaded 38116 images in COCO format from /data01/zzk/data/hico_20160224_det/hico_annotations_train2015.json
[09/17 08:53:34] d2.data.build INFO: Removed 659 images with no usable annotations. 37457 images left.
[09/17 08:53:35] d2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 59249        |   bicycle    | 3249         |      car      | 1060         |
|  motorcycle   | 2119         |   airplane   | 607          |      bus      | 925          |
|     train     | 439          |    truck     | 401          |     boat      | 1689         |
| traffic light | 171          | fire hydrant | 128          |   stop sign   | 49           |
| parking meter | 163          |    bench     | 1470         |     bird      | 550          |
|      cat      | 254          |     dog      | 718          |     horse     | 1912         |
|     sheep     | 909          |     cow      | 717          |   elephant    | 567          |
|     bear      | 90           |    zebra     | 50           |    giraffe    | 320          |
|   backpack    | 1205         |   umbrella   | 1693         |    handbag    | 192          |
|      tie      | 909          |   suitcase   | 608          |    frisbee    | 780          |
|     skis      | 1146         |  snowboard   | 824          |  sports ball  | 947          |
|     kite      | 1066         | baseball bat | 745          | baseball gl.. | 203          |
|  skateboard   | 2466         |  surfboard   | 618          | tennis racket | 295          |
|    bottle     | 890          |  wine glass  | 693          |      cup      | 454          |
|     fork      | 178          |    knife     | 636          |     spoon     | 274          |
|     bowl      | 130          |    banana    | 850          |     apple     | 283          |
|   sandwich    | 269          |    orange    | 74           |   broccoli    | 93           |
|    carrot     | 269          |   hot dog    | 374          |     pizza     | 424          |
|     donut     | 417          |     cake     | 787          |     chair     | 1425         |
|     couch     | 767          | potted plant | 143          |      bed      | 435          |
| dining table  | 1019         |    toilet    | 172          |      tv       | 251          |
|    laptop     | 719          |    mouse     | 70           |    remote     | 198          |
|   keyboard    | 323          |  cell phone  | 547          |   microwave   | 26           |
|     oven      | 122          |   toaster    | 7            |     sink      | 76           |
| refrigerator  | 69           |     book     | 1062         |     clock     | 203          |
|     vase      | 102          |   scissors   | 242          |  teddy bear   | 349          |
|  hair drier   | 52           |  toothbrush  | 348          |               |              |
|     total     | 107325       |              |              |               |              |[0m
[09/17 08:53:35] d2.data.common INFO: Serializing 37457 elements to byte tensors and concatenating them all ...
[09/17 08:53:35] d2.data.common INFO: Serialized dataset takes 14.72 MiB
[09/17 08:53:35] d2.data.build INFO: Using training sampler TrainingSampler
[09/17 08:53:35] fvcore.common.checkpoint INFO: Loading checkpoint from ./checkpoint/CondInst_new.pth
[09/17 08:53:47] d2.utils.events INFO:  eta: 13:49:31  iter: 19  total_loss: 1.192  loss_fcos_cls: 0.3741  loss_fcos_loc: 0.2036  loss_fcos_ctr: 0.6143  loss_mask: 0  time: 0.5699  data_time: 0.0121  lr: 0.00019981  max_mem: 9383M
[09/17 08:53:58] d2.utils.events INFO:  eta: 13:56:51  iter: 39  total_loss: 1.16  loss_fcos_cls: 0.3148  loss_fcos_loc: 0.2099  loss_fcos_ctr: 0.6226  loss_mask: 0  time: 0.5614  data_time: 0.0060  lr: 0.00039961  max_mem: 9383M
[09/17 08:54:09] d2.utils.events INFO:  eta: 13:48:25  iter: 59  total_loss: 1.1  loss_fcos_cls: 0.2674  loss_fcos_loc: 0.2079  loss_fcos_ctr: 0.6133  loss_mask: 0  time: 0.5563  data_time: 0.0059  lr: 0.00059941  max_mem: 9383M
[09/17 08:55:19] detectron2 INFO: Rank of current process: 0. World size: 2
[09/17 08:55:20] detectron2 INFO: Environment info:
----------------------  -------------------------------------------------------------
sys.platform            linux
Python                  3.7.1 (default, Sep  3 2020, 23:56:06) [GCC 5.4.0 20160609]
numpy                   1.19.1
detectron2              0.2.1 @/home/zzk/workspace/detectron2/detectron2
Compiler                GCC 6.5
CUDA compiler           CUDA 11.0
detectron2 arch flags   7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/zzk/py37/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2               GeForce RTX 2080 Ti (arch=7.5)
CUDA_HOME               /usr/local/cuda
Pillow                  7.2.0
torchvision             0.5.0 @/home/zzk/py37/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20200912
cv2                     4.4.0
----------------------  -------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[09/17 08:55:20] detectron2 INFO: Command line arguments: Namespace(config_file='configs/CondInst/MS_R_101_3x.yaml', dist_url='tcp://127.0.0.1:50155', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=['MODEL.WEIGHTS', './checkpoint/CondInst_new.pth', 'SOLVER.IMS_PER_BATCH', '2'], resume=True)
[09/17 08:55:20] detectron2 INFO: Contents of args.config_file=configs/CondInst/MS_R_101_3x.yaml:
_BASE_: "Base-FCOS.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"
  RESNETS:
    DEPTH: 101
SOLVER:
  STEPS: (60000, 80000)
  MAX_ITER: 90000
OUTPUT_DIR: "output/fcos/R_101_3x"

[09/17 08:55:20] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('HICO-det-test',)
  TRAIN: ('HICO-det-train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: bitmask
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_fcos_resnet_fpn_backbone
  DEVICE: cuda
  FCOS:
    CENTER_SAMPLE: True
    FPN_STRIDES: [8, 16, 32, 64, 128]
    INFERENCE_TH_TEST: 0.05
    INFERENCE_TH_TRAIN: 0.05
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    LOC_LOSS_TYPE: giou
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.6
    NORM: GN
    NUM_BOX_CONVS: 4
    NUM_CLASSES: 80
    NUM_CLS_CONVS: 4
    NUM_SHARE_CONVS: 0
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 100
    POS_RADIUS: 1.5
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 1000
    PRIOR_PROB: 0.01
    SIZES_OF_INTEREST: [64, 128, 256, 512]
    THRESH_WITH_CTR: False
    TOP_LEVELS: 2
    USE_DEFORMABLE: False
    USE_RELU: True
    USE_SCALE: True
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: OneStageDetector
  MOBILENET: False
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FCOS
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  VOVNET:
    BACKBONE_OUT_CHANNELS: 256
    CONV_BODY: V-39-eSE
    NORM: FrozenBN
    OUT_CHANNELS: 256
    OUT_FEATURES: ['stage2', 'stage3', 'stage4', 'stage5']
  WEIGHTS: ./checkpoint/CondInst_new.pth
OUTPUT_DIR: output/fcos/R_101_3x
SEED: -1
SOLVER:
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[09/17 08:55:20] detectron2 INFO: Full config saved to output/fcos/R_101_3x/config.yaml
[09/17 08:55:20] d2.utils.env INFO: Using a generated random seed 20309616
[09/17 08:55:20] d2.engine.defaults INFO: Model:
OneStageDetector(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): FCOS(
    (iou_loss): IOULoss()
    (fcos_head): FCOSHead(
      (cls_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (bbox_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (share_tower): Sequential()
      (mask_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (13): GroupNorm(32, 256, eps=1e-05, affine=True)
        (14): ReLU()
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (16): GroupNorm(32, 256, eps=1e-05, affine=True)
        (17): ReLU()
        (18): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (19): GroupNorm(32, 256, eps=1e-05, affine=True)
        (20): ReLU()
        (21): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (22): GroupNorm(32, 256, eps=1e-05, affine=True)
        (23): ReLU()
      )
      (cls_logits): Conv2d(256, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bbox_pred): Conv2d(256, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (ctrness): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (controller): Conv2d(256, 169, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
        (3): Scale()
        (4): Scale()
      )
    )
  )
)
[09/17 08:55:20] d2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[09/17 08:55:21] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/17 08:55:21] d2.data.datasets.coco INFO: Loaded 38116 images in COCO format from /data01/zzk/data/hico_20160224_det/hico_annotations_train2015.json
[09/17 08:55:21] d2.data.build INFO: Removed 659 images with no usable annotations. 37457 images left.
[09/17 08:55:22] d2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 59249        |   bicycle    | 3249         |      car      | 1060         |
|  motorcycle   | 2119         |   airplane   | 607          |      bus      | 925          |
|     train     | 439          |    truck     | 401          |     boat      | 1689         |
| traffic light | 171          | fire hydrant | 128          |   stop sign   | 49           |
| parking meter | 163          |    bench     | 1470         |     bird      | 550          |
|      cat      | 254          |     dog      | 718          |     horse     | 1912         |
|     sheep     | 909          |     cow      | 717          |   elephant    | 567          |
|     bear      | 90           |    zebra     | 50           |    giraffe    | 320          |
|   backpack    | 1205         |   umbrella   | 1693         |    handbag    | 192          |
|      tie      | 909          |   suitcase   | 608          |    frisbee    | 780          |
|     skis      | 1146         |  snowboard   | 824          |  sports ball  | 947          |
|     kite      | 1066         | baseball bat | 745          | baseball gl.. | 203          |
|  skateboard   | 2466         |  surfboard   | 618          | tennis racket | 295          |
|    bottle     | 890          |  wine glass  | 693          |      cup      | 454          |
|     fork      | 178          |    knife     | 636          |     spoon     | 274          |
|     bowl      | 130          |    banana    | 850          |     apple     | 283          |
|   sandwich    | 269          |    orange    | 74           |   broccoli    | 93           |
|    carrot     | 269          |   hot dog    | 374          |     pizza     | 424          |
|     donut     | 417          |     cake     | 787          |     chair     | 1425         |
|     couch     | 767          | potted plant | 143          |      bed      | 435          |
| dining table  | 1019         |    toilet    | 172          |      tv       | 251          |
|    laptop     | 719          |    mouse     | 70           |    remote     | 198          |
|   keyboard    | 323          |  cell phone  | 547          |   microwave   | 26           |
|     oven      | 122          |   toaster    | 7            |     sink      | 76           |
| refrigerator  | 69           |     book     | 1062         |     clock     | 203          |
|     vase      | 102          |   scissors   | 242          |  teddy bear   | 349          |
|  hair drier   | 52           |  toothbrush  | 348          |               |              |
|     total     | 107325       |              |              |               |              |[0m
[09/17 08:55:22] d2.data.common INFO: Serializing 37457 elements to byte tensors and concatenating them all ...
[09/17 08:55:22] d2.data.common INFO: Serialized dataset takes 14.72 MiB
[09/17 08:55:22] d2.data.build INFO: Using training sampler TrainingSampler
[09/17 08:55:22] fvcore.common.checkpoint INFO: Loading checkpoint from ./checkpoint/CondInst_new.pth
[09/17 08:55:44] detectron2 INFO: Rank of current process: 0. World size: 1
[09/17 08:55:46] detectron2 INFO: Environment info:
----------------------  -------------------------------------------------------------
sys.platform            linux
Python                  3.7.1 (default, Sep  3 2020, 23:56:06) [GCC 5.4.0 20160609]
numpy                   1.19.1
detectron2              0.2.1 @/home/zzk/workspace/detectron2/detectron2
Compiler                GCC 6.5
CUDA compiler           CUDA 11.0
detectron2 arch flags   7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.4.0 @/home/zzk/py37/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           True
GPU 0,1,2               GeForce RTX 2080 Ti (arch=7.5)
CUDA_HOME               /usr/local/cuda
Pillow                  7.2.0
torchvision             0.5.0 @/home/zzk/py37/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.2.post20200912
cv2                     4.4.0
----------------------  -------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

[09/17 08:55:46] detectron2 INFO: Command line arguments: Namespace(config_file='configs/CondInst/MS_R_101_3x.yaml', dist_url='tcp://127.0.0.1:50155', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.WEIGHTS', './checkpoint/CondInst_new.pth', 'SOLVER.IMS_PER_BATCH', '2'], resume=True)
[09/17 08:55:46] detectron2 INFO: Contents of args.config_file=configs/CondInst/MS_R_101_3x.yaml:
_BASE_: "Base-FCOS.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"
  RESNETS:
    DEPTH: 101
SOLVER:
  STEPS: (60000, 80000)
  MAX_ITER: 90000
OUTPUT_DIR: "output/fcos/R_101_3x"

[09/17 08:55:46] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: False
DATALOADER:
  ASPECT_RATIO_GROUPING: True
  FILTER_EMPTY_ANNOTATIONS: True
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: ()
  PROPOSAL_FILES_TRAIN: ()
  TEST: ('HICO-det-test',)
  TRAIN: ('HICO-det-train',)
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: False
    SIZE: [0.9, 0.9]
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: bitmask
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES: [[-90, 0, 90]]
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES: [[32, 64, 128, 256, 512]]
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_fcos_resnet_fpn_backbone
  DEVICE: cuda
  FCOS:
    CENTER_SAMPLE: True
    FPN_STRIDES: [8, 16, 32, 64, 128]
    INFERENCE_TH_TEST: 0.05
    INFERENCE_TH_TRAIN: 0.05
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    LOC_LOSS_TYPE: giou
    LOSS_ALPHA: 0.25
    LOSS_GAMMA: 2.0
    NMS_TH: 0.6
    NORM: GN
    NUM_BOX_CONVS: 4
    NUM_CLASSES: 80
    NUM_CLS_CONVS: 4
    NUM_SHARE_CONVS: 0
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 100
    POS_RADIUS: 1.5
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 1000
    PRIOR_PROB: 0.01
    SIZES_OF_INTEREST: [64, 128, 256, 512]
    THRESH_WITH_CTR: False
    TOP_LEVELS: 2
    USE_DEFORMABLE: False
    USE_RELU: True
    USE_SCALE: True
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: ['res3', 'res4', 'res5']
    NORM: 
    OUT_CHANNELS: 256
  KEYPOINT_ON: False
  LOAD_PROPOSALS: False
  MASK_ON: True
  META_ARCHITECTURE: OneStageDetector
  MOBILENET: False
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: True
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN: [103.53, 116.28, 123.675]
  PIXEL_STD: [1.0, 1.0, 1.0]
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: FCOS
  RESNETS:
    DEFORM_MODULATED: False
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE: [False, False, False, False]
    DEPTH: 101
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES: ['res3', 'res4', 'res5']
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: True
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES: ['p3', 'p4', 'p5', 'p6', 'p7']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.4, 0.5]
    NMS_THRESH_TEST: 0.5
    NORM: 
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS: ((10.0, 10.0, 5.0, 5.0), (20.0, 20.0, 10.0, 10.0), (30.0, 30.0, 15.0, 15.0))
    IOUS: (0.5, 0.6, 0.7)
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (10.0, 10.0, 5.0, 5.0)
    CLS_AGNOSTIC_BBOX_REG: False
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: 
    NORM: 
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: False
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, 1]
    IOU_THRESHOLDS: [0.5]
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: True
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS: (512, 512, 512, 512, 512, 512, 512, 512)
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: True
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: False
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: 
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: (1.0, 1.0, 1.0, 1.0)
    BOUNDARY_THRESH: -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES: ['res4']
    IOU_LABELS: [0, -1, 1]
    IOU_THRESHOLDS: [0.3, 0.7]
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES: ['p2', 'p3', 'p4', 'p5']
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  VOVNET:
    BACKBONE_OUT_CHANNELS: 256
    CONV_BODY: V-39-eSE
    NORM: FrozenBN
    OUT_CHANNELS: 256
    OUT_FEATURES: ['stage2', 'stage3', 'stage4', 'stage5']
  WEIGHTS: ./checkpoint/CondInst_new.pth
OUTPUT_DIR: output/fcos/R_101_3x
SEED: -1
SOLVER:
  BASE_LR: 0.01
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: False
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: False
  REFERENCE_WORLD_SIZE: 0
  STEPS: (60000, 80000)
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: False
    FLIP: True
    MAX_SIZE: 4000
    MIN_SIZES: (400, 500, 600, 700, 800, 900, 1000, 1100, 1200)
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: False
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
[09/17 08:55:46] detectron2 INFO: Full config saved to output/fcos/R_101_3x/config.yaml
[09/17 08:55:46] d2.utils.env INFO: Using a generated random seed 46500651
[09/17 08:55:48] d2.engine.defaults INFO: Model:
OneStageDetector(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): FCOS(
    (iou_loss): IOULoss()
    (fcos_head): FCOSHead(
      (cls_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (bbox_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
      )
      (share_tower): Sequential()
      (mask_tower): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (2): ReLU()
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): GroupNorm(32, 256, eps=1e-05, affine=True)
        (5): ReLU()
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): GroupNorm(32, 256, eps=1e-05, affine=True)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (10): GroupNorm(32, 256, eps=1e-05, affine=True)
        (11): ReLU()
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (13): GroupNorm(32, 256, eps=1e-05, affine=True)
        (14): ReLU()
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (16): GroupNorm(32, 256, eps=1e-05, affine=True)
        (17): ReLU()
        (18): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (19): GroupNorm(32, 256, eps=1e-05, affine=True)
        (20): ReLU()
        (21): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (22): GroupNorm(32, 256, eps=1e-05, affine=True)
        (23): ReLU()
      )
      (cls_logits): Conv2d(256, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (bbox_pred): Conv2d(256, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (ctrness): Conv2d(256, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (controller): Conv2d(256, 169, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (mask): Conv2d(256, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
        (3): Scale()
        (4): Scale()
      )
    )
  )
)
[09/17 08:55:48] d2.data.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[09/17 08:55:49] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[09/17 08:55:49] d2.data.datasets.coco INFO: Loaded 38116 images in COCO format from /data01/zzk/data/hico_20160224_det/hico_annotations_train2015.json
[09/17 08:55:49] d2.data.build INFO: Removed 659 images with no usable annotations. 37457 images left.
[09/17 08:55:50] d2.data.build INFO: Distribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 59249        |   bicycle    | 3249         |      car      | 1060         |
|  motorcycle   | 2119         |   airplane   | 607          |      bus      | 925          |
|     train     | 439          |    truck     | 401          |     boat      | 1689         |
| traffic light | 171          | fire hydrant | 128          |   stop sign   | 49           |
| parking meter | 163          |    bench     | 1470         |     bird      | 550          |
|      cat      | 254          |     dog      | 718          |     horse     | 1912         |
|     sheep     | 909          |     cow      | 717          |   elephant    | 567          |
|     bear      | 90           |    zebra     | 50           |    giraffe    | 320          |
|   backpack    | 1205         |   umbrella   | 1693         |    handbag    | 192          |
|      tie      | 909          |   suitcase   | 608          |    frisbee    | 780          |
|     skis      | 1146         |  snowboard   | 824          |  sports ball  | 947          |
|     kite      | 1066         | baseball bat | 745          | baseball gl.. | 203          |
|  skateboard   | 2466         |  surfboard   | 618          | tennis racket | 295          |
|    bottle     | 890          |  wine glass  | 693          |      cup      | 454          |
|     fork      | 178          |    knife     | 636          |     spoon     | 274          |
|     bowl      | 130          |    banana    | 850          |     apple     | 283          |
|   sandwich    | 269          |    orange    | 74           |   broccoli    | 93           |
|    carrot     | 269          |   hot dog    | 374          |     pizza     | 424          |
|     donut     | 417          |     cake     | 787          |     chair     | 1425         |
|     couch     | 767          | potted plant | 143          |      bed      | 435          |
| dining table  | 1019         |    toilet    | 172          |      tv       | 251          |
|    laptop     | 719          |    mouse     | 70           |    remote     | 198          |
|   keyboard    | 323          |  cell phone  | 547          |   microwave   | 26           |
|     oven      | 122          |   toaster    | 7            |     sink      | 76           |
| refrigerator  | 69           |     book     | 1062         |     clock     | 203          |
|     vase      | 102          |   scissors   | 242          |  teddy bear   | 349          |
|  hair drier   | 52           |  toothbrush  | 348          |               |              |
|     total     | 107325       |              |              |               |              |[0m
[09/17 08:55:50] d2.data.common INFO: Serializing 37457 elements to byte tensors and concatenating them all ...
[09/17 08:55:50] d2.data.common INFO: Serialized dataset takes 14.72 MiB
[09/17 08:55:50] d2.data.build INFO: Using training sampler TrainingSampler
[09/17 08:55:50] fvcore.common.checkpoint INFO: Loading checkpoint from ./checkpoint/CondInst_new.pth
[09/17 08:55:56] d2.utils.events INFO:  eta: 6:50:47  iter: 19  total_loss: 1.128  loss_fcos_cls: 0.2984  loss_fcos_loc: 0.185  loss_fcos_ctr: 0.6083  loss_mask: 0  time: 0.2770  data_time: 0.0101  lr: 0.00019981  max_mem: 4993M
[09/17 08:56:02] d2.utils.events INFO:  eta: 7:01:40  iter: 39  total_loss: 1.082  loss_fcos_cls: 0.3339  loss_fcos_loc: 0.2215  loss_fcos_ctr: 0.6199  loss_mask: 0  time: 0.2885  data_time: 0.0029  lr: 0.00039961  max_mem: 5135M
[09/17 08:56:08] d2.utils.events INFO:  eta: 7:09:24  iter: 59  total_loss: 1.175  loss_fcos_cls: 0.3319  loss_fcos_loc: 0.2243  loss_fcos_ctr: 0.6152  loss_mask: 0  time: 0.2875  data_time: 0.0031  lr: 0.00059941  max_mem: 5135M
[09/17 08:56:14] d2.utils.events INFO:  eta: 7:10:25  iter: 79  total_loss: 1.142  loss_fcos_cls: 0.3391  loss_fcos_loc: 0.202  loss_fcos_ctr: 0.6154  loss_mask: 0  time: 0.2876  data_time: 0.0028  lr: 0.00079921  max_mem: 5135M
[09/17 08:56:19] d2.utils.events INFO:  eta: 7:07:21  iter: 99  total_loss: 1.073  loss_fcos_cls: 0.2827  loss_fcos_loc: 0.1768  loss_fcos_ctr: 0.6145  loss_mask: 0  time: 0.2854  data_time: 0.0028  lr: 0.00099901  max_mem: 5135M
[09/17 08:56:25] d2.utils.events INFO:  eta: 7:06:54  iter: 119  total_loss: 1.131  loss_fcos_cls: 0.3172  loss_fcos_loc: 0.1969  loss_fcos_ctr: 0.6132  loss_mask: 0  time: 0.2849  data_time: 0.0031  lr: 0.0011988  max_mem: 5135M
[09/17 08:56:31] d2.utils.events INFO:  eta: 7:06:39  iter: 139  total_loss: 1.109  loss_fcos_cls: 0.3053  loss_fcos_loc: 0.2003  loss_fcos_ctr: 0.6122  loss_mask: 0  time: 0.2854  data_time: 0.0029  lr: 0.0013986  max_mem: 5135M
[09/17 08:56:36] d2.utils.events INFO:  eta: 7:06:45  iter: 159  total_loss: 1.24  loss_fcos_cls: 0.3952  loss_fcos_loc: 0.2289  loss_fcos_ctr: 0.621  loss_mask: 0  time: 0.2849  data_time: 0.0030  lr: 0.0015984  max_mem: 5135M
[09/17 08:56:42] d2.utils.events INFO:  eta: 7:08:49  iter: 179  total_loss: 1.138  loss_fcos_cls: 0.327  loss_fcos_loc: 0.2285  loss_fcos_ctr: 0.6177  loss_mask: 0  time: 0.2858  data_time: 0.0031  lr: 0.0017982  max_mem: 5135M
[09/17 08:56:48] d2.utils.events INFO:  eta: 7:10:22  iter: 199  total_loss: 1.257  loss_fcos_cls: 0.3684  loss_fcos_loc: 0.2284  loss_fcos_ctr: 0.6163  loss_mask: 0  time: 0.2866  data_time: 0.0032  lr: 0.001998  max_mem: 5135M
[09/17 08:56:54] d2.utils.events INFO:  eta: 7:10:10  iter: 219  total_loss: 1.302  loss_fcos_cls: 0.4227  loss_fcos_loc: 0.264  loss_fcos_ctr: 0.6199  loss_mask: 0  time: 0.2858  data_time: 0.0029  lr: 0.0021978  max_mem: 5135M
[09/17 08:57:00] d2.utils.events INFO:  eta: 7:11:06  iter: 239  total_loss: 1.241  loss_fcos_cls: 0.3687  loss_fcos_loc: 0.2575  loss_fcos_ctr: 0.6258  loss_mask: 0  time: 0.2867  data_time: 0.0031  lr: 0.0023976  max_mem: 5135M
[09/17 08:57:05] d2.utils.events INFO:  eta: 7:11:31  iter: 259  total_loss: 1.259  loss_fcos_cls: 0.4215  loss_fcos_loc: 0.2343  loss_fcos_ctr: 0.6218  loss_mask: 0  time: 0.2866  data_time: 0.0029  lr: 0.0025974  max_mem: 5135M
[09/17 08:57:11] d2.utils.events INFO:  eta: 7:11:56  iter: 279  total_loss: 1.345  loss_fcos_cls: 0.47  loss_fcos_loc: 0.2475  loss_fcos_ctr: 0.6213  loss_mask: 0  time: 0.2866  data_time: 0.0029  lr: 0.0027972  max_mem: 5135M
[09/17 08:57:17] d2.utils.events INFO:  eta: 7:15:08  iter: 299  total_loss: 1.393  loss_fcos_cls: 0.48  loss_fcos_loc: 0.2811  loss_fcos_ctr: 0.6247  loss_mask: 0  time: 0.2880  data_time: 0.0031  lr: 0.002997  max_mem: 5135M
[09/17 08:57:23] d2.utils.events INFO:  eta: 7:14:32  iter: 319  total_loss: 1.364  loss_fcos_cls: 0.4505  loss_fcos_loc: 0.2846  loss_fcos_ctr: 0.6271  loss_mask: 0  time: 0.2876  data_time: 0.0029  lr: 0.0031968  max_mem: 5135M
[09/17 08:57:28] d2.utils.events INFO:  eta: 7:11:39  iter: 339  total_loss: 1.442  loss_fcos_cls: 0.4951  loss_fcos_loc: 0.2875  loss_fcos_ctr: 0.6319  loss_mask: 0  time: 0.2868  data_time: 0.0028  lr: 0.0033966  max_mem: 5135M
[09/17 08:57:34] d2.utils.events INFO:  eta: 7:11:02  iter: 359  total_loss: 1.429  loss_fcos_cls: 0.5344  loss_fcos_loc: 0.2818  loss_fcos_ctr: 0.6307  loss_mask: 0  time: 0.2866  data_time: 0.0030  lr: 0.0035964  max_mem: 5135M
[09/17 08:57:40] d2.utils.events INFO:  eta: 7:10:25  iter: 379  total_loss: 1.463  loss_fcos_cls: 0.5558  loss_fcos_loc: 0.2881  loss_fcos_ctr: 0.6288  loss_mask: 0  time: 0.2865  data_time: 0.0028  lr: 0.0037962  max_mem: 5135M
[09/17 08:57:45] d2.utils.events INFO:  eta: 7:09:24  iter: 399  total_loss: 1.43  loss_fcos_cls: 0.5371  loss_fcos_loc: 0.2557  loss_fcos_ctr: 0.6195  loss_mask: 0  time: 0.2861  data_time: 0.0029  lr: 0.003996  max_mem: 5135M
[09/17 08:57:51] d2.utils.events INFO:  eta: 7:09:54  iter: 419  total_loss: 1.421  loss_fcos_cls: 0.524  loss_fcos_loc: 0.2856  loss_fcos_ctr: 0.634  loss_mask: 0  time: 0.2864  data_time: 0.0028  lr: 0.0041958  max_mem: 5135M
[09/17 08:57:57] d2.utils.events INFO:  eta: 7:10:50  iter: 439  total_loss: 1.396  loss_fcos_cls: 0.4663  loss_fcos_loc: 0.2681  loss_fcos_ctr: 0.6274  loss_mask: 0  time: 0.2868  data_time: 0.0029  lr: 0.0043956  max_mem: 5135M
[09/17 08:58:03] d2.utils.events INFO:  eta: 7:09:43  iter: 459  total_loss: 1.476  loss_fcos_cls: 0.5098  loss_fcos_loc: 0.3245  loss_fcos_ctr: 0.6355  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.0045954  max_mem: 5135M
[09/17 08:58:09] d2.utils.events INFO:  eta: 7:10:14  iter: 479  total_loss: 1.524  loss_fcos_cls: 0.5779  loss_fcos_loc: 0.3277  loss_fcos_ctr: 0.6303  loss_mask: 0  time: 0.2868  data_time: 0.0029  lr: 0.0047952  max_mem: 5135M
[09/17 08:58:14] d2.utils.events INFO:  eta: 7:10:21  iter: 499  total_loss: 1.471  loss_fcos_cls: 0.4876  loss_fcos_loc: 0.3126  loss_fcos_ctr: 0.6458  loss_mask: 0  time: 0.2868  data_time: 0.0031  lr: 0.004995  max_mem: 5135M
[09/17 08:58:20] d2.utils.events INFO:  eta: 7:10:37  iter: 519  total_loss: 1.413  loss_fcos_cls: 0.5084  loss_fcos_loc: 0.2463  loss_fcos_ctr: 0.619  loss_mask: 0  time: 0.2873  data_time: 0.0030  lr: 0.0051948  max_mem: 5135M
[09/17 08:58:26] d2.utils.events INFO:  eta: 7:10:23  iter: 539  total_loss: 1.333  loss_fcos_cls: 0.4433  loss_fcos_loc: 0.28  loss_fcos_ctr: 0.6216  loss_mask: 0  time: 0.2873  data_time: 0.0030  lr: 0.0053946  max_mem: 5135M
[09/17 08:58:32] d2.utils.events INFO:  eta: 7:10:17  iter: 559  total_loss: 1.358  loss_fcos_cls: 0.4713  loss_fcos_loc: 0.2498  loss_fcos_ctr: 0.6204  loss_mask: 0  time: 0.2874  data_time: 0.0031  lr: 0.0055944  max_mem: 5135M
[09/17 08:58:38] d2.utils.events INFO:  eta: 7:10:56  iter: 579  total_loss: 1.458  loss_fcos_cls: 0.5065  loss_fcos_loc: 0.305  loss_fcos_ctr: 0.6298  loss_mask: 0  time: 0.2879  data_time: 0.0030  lr: 0.0057942  max_mem: 5135M
[09/17 08:58:43] d2.utils.events INFO:  eta: 7:10:04  iter: 599  total_loss: 1.49  loss_fcos_cls: 0.5721  loss_fcos_loc: 0.3102  loss_fcos_ctr: 0.6393  loss_mask: 0  time: 0.2872  data_time: 0.0027  lr: 0.005994  max_mem: 5135M
[09/17 08:58:49] d2.utils.events INFO:  eta: 7:10:44  iter: 619  total_loss: 1.488  loss_fcos_cls: 0.5124  loss_fcos_loc: 0.3231  loss_fcos_ctr: 0.6306  loss_mask: 0  time: 0.2876  data_time: 0.0031  lr: 0.0061938  max_mem: 5135M
[09/17 08:58:55] d2.utils.events INFO:  eta: 7:11:09  iter: 639  total_loss: 1.485  loss_fcos_cls: 0.5421  loss_fcos_loc: 0.3117  loss_fcos_ctr: 0.6342  loss_mask: 0  time: 0.2882  data_time: 0.0030  lr: 0.0063936  max_mem: 5135M
[09/17 08:59:01] d2.utils.events INFO:  eta: 7:12:16  iter: 659  total_loss: 1.503  loss_fcos_cls: 0.5295  loss_fcos_loc: 0.3122  loss_fcos_ctr: 0.6301  loss_mask: 0  time: 0.2884  data_time: 0.0030  lr: 0.0065934  max_mem: 5135M
[09/17 08:59:07] d2.utils.events INFO:  eta: 7:12:19  iter: 679  total_loss: 1.465  loss_fcos_cls: 0.5266  loss_fcos_loc: 0.3035  loss_fcos_ctr: 0.6334  loss_mask: 0  time: 0.2885  data_time: 0.0030  lr: 0.0067932  max_mem: 5135M
[09/17 08:59:13] d2.utils.events INFO:  eta: 7:10:51  iter: 699  total_loss: 1.508  loss_fcos_cls: 0.534  loss_fcos_loc: 0.3188  loss_fcos_ctr: 0.6292  loss_mask: 0  time: 0.2881  data_time: 0.0029  lr: 0.006993  max_mem: 5135M
[09/17 08:59:18] d2.utils.events INFO:  eta: 7:10:33  iter: 719  total_loss: 1.49  loss_fcos_cls: 0.5802  loss_fcos_loc: 0.3072  loss_fcos_ctr: 0.6283  loss_mask: 0  time: 0.2880  data_time: 0.0029  lr: 0.0071928  max_mem: 5135M
[09/17 08:59:24] d2.utils.events INFO:  eta: 7:09:52  iter: 739  total_loss: 1.519  loss_fcos_cls: 0.5597  loss_fcos_loc: 0.3263  loss_fcos_ctr: 0.6301  loss_mask: 0  time: 0.2876  data_time: 0.0029  lr: 0.0073926  max_mem: 5135M
[09/17 08:59:30] d2.utils.events INFO:  eta: 7:09:19  iter: 759  total_loss: 1.589  loss_fcos_cls: 0.6161  loss_fcos_loc: 0.3337  loss_fcos_ctr: 0.6464  loss_mask: 0  time: 0.2876  data_time: 0.0031  lr: 0.0075924  max_mem: 5135M
[09/17 08:59:35] d2.utils.events INFO:  eta: 7:09:13  iter: 779  total_loss: 1.602  loss_fcos_cls: 0.5872  loss_fcos_loc: 0.3658  loss_fcos_ctr: 0.6504  loss_mask: 0  time: 0.2875  data_time: 0.0030  lr: 0.0077922  max_mem: 5135M
[09/17 08:59:41] d2.utils.events INFO:  eta: 7:08:36  iter: 799  total_loss: 1.458  loss_fcos_cls: 0.5187  loss_fcos_loc: 0.3164  loss_fcos_ctr: 0.6341  loss_mask: 0  time: 0.2872  data_time: 0.0030  lr: 0.007992  max_mem: 5135M
[09/17 08:59:47] d2.utils.events INFO:  eta: 7:08:18  iter: 819  total_loss: 1.543  loss_fcos_cls: 0.61  loss_fcos_loc: 0.3464  loss_fcos_ctr: 0.6452  loss_mask: 0  time: 0.2871  data_time: 0.0030  lr: 0.0081918  max_mem: 5135M
[09/17 08:59:52] d2.utils.events INFO:  eta: 7:08:04  iter: 839  total_loss: 1.562  loss_fcos_cls: 0.5591  loss_fcos_loc: 0.339  loss_fcos_ctr: 0.636  loss_mask: 0  time: 0.2871  data_time: 0.0030  lr: 0.0083916  max_mem: 5135M
[09/17 08:59:58] d2.utils.events INFO:  eta: 7:07:48  iter: 859  total_loss: 1.428  loss_fcos_cls: 0.4562  loss_fcos_loc: 0.3025  loss_fcos_ctr: 0.6293  loss_mask: 0  time: 0.2868  data_time: 0.0031  lr: 0.0085914  max_mem: 5135M
[09/17 09:00:03] d2.utils.events INFO:  eta: 7:07:41  iter: 879  total_loss: 1.515  loss_fcos_cls: 0.5413  loss_fcos_loc: 0.3418  loss_fcos_ctr: 0.6462  loss_mask: 0  time: 0.2868  data_time: 0.0029  lr: 0.0087912  max_mem: 5135M
[09/17 09:00:09] d2.utils.events INFO:  eta: 7:07:20  iter: 899  total_loss: 1.53  loss_fcos_cls: 0.538  loss_fcos_loc: 0.3265  loss_fcos_ctr: 0.6248  loss_mask: 0  time: 0.2868  data_time: 0.0030  lr: 0.008991  max_mem: 5135M
[09/17 09:00:15] d2.utils.events INFO:  eta: 7:06:45  iter: 919  total_loss: 1.502  loss_fcos_cls: 0.5459  loss_fcos_loc: 0.3149  loss_fcos_ctr: 0.6298  loss_mask: 0  time: 0.2864  data_time: 0.0029  lr: 0.0091908  max_mem: 5135M
[09/17 09:00:20] d2.utils.events INFO:  eta: 7:06:24  iter: 939  total_loss: 1.554  loss_fcos_cls: 0.5621  loss_fcos_loc: 0.3284  loss_fcos_ctr: 0.6335  loss_mask: 0  time: 0.2863  data_time: 0.0028  lr: 0.0093906  max_mem: 5135M
[09/17 09:00:26] d2.utils.events INFO:  eta: 7:06:00  iter: 959  total_loss: 1.461  loss_fcos_cls: 0.5193  loss_fcos_loc: 0.3024  loss_fcos_ctr: 0.6367  loss_mask: 0  time: 0.2861  data_time: 0.0030  lr: 0.0095904  max_mem: 5135M
[09/17 09:00:31] d2.utils.events INFO:  eta: 7:05:24  iter: 979  total_loss: 1.529  loss_fcos_cls: 0.5662  loss_fcos_loc: 0.3113  loss_fcos_ctr: 0.6346  loss_mask: 0  time: 0.2859  data_time: 0.0031  lr: 0.0097902  max_mem: 5135M
[09/17 09:00:37] d2.utils.events INFO:  eta: 7:05:49  iter: 999  total_loss: 1.474  loss_fcos_cls: 0.5269  loss_fcos_loc: 0.3  loss_fcos_ctr: 0.627  loss_mask: 0  time: 0.2861  data_time: 0.0029  lr: 0.00999  max_mem: 5135M
[09/17 09:00:43] d2.utils.events INFO:  eta: 7:05:43  iter: 1019  total_loss: 1.499  loss_fcos_cls: 0.4694  loss_fcos_loc: 0.354  loss_fcos_ctr: 0.6375  loss_mask: 0  time: 0.2861  data_time: 0.0032  lr: 0.01  max_mem: 5135M
[09/17 09:00:49] d2.utils.events INFO:  eta: 7:05:55  iter: 1039  total_loss: 1.506  loss_fcos_cls: 0.5869  loss_fcos_loc: 0.312  loss_fcos_ctr: 0.6285  loss_mask: 0  time: 0.2861  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:00:54] d2.utils.events INFO:  eta: 7:04:52  iter: 1059  total_loss: 1.561  loss_fcos_cls: 0.5937  loss_fcos_loc: 0.3448  loss_fcos_ctr: 0.6303  loss_mask: 0  time: 0.2859  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:01:00] d2.utils.events INFO:  eta: 7:05:11  iter: 1079  total_loss: 1.459  loss_fcos_cls: 0.514  loss_fcos_loc: 0.2814  loss_fcos_ctr: 0.6277  loss_mask: 0  time: 0.2861  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:01:06] d2.utils.events INFO:  eta: 7:05:56  iter: 1099  total_loss: 1.376  loss_fcos_cls: 0.4784  loss_fcos_loc: 0.2714  loss_fcos_ctr: 0.6202  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:01:12] d2.utils.events INFO:  eta: 7:06:02  iter: 1119  total_loss: 1.446  loss_fcos_cls: 0.4727  loss_fcos_loc: 0.3297  loss_fcos_ctr: 0.6297  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:01:18] d2.utils.events INFO:  eta: 7:06:27  iter: 1139  total_loss: 1.498  loss_fcos_cls: 0.5571  loss_fcos_loc: 0.3408  loss_fcos_ctr: 0.6308  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:01:24] d2.utils.events INFO:  eta: 7:06:25  iter: 1159  total_loss: 1.571  loss_fcos_cls: 0.5493  loss_fcos_loc: 0.3561  loss_fcos_ctr: 0.6323  loss_mask: 0  time: 0.2865  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:01:29] d2.utils.events INFO:  eta: 7:05:33  iter: 1179  total_loss: 1.497  loss_fcos_cls: 0.5381  loss_fcos_loc: 0.3164  loss_fcos_ctr: 0.6322  loss_mask: 0  time: 0.2864  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:01:35] d2.utils.events INFO:  eta: 7:05:13  iter: 1199  total_loss: 1.473  loss_fcos_cls: 0.4913  loss_fcos_loc: 0.3118  loss_fcos_ctr: 0.6331  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:01:41] d2.utils.events INFO:  eta: 7:05:26  iter: 1219  total_loss: 1.512  loss_fcos_cls: 0.5748  loss_fcos_loc: 0.3242  loss_fcos_ctr: 0.6388  loss_mask: 0  time: 0.2864  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:01:46] d2.utils.events INFO:  eta: 7:04:50  iter: 1239  total_loss: 1.525  loss_fcos_cls: 0.5791  loss_fcos_loc: 0.3436  loss_fcos_ctr: 0.6291  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:01:52] d2.utils.events INFO:  eta: 7:04:45  iter: 1259  total_loss: 1.606  loss_fcos_cls: 0.6361  loss_fcos_loc: 0.3524  loss_fcos_ctr: 0.6417  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:01:58] d2.utils.events INFO:  eta: 7:03:49  iter: 1279  total_loss: 1.553  loss_fcos_cls: 0.5802  loss_fcos_loc: 0.3144  loss_fcos_ctr: 0.6265  loss_mask: 0  time: 0.2864  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:02:04] d2.utils.events INFO:  eta: 7:02:54  iter: 1299  total_loss: 1.57  loss_fcos_cls: 0.5999  loss_fcos_loc: 0.338  loss_fcos_ctr: 0.644  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:02:09] d2.utils.events INFO:  eta: 7:03:27  iter: 1319  total_loss: 1.427  loss_fcos_cls: 0.5292  loss_fcos_loc: 0.3009  loss_fcos_ctr: 0.6318  loss_mask: 0  time: 0.2864  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:02:15] d2.utils.events INFO:  eta: 7:04:08  iter: 1339  total_loss: 1.513  loss_fcos_cls: 0.5795  loss_fcos_loc: 0.3146  loss_fcos_ctr: 0.6328  loss_mask: 0  time: 0.2864  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:02:21] d2.utils.events INFO:  eta: 7:04:12  iter: 1359  total_loss: 1.481  loss_fcos_cls: 0.5288  loss_fcos_loc: 0.3369  loss_fcos_ctr: 0.6335  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:02:27] d2.utils.events INFO:  eta: 7:04:30  iter: 1379  total_loss: 1.447  loss_fcos_cls: 0.5147  loss_fcos_loc: 0.306  loss_fcos_ctr: 0.642  loss_mask: 0  time: 0.2864  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:02:32] d2.utils.events INFO:  eta: 7:04:24  iter: 1399  total_loss: 1.453  loss_fcos_cls: 0.5196  loss_fcos_loc: 0.3104  loss_fcos_ctr: 0.6441  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:02:38] d2.utils.events INFO:  eta: 7:03:55  iter: 1419  total_loss: 1.515  loss_fcos_cls: 0.5501  loss_fcos_loc: 0.3261  loss_fcos_ctr: 0.6245  loss_mask: 0  time: 0.2863  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:02:44] d2.utils.events INFO:  eta: 7:02:53  iter: 1439  total_loss: 1.497  loss_fcos_cls: 0.5356  loss_fcos_loc: 0.3104  loss_fcos_ctr: 0.6341  loss_mask: 0  time: 0.2862  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:02:49] d2.utils.events INFO:  eta: 7:03:33  iter: 1459  total_loss: 1.47  loss_fcos_cls: 0.5288  loss_fcos_loc: 0.3131  loss_fcos_ctr: 0.6413  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:02:55] d2.utils.events INFO:  eta: 7:02:45  iter: 1479  total_loss: 1.487  loss_fcos_cls: 0.5113  loss_fcos_loc: 0.3541  loss_fcos_ctr: 0.6409  loss_mask: 0  time: 0.2862  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:03:01] d2.utils.events INFO:  eta: 7:02:46  iter: 1499  total_loss: 1.589  loss_fcos_cls: 0.567  loss_fcos_loc: 0.3441  loss_fcos_ctr: 0.6308  loss_mask: 0  time: 0.2862  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:03:06] d2.utils.events INFO:  eta: 7:01:32  iter: 1519  total_loss: 1.339  loss_fcos_cls: 0.444  loss_fcos_loc: 0.2983  loss_fcos_ctr: 0.6251  loss_mask: 0  time: 0.2860  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:03:12] d2.utils.events INFO:  eta: 7:02:24  iter: 1539  total_loss: 1.499  loss_fcos_cls: 0.5123  loss_fcos_loc: 0.2867  loss_fcos_ctr: 0.6293  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:03:18] d2.utils.events INFO:  eta: 7:02:18  iter: 1559  total_loss: 1.548  loss_fcos_cls: 0.5729  loss_fcos_loc: 0.3542  loss_fcos_ctr: 0.6315  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:03:24] d2.utils.events INFO:  eta: 7:01:14  iter: 1579  total_loss: 1.511  loss_fcos_cls: 0.5513  loss_fcos_loc: 0.3169  loss_fcos_ctr: 0.6258  loss_mask: 0  time: 0.2862  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:03:30] d2.utils.events INFO:  eta: 7:02:16  iter: 1599  total_loss: 1.5  loss_fcos_cls: 0.527  loss_fcos_loc: 0.3193  loss_fcos_ctr: 0.6246  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:03:35] d2.utils.events INFO:  eta: 7:01:34  iter: 1619  total_loss: 1.441  loss_fcos_cls: 0.5018  loss_fcos_loc: 0.3242  loss_fcos_ctr: 0.6376  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:03:41] d2.utils.events INFO:  eta: 7:00:51  iter: 1639  total_loss: 1.455  loss_fcos_cls: 0.4848  loss_fcos_loc: 0.3308  loss_fcos_ctr: 0.6399  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:03:47] d2.utils.events INFO:  eta: 6:59:48  iter: 1659  total_loss: 1.413  loss_fcos_cls: 0.4828  loss_fcos_loc: 0.297  loss_fcos_ctr: 0.6362  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:03:52] d2.utils.events INFO:  eta: 6:59:02  iter: 1679  total_loss: 1.353  loss_fcos_cls: 0.4513  loss_fcos_loc: 0.2897  loss_fcos_ctr: 0.6201  loss_mask: 0  time: 0.2861  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:03:58] d2.utils.events INFO:  eta: 6:59:36  iter: 1699  total_loss: 1.423  loss_fcos_cls: 0.4511  loss_fcos_loc: 0.3301  loss_fcos_ctr: 0.6309  loss_mask: 0  time: 0.2860  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:04:03] d2.utils.events INFO:  eta: 6:59:41  iter: 1719  total_loss: 1.416  loss_fcos_cls: 0.4799  loss_fcos_loc: 0.3102  loss_fcos_ctr: 0.6243  loss_mask: 0  time: 0.2860  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:04:09] d2.utils.events INFO:  eta: 7:00:25  iter: 1739  total_loss: 1.509  loss_fcos_cls: 0.5586  loss_fcos_loc: 0.3382  loss_fcos_ctr: 0.6287  loss_mask: 0  time: 0.2860  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:04:15] d2.utils.events INFO:  eta: 7:00:17  iter: 1759  total_loss: 1.53  loss_fcos_cls: 0.5483  loss_fcos_loc: 0.3221  loss_fcos_ctr: 0.6354  loss_mask: 0  time: 0.2860  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:04:21] d2.utils.events INFO:  eta: 7:00:20  iter: 1779  total_loss: 1.382  loss_fcos_cls: 0.4676  loss_fcos_loc: 0.2673  loss_fcos_ctr: 0.626  loss_mask: 0  time: 0.2860  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:04:26] d2.utils.events INFO:  eta: 7:01:18  iter: 1799  total_loss: 1.528  loss_fcos_cls: 0.5729  loss_fcos_loc: 0.3294  loss_fcos_ctr: 0.6303  loss_mask: 0  time: 0.2860  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:04:32] d2.utils.events INFO:  eta: 7:00:36  iter: 1819  total_loss: 1.503  loss_fcos_cls: 0.5351  loss_fcos_loc: 0.3217  loss_fcos_ctr: 0.6235  loss_mask: 0  time: 0.2858  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:04:37] d2.utils.events INFO:  eta: 7:00:18  iter: 1839  total_loss: 1.516  loss_fcos_cls: 0.4853  loss_fcos_loc: 0.3363  loss_fcos_ctr: 0.6316  loss_mask: 0  time: 0.2858  data_time: 0.0032  lr: 0.01  max_mem: 5135M
[09/17 09:04:43] d2.utils.events INFO:  eta: 7:01:05  iter: 1859  total_loss: 1.447  loss_fcos_cls: 0.5174  loss_fcos_loc: 0.3069  loss_fcos_ctr: 0.6319  loss_mask: 0  time: 0.2859  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:04:49] d2.utils.events INFO:  eta: 7:01:12  iter: 1879  total_loss: 1.525  loss_fcos_cls: 0.523  loss_fcos_loc: 0.3391  loss_fcos_ctr: 0.6374  loss_mask: 0  time: 0.2859  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:04:55] d2.utils.events INFO:  eta: 7:00:50  iter: 1899  total_loss: 1.398  loss_fcos_cls: 0.4527  loss_fcos_loc: 0.2948  loss_fcos_ctr: 0.6333  loss_mask: 0  time: 0.2859  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:05:01] d2.utils.events INFO:  eta: 7:01:50  iter: 1919  total_loss: 1.381  loss_fcos_cls: 0.4371  loss_fcos_loc: 0.3095  loss_fcos_ctr: 0.6282  loss_mask: 0  time: 0.2859  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:05:06] d2.utils.events INFO:  eta: 7:01:55  iter: 1939  total_loss: 1.436  loss_fcos_cls: 0.4668  loss_fcos_loc: 0.3083  loss_fcos_ctr: 0.6311  loss_mask: 0  time: 0.2860  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:05:12] d2.utils.events INFO:  eta: 7:02:09  iter: 1959  total_loss: 1.426  loss_fcos_cls: 0.4947  loss_fcos_loc: 0.3064  loss_fcos_ctr: 0.6265  loss_mask: 0  time: 0.2860  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:05:18] d2.utils.events INFO:  eta: 7:02:13  iter: 1979  total_loss: 1.425  loss_fcos_cls: 0.4573  loss_fcos_loc: 0.3215  loss_fcos_ctr: 0.636  loss_mask: 0  time: 0.2861  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:05:24] d2.utils.events INFO:  eta: 7:02:14  iter: 1999  total_loss: 1.382  loss_fcos_cls: 0.4714  loss_fcos_loc: 0.2906  loss_fcos_ctr: 0.6234  loss_mask: 0  time: 0.2862  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:05:30] d2.utils.events INFO:  eta: 7:02:30  iter: 2019  total_loss: 1.406  loss_fcos_cls: 0.4681  loss_fcos_loc: 0.2903  loss_fcos_ctr: 0.6305  loss_mask: 0  time: 0.2862  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:05:36] d2.utils.events INFO:  eta: 7:02:51  iter: 2039  total_loss: 1.483  loss_fcos_cls: 0.5272  loss_fcos_loc: 0.3274  loss_fcos_ctr: 0.6394  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:05:41] d2.utils.events INFO:  eta: 7:03:03  iter: 2059  total_loss: 1.514  loss_fcos_cls: 0.5852  loss_fcos_loc: 0.3045  loss_fcos_ctr: 0.6263  loss_mask: 0  time: 0.2862  data_time: 0.0032  lr: 0.01  max_mem: 5135M
[09/17 09:05:47] d2.utils.events INFO:  eta: 7:01:51  iter: 2079  total_loss: 1.41  loss_fcos_cls: 0.504  loss_fcos_loc: 0.2935  loss_fcos_ctr: 0.6341  loss_mask: 0  time: 0.2862  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:05:53] d2.utils.events INFO:  eta: 7:01:38  iter: 2099  total_loss: 1.448  loss_fcos_cls: 0.5185  loss_fcos_loc: 0.3074  loss_fcos_ctr: 0.6233  loss_mask: 0  time: 0.2863  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:05:58] d2.utils.events INFO:  eta: 7:01:11  iter: 2119  total_loss: 1.541  loss_fcos_cls: 0.5158  loss_fcos_loc: 0.318  loss_fcos_ctr: 0.6322  loss_mask: 0  time: 0.2862  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:06:04] d2.utils.events INFO:  eta: 7:00:56  iter: 2139  total_loss: 1.348  loss_fcos_cls: 0.4414  loss_fcos_loc: 0.319  loss_fcos_ctr: 0.6326  loss_mask: 0  time: 0.2862  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:06:10] d2.utils.events INFO:  eta: 7:00:41  iter: 2159  total_loss: 1.35  loss_fcos_cls: 0.4725  loss_fcos_loc: 0.281  loss_fcos_ctr: 0.6249  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:06:16] d2.utils.events INFO:  eta: 7:01:15  iter: 2179  total_loss: 1.417  loss_fcos_cls: 0.4541  loss_fcos_loc: 0.3175  loss_fcos_ctr: 0.6282  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:06:21] d2.utils.events INFO:  eta: 7:01:06  iter: 2199  total_loss: 1.447  loss_fcos_cls: 0.519  loss_fcos_loc: 0.321  loss_fcos_ctr: 0.6317  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:06:27] d2.utils.events INFO:  eta: 7:00:51  iter: 2219  total_loss: 1.372  loss_fcos_cls: 0.439  loss_fcos_loc: 0.2999  loss_fcos_ctr: 0.6333  loss_mask: 0  time: 0.2862  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:06:33] d2.utils.events INFO:  eta: 7:00:41  iter: 2239  total_loss: 1.489  loss_fcos_cls: 0.5534  loss_fcos_loc: 0.2922  loss_fcos_ctr: 0.627  loss_mask: 0  time: 0.2861  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:06:38] d2.utils.events INFO:  eta: 7:00:31  iter: 2259  total_loss: 1.389  loss_fcos_cls: 0.4496  loss_fcos_loc: 0.3173  loss_fcos_ctr: 0.6292  loss_mask: 0  time: 0.2861  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:06:44] d2.utils.events INFO:  eta: 7:00:29  iter: 2279  total_loss: 1.412  loss_fcos_cls: 0.4617  loss_fcos_loc: 0.2837  loss_fcos_ctr: 0.6319  loss_mask: 0  time: 0.2861  data_time: 0.0027  lr: 0.01  max_mem: 5135M
[09/17 09:06:50] d2.utils.events INFO:  eta: 7:00:10  iter: 2299  total_loss: 1.392  loss_fcos_cls: 0.476  loss_fcos_loc: 0.2955  loss_fcos_ctr: 0.62  loss_mask: 0  time: 0.2860  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:06:55] d2.utils.events INFO:  eta: 6:58:49  iter: 2319  total_loss: 1.492  loss_fcos_cls: 0.4875  loss_fcos_loc: 0.3236  loss_fcos_ctr: 0.642  loss_mask: 0  time: 0.2859  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:07:01] d2.utils.events INFO:  eta: 6:59:19  iter: 2339  total_loss: 1.405  loss_fcos_cls: 0.4555  loss_fcos_loc: 0.3161  loss_fcos_ctr: 0.6323  loss_mask: 0  time: 0.2860  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:07:06] d2.utils.events INFO:  eta: 6:57:39  iter: 2359  total_loss: 1.472  loss_fcos_cls: 0.5329  loss_fcos_loc: 0.3151  loss_fcos_ctr: 0.631  loss_mask: 0  time: 0.2859  data_time: 0.0027  lr: 0.01  max_mem: 5135M
[09/17 09:07:12] d2.utils.events INFO:  eta: 6:57:21  iter: 2379  total_loss: 1.422  loss_fcos_cls: 0.4982  loss_fcos_loc: 0.2902  loss_fcos_ctr: 0.6235  loss_mask: 0  time: 0.2859  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:07:18] d2.utils.events INFO:  eta: 6:59:01  iter: 2399  total_loss: 1.445  loss_fcos_cls: 0.4773  loss_fcos_loc: 0.3195  loss_fcos_ctr: 0.6393  loss_mask: 0  time: 0.2860  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:07:24] d2.utils.events INFO:  eta: 6:59:16  iter: 2419  total_loss: 1.445  loss_fcos_cls: 0.5327  loss_fcos_loc: 0.3173  loss_fcos_ctr: 0.6281  loss_mask: 0  time: 0.2860  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:07:30] d2.utils.events INFO:  eta: 6:59:14  iter: 2439  total_loss: 1.432  loss_fcos_cls: 0.497  loss_fcos_loc: 0.3061  loss_fcos_ctr: 0.6298  loss_mask: 0  time: 0.2860  data_time: 0.0027  lr: 0.01  max_mem: 5135M
[09/17 09:07:36] d2.utils.events INFO:  eta: 6:59:32  iter: 2459  total_loss: 1.413  loss_fcos_cls: 0.5326  loss_fcos_loc: 0.3183  loss_fcos_ctr: 0.6398  loss_mask: 0  time: 0.2861  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:07:41] d2.utils.events INFO:  eta: 6:59:36  iter: 2479  total_loss: 1.413  loss_fcos_cls: 0.4584  loss_fcos_loc: 0.2951  loss_fcos_ctr: 0.6273  loss_mask: 0  time: 0.2861  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:07:47] d2.utils.events INFO:  eta: 6:59:11  iter: 2499  total_loss: 1.435  loss_fcos_cls: 0.4834  loss_fcos_loc: 0.3247  loss_fcos_ctr: 0.6307  loss_mask: 0  time: 0.2861  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:07:53] d2.utils.events INFO:  eta: 7:00:43  iter: 2519  total_loss: 1.507  loss_fcos_cls: 0.5429  loss_fcos_loc: 0.3269  loss_fcos_ctr: 0.6334  loss_mask: 0  time: 0.2862  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:07:59] d2.utils.events INFO:  eta: 6:59:54  iter: 2539  total_loss: 1.44  loss_fcos_cls: 0.4983  loss_fcos_loc: 0.2982  loss_fcos_ctr: 0.6241  loss_mask: 0  time: 0.2862  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:08:05] d2.utils.events INFO:  eta: 7:00:32  iter: 2559  total_loss: 1.36  loss_fcos_cls: 0.4245  loss_fcos_loc: 0.2947  loss_fcos_ctr: 0.6311  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:08:10] d2.utils.events INFO:  eta: 7:00:48  iter: 2579  total_loss: 1.385  loss_fcos_cls: 0.4687  loss_fcos_loc: 0.3049  loss_fcos_ctr: 0.6285  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:08:16] d2.utils.events INFO:  eta: 7:00:42  iter: 2599  total_loss: 1.454  loss_fcos_cls: 0.5064  loss_fcos_loc: 0.3067  loss_fcos_ctr: 0.6269  loss_mask: 0  time: 0.2863  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:08:22] d2.utils.events INFO:  eta: 7:00:36  iter: 2619  total_loss: 1.446  loss_fcos_cls: 0.5039  loss_fcos_loc: 0.2905  loss_fcos_ctr: 0.6252  loss_mask: 0  time: 0.2862  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:08:28] d2.utils.events INFO:  eta: 7:00:07  iter: 2639  total_loss: 1.457  loss_fcos_cls: 0.4639  loss_fcos_loc: 0.3305  loss_fcos_ctr: 0.6386  loss_mask: 0  time: 0.2862  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:08:34] d2.utils.events INFO:  eta: 7:00:39  iter: 2659  total_loss: 1.421  loss_fcos_cls: 0.4895  loss_fcos_loc: 0.3146  loss_fcos_ctr: 0.6442  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:08:39] d2.utils.events INFO:  eta: 7:01:19  iter: 2679  total_loss: 1.379  loss_fcos_cls: 0.4515  loss_fcos_loc: 0.2999  loss_fcos_ctr: 0.6352  loss_mask: 0  time: 0.2863  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:08:45] d2.utils.events INFO:  eta: 7:01:37  iter: 2699  total_loss: 1.385  loss_fcos_cls: 0.4622  loss_fcos_loc: 0.2943  loss_fcos_ctr: 0.6215  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:08:51] d2.utils.events INFO:  eta: 7:00:40  iter: 2719  total_loss: 1.485  loss_fcos_cls: 0.5301  loss_fcos_loc: 0.3272  loss_fcos_ctr: 0.6268  loss_mask: 0  time: 0.2862  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:08:56] d2.utils.events INFO:  eta: 6:59:51  iter: 2739  total_loss: 1.357  loss_fcos_cls: 0.4678  loss_fcos_loc: 0.2787  loss_fcos_ctr: 0.6246  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:09:02] d2.utils.events INFO:  eta: 7:00:25  iter: 2759  total_loss: 1.36  loss_fcos_cls: 0.4362  loss_fcos_loc: 0.3236  loss_fcos_ctr: 0.6349  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:09:08] d2.utils.events INFO:  eta: 6:59:39  iter: 2779  total_loss: 1.426  loss_fcos_cls: 0.4984  loss_fcos_loc: 0.2781  loss_fcos_ctr: 0.6221  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:09:13] d2.utils.events INFO:  eta: 7:00:17  iter: 2799  total_loss: 1.383  loss_fcos_cls: 0.4407  loss_fcos_loc: 0.3067  loss_fcos_ctr: 0.6312  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:09:19] d2.utils.events INFO:  eta: 7:00:23  iter: 2819  total_loss: 1.352  loss_fcos_cls: 0.4637  loss_fcos_loc: 0.3027  loss_fcos_ctr: 0.6229  loss_mask: 0  time: 0.2862  data_time: 0.0032  lr: 0.01  max_mem: 5135M
[09/17 09:09:25] d2.utils.events INFO:  eta: 7:00:21  iter: 2839  total_loss: 1.437  loss_fcos_cls: 0.5105  loss_fcos_loc: 0.3101  loss_fcos_ctr: 0.6325  loss_mask: 0  time: 0.2862  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:09:31] d2.utils.events INFO:  eta: 7:01:11  iter: 2859  total_loss: 1.387  loss_fcos_cls: 0.4749  loss_fcos_loc: 0.2904  loss_fcos_ctr: 0.6307  loss_mask: 0  time: 0.2864  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:09:37] d2.utils.events INFO:  eta: 7:00:23  iter: 2879  total_loss: 1.364  loss_fcos_cls: 0.4614  loss_fcos_loc: 0.2869  loss_fcos_ctr: 0.6256  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:09:43] d2.utils.events INFO:  eta: 7:01:59  iter: 2899  total_loss: 1.428  loss_fcos_cls: 0.4984  loss_fcos_loc: 0.2786  loss_fcos_ctr: 0.6303  loss_mask: 0  time: 0.2864  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:09:48] d2.utils.events INFO:  eta: 7:01:03  iter: 2919  total_loss: 1.448  loss_fcos_cls: 0.489  loss_fcos_loc: 0.3011  loss_fcos_ctr: 0.6336  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:09:54] d2.utils.events INFO:  eta: 7:01:16  iter: 2939  total_loss: 1.369  loss_fcos_cls: 0.5035  loss_fcos_loc: 0.2588  loss_fcos_ctr: 0.6174  loss_mask: 0  time: 0.2865  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:10:00] d2.utils.events INFO:  eta: 7:00:55  iter: 2959  total_loss: 1.436  loss_fcos_cls: 0.4656  loss_fcos_loc: 0.3086  loss_fcos_ctr: 0.627  loss_mask: 0  time: 0.2864  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:10:05] d2.utils.events INFO:  eta: 7:00:37  iter: 2979  total_loss: 1.362  loss_fcos_cls: 0.4536  loss_fcos_loc: 0.3053  loss_fcos_ctr: 0.6329  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:10:11] d2.utils.events INFO:  eta: 6:59:35  iter: 2999  total_loss: 1.395  loss_fcos_cls: 0.4573  loss_fcos_loc: 0.2821  loss_fcos_ctr: 0.6195  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:10:17] d2.utils.events INFO:  eta: 6:59:42  iter: 3019  total_loss: 1.483  loss_fcos_cls: 0.5139  loss_fcos_loc: 0.3241  loss_fcos_ctr: 0.636  loss_mask: 0  time: 0.2862  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:10:22] d2.utils.events INFO:  eta: 6:59:27  iter: 3039  total_loss: 1.392  loss_fcos_cls: 0.4738  loss_fcos_loc: 0.2961  loss_fcos_ctr: 0.6302  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:10:28] d2.utils.events INFO:  eta: 6:59:21  iter: 3059  total_loss: 1.323  loss_fcos_cls: 0.42  loss_fcos_loc: 0.2745  loss_fcos_ctr: 0.6233  loss_mask: 0  time: 0.2862  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:10:34] d2.utils.events INFO:  eta: 6:59:33  iter: 3079  total_loss: 1.396  loss_fcos_cls: 0.4696  loss_fcos_loc: 0.299  loss_fcos_ctr: 0.6313  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:10:39] d2.utils.events INFO:  eta: 6:58:54  iter: 3099  total_loss: 1.485  loss_fcos_cls: 0.4566  loss_fcos_loc: 0.3129  loss_fcos_ctr: 0.6376  loss_mask: 0  time: 0.2862  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:10:45] d2.utils.events INFO:  eta: 6:58:54  iter: 3119  total_loss: 1.442  loss_fcos_cls: 0.4647  loss_fcos_loc: 0.3204  loss_fcos_ctr: 0.6327  loss_mask: 0  time: 0.2862  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:10:51] d2.utils.events INFO:  eta: 6:58:49  iter: 3139  total_loss: 1.355  loss_fcos_cls: 0.4371  loss_fcos_loc: 0.309  loss_fcos_ctr: 0.6299  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:10:57] d2.utils.events INFO:  eta: 6:58:14  iter: 3159  total_loss: 1.323  loss_fcos_cls: 0.3841  loss_fcos_loc: 0.2632  loss_fcos_ctr: 0.6212  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:11:03] d2.utils.events INFO:  eta: 6:58:31  iter: 3179  total_loss: 1.455  loss_fcos_cls: 0.4808  loss_fcos_loc: 0.3024  loss_fcos_ctr: 0.6356  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:11:08] d2.utils.events INFO:  eta: 6:58:17  iter: 3199  total_loss: 1.481  loss_fcos_cls: 0.5275  loss_fcos_loc: 0.3217  loss_fcos_ctr: 0.6257  loss_mask: 0  time: 0.2863  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:11:14] d2.utils.events INFO:  eta: 6:57:41  iter: 3219  total_loss: 1.412  loss_fcos_cls: 0.5156  loss_fcos_loc: 0.2889  loss_fcos_ctr: 0.6273  loss_mask: 0  time: 0.2863  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:11:20] d2.utils.events INFO:  eta: 6:57:35  iter: 3239  total_loss: 1.37  loss_fcos_cls: 0.4671  loss_fcos_loc: 0.2459  loss_fcos_ctr: 0.6168  loss_mask: 0  time: 0.2862  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:11:25] d2.utils.events INFO:  eta: 6:58:04  iter: 3259  total_loss: 1.322  loss_fcos_cls: 0.3745  loss_fcos_loc: 0.3111  loss_fcos_ctr: 0.6346  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:11:31] d2.utils.events INFO:  eta: 6:58:02  iter: 3279  total_loss: 1.402  loss_fcos_cls: 0.5238  loss_fcos_loc: 0.285  loss_fcos_ctr: 0.6292  loss_mask: 0  time: 0.2863  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:11:37] d2.utils.events INFO:  eta: 6:58:05  iter: 3299  total_loss: 1.305  loss_fcos_cls: 0.4069  loss_fcos_loc: 0.2787  loss_fcos_ctr: 0.6281  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:11:43] d2.utils.events INFO:  eta: 6:58:27  iter: 3319  total_loss: 1.375  loss_fcos_cls: 0.432  loss_fcos_loc: 0.3014  loss_fcos_ctr: 0.6286  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:11:49] d2.utils.events INFO:  eta: 6:58:13  iter: 3339  total_loss: 1.398  loss_fcos_cls: 0.4849  loss_fcos_loc: 0.2957  loss_fcos_ctr: 0.6255  loss_mask: 0  time: 0.2863  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:11:54] d2.utils.events INFO:  eta: 6:58:15  iter: 3359  total_loss: 1.393  loss_fcos_cls: 0.4318  loss_fcos_loc: 0.2933  loss_fcos_ctr: 0.6246  loss_mask: 0  time: 0.2863  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:12:00] d2.utils.events INFO:  eta: 6:58:23  iter: 3379  total_loss: 1.342  loss_fcos_cls: 0.4768  loss_fcos_loc: 0.2747  loss_fcos_ctr: 0.6217  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:12:06] d2.utils.events INFO:  eta: 6:58:01  iter: 3399  total_loss: 1.317  loss_fcos_cls: 0.4478  loss_fcos_loc: 0.2777  loss_fcos_ctr: 0.623  loss_mask: 0  time: 0.2863  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:12:12] d2.utils.events INFO:  eta: 6:57:47  iter: 3419  total_loss: 1.384  loss_fcos_cls: 0.4667  loss_fcos_loc: 0.3127  loss_fcos_ctr: 0.6272  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:12:17] d2.utils.events INFO:  eta: 6:57:42  iter: 3439  total_loss: 1.389  loss_fcos_cls: 0.4571  loss_fcos_loc: 0.281  loss_fcos_ctr: 0.6275  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:12:23] d2.utils.events INFO:  eta: 6:57:26  iter: 3459  total_loss: 1.44  loss_fcos_cls: 0.5389  loss_fcos_loc: 0.2992  loss_fcos_ctr: 0.6312  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:12:29] d2.utils.events INFO:  eta: 6:57:27  iter: 3479  total_loss: 1.417  loss_fcos_cls: 0.4936  loss_fcos_loc: 0.2991  loss_fcos_ctr: 0.6307  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:12:34] d2.utils.events INFO:  eta: 6:57:21  iter: 3499  total_loss: 1.427  loss_fcos_cls: 0.4745  loss_fcos_loc: 0.2996  loss_fcos_ctr: 0.6396  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:12:40] d2.utils.events INFO:  eta: 6:56:56  iter: 3519  total_loss: 1.395  loss_fcos_cls: 0.446  loss_fcos_loc: 0.337  loss_fcos_ctr: 0.6312  loss_mask: 0  time: 0.2863  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:12:46] d2.utils.events INFO:  eta: 6:56:55  iter: 3539  total_loss: 1.38  loss_fcos_cls: 0.4062  loss_fcos_loc: 0.2937  loss_fcos_ctr: 0.6298  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:12:52] d2.utils.events INFO:  eta: 6:56:36  iter: 3559  total_loss: 1.355  loss_fcos_cls: 0.3842  loss_fcos_loc: 0.316  loss_fcos_ctr: 0.6334  loss_mask: 0  time: 0.2863  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:12:57] d2.utils.events INFO:  eta: 6:56:21  iter: 3579  total_loss: 1.318  loss_fcos_cls: 0.4016  loss_fcos_loc: 0.2874  loss_fcos_ctr: 0.6201  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:13:03] d2.utils.events INFO:  eta: 6:56:07  iter: 3599  total_loss: 1.42  loss_fcos_cls: 0.4852  loss_fcos_loc: 0.2885  loss_fcos_ctr: 0.6213  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:13:09] d2.utils.events INFO:  eta: 6:55:50  iter: 3619  total_loss: 1.521  loss_fcos_cls: 0.5172  loss_fcos_loc: 0.3481  loss_fcos_ctr: 0.6351  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:13:15] d2.utils.events INFO:  eta: 6:56:20  iter: 3639  total_loss: 1.357  loss_fcos_cls: 0.404  loss_fcos_loc: 0.3068  loss_fcos_ctr: 0.627  loss_mask: 0  time: 0.2864  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:13:21] d2.utils.events INFO:  eta: 6:55:38  iter: 3659  total_loss: 1.365  loss_fcos_cls: 0.4621  loss_fcos_loc: 0.3003  loss_fcos_ctr: 0.628  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:13:26] d2.utils.events INFO:  eta: 6:55:22  iter: 3679  total_loss: 1.397  loss_fcos_cls: 0.4535  loss_fcos_loc: 0.3197  loss_fcos_ctr: 0.6239  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:13:32] d2.utils.events INFO:  eta: 6:55:22  iter: 3699  total_loss: 1.422  loss_fcos_cls: 0.5048  loss_fcos_loc: 0.3178  loss_fcos_ctr: 0.6327  loss_mask: 0  time: 0.2864  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:13:38] d2.utils.events INFO:  eta: 6:55:45  iter: 3719  total_loss: 1.402  loss_fcos_cls: 0.4586  loss_fcos_loc: 0.2908  loss_fcos_ctr: 0.6266  loss_mask: 0  time: 0.2864  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:13:43] d2.utils.events INFO:  eta: 6:55:35  iter: 3739  total_loss: 1.388  loss_fcos_cls: 0.4878  loss_fcos_loc: 0.2831  loss_fcos_ctr: 0.6285  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:13:49] d2.utils.events INFO:  eta: 6:55:31  iter: 3759  total_loss: 1.45  loss_fcos_cls: 0.5053  loss_fcos_loc: 0.3113  loss_fcos_ctr: 0.6253  loss_mask: 0  time: 0.2864  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:13:55] d2.utils.events INFO:  eta: 6:55:15  iter: 3779  total_loss: 1.352  loss_fcos_cls: 0.4189  loss_fcos_loc: 0.2812  loss_fcos_ctr: 0.6322  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:14:01] d2.utils.events INFO:  eta: 6:55:09  iter: 3799  total_loss: 1.417  loss_fcos_cls: 0.4587  loss_fcos_loc: 0.3314  loss_fcos_ctr: 0.6284  loss_mask: 0  time: 0.2864  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:14:07] d2.utils.events INFO:  eta: 6:55:14  iter: 3819  total_loss: 1.331  loss_fcos_cls: 0.4046  loss_fcos_loc: 0.2978  loss_fcos_ctr: 0.6245  loss_mask: 0  time: 0.2864  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:14:12] d2.utils.events INFO:  eta: 6:55:11  iter: 3839  total_loss: 1.391  loss_fcos_cls: 0.477  loss_fcos_loc: 0.2996  loss_fcos_ctr: 0.6248  loss_mask: 0  time: 0.2864  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:14:18] d2.utils.events INFO:  eta: 6:54:30  iter: 3859  total_loss: 1.352  loss_fcos_cls: 0.4148  loss_fcos_loc: 0.292  loss_fcos_ctr: 0.6326  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:14:23] d2.utils.events INFO:  eta: 6:54:24  iter: 3879  total_loss: 1.34  loss_fcos_cls: 0.4361  loss_fcos_loc: 0.2837  loss_fcos_ctr: 0.6171  loss_mask: 0  time: 0.2863  data_time: 0.0027  lr: 0.01  max_mem: 5135M
[09/17 09:14:29] d2.utils.events INFO:  eta: 6:53:21  iter: 3899  total_loss: 1.392  loss_fcos_cls: 0.4696  loss_fcos_loc: 0.305  loss_fcos_ctr: 0.6277  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:14:35] d2.utils.events INFO:  eta: 6:53:20  iter: 3919  total_loss: 1.376  loss_fcos_cls: 0.4621  loss_fcos_loc: 0.303  loss_fcos_ctr: 0.6271  loss_mask: 0  time: 0.2862  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:14:40] d2.utils.events INFO:  eta: 6:52:50  iter: 3939  total_loss: 1.298  loss_fcos_cls: 0.4402  loss_fcos_loc: 0.2592  loss_fcos_ctr: 0.6198  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:14:46] d2.utils.events INFO:  eta: 6:52:55  iter: 3959  total_loss: 1.294  loss_fcos_cls: 0.4304  loss_fcos_loc: 0.2477  loss_fcos_ctr: 0.6167  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:14:52] d2.utils.events INFO:  eta: 6:52:58  iter: 3979  total_loss: 1.35  loss_fcos_cls: 0.4329  loss_fcos_loc: 0.2781  loss_fcos_ctr: 0.6329  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:14:58] d2.utils.events INFO:  eta: 6:53:23  iter: 3999  total_loss: 1.398  loss_fcos_cls: 0.4998  loss_fcos_loc: 0.3037  loss_fcos_ctr: 0.6313  loss_mask: 0  time: 0.2862  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:15:03] d2.utils.events INFO:  eta: 6:52:59  iter: 4019  total_loss: 1.302  loss_fcos_cls: 0.4591  loss_fcos_loc: 0.2561  loss_fcos_ctr: 0.6156  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:15:09] d2.utils.events INFO:  eta: 6:53:06  iter: 4039  total_loss: 1.403  loss_fcos_cls: 0.4225  loss_fcos_loc: 0.3074  loss_fcos_ctr: 0.6397  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:15:15] d2.utils.events INFO:  eta: 6:52:45  iter: 4059  total_loss: 1.456  loss_fcos_cls: 0.4925  loss_fcos_loc: 0.2994  loss_fcos_ctr: 0.6316  loss_mask: 0  time: 0.2863  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:15:21] d2.utils.events INFO:  eta: 6:52:54  iter: 4079  total_loss: 1.367  loss_fcos_cls: 0.4096  loss_fcos_loc: 0.2805  loss_fcos_ctr: 0.6307  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:15:26] d2.utils.events INFO:  eta: 6:53:19  iter: 4099  total_loss: 1.422  loss_fcos_cls: 0.4712  loss_fcos_loc: 0.3199  loss_fcos_ctr: 0.6328  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:15:32] d2.utils.events INFO:  eta: 6:53:23  iter: 4119  total_loss: 1.433  loss_fcos_cls: 0.459  loss_fcos_loc: 0.291  loss_fcos_ctr: 0.6184  loss_mask: 0  time: 0.2864  data_time: 0.0026  lr: 0.01  max_mem: 5135M
[09/17 09:15:38] d2.utils.events INFO:  eta: 6:53:20  iter: 4139  total_loss: 1.37  loss_fcos_cls: 0.4645  loss_fcos_loc: 0.2712  loss_fcos_ctr: 0.6265  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:15:44] d2.utils.events INFO:  eta: 6:53:17  iter: 4159  total_loss: 1.342  loss_fcos_cls: 0.4885  loss_fcos_loc: 0.2735  loss_fcos_ctr: 0.6294  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:15:49] d2.utils.events INFO:  eta: 6:52:39  iter: 4179  total_loss: 1.317  loss_fcos_cls: 0.413  loss_fcos_loc: 0.289  loss_fcos_ctr: 0.6305  loss_mask: 0  time: 0.2863  data_time: 0.0032  lr: 0.01  max_mem: 5135M
[09/17 09:15:55] d2.utils.events INFO:  eta: 6:52:20  iter: 4199  total_loss: 1.402  loss_fcos_cls: 0.4775  loss_fcos_loc: 0.2782  loss_fcos_ctr: 0.6245  loss_mask: 0  time: 0.2862  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:16:01] d2.utils.events INFO:  eta: 6:52:27  iter: 4219  total_loss: 1.381  loss_fcos_cls: 0.4456  loss_fcos_loc: 0.29  loss_fcos_ctr: 0.6323  loss_mask: 0  time: 0.2862  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:16:07] d2.utils.events INFO:  eta: 6:52:45  iter: 4239  total_loss: 1.347  loss_fcos_cls: 0.4659  loss_fcos_loc: 0.2623  loss_fcos_ctr: 0.6172  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:16:12] d2.utils.events INFO:  eta: 6:52:32  iter: 4259  total_loss: 1.382  loss_fcos_cls: 0.4692  loss_fcos_loc: 0.2937  loss_fcos_ctr: 0.6342  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:16:18] d2.utils.events INFO:  eta: 6:52:26  iter: 4279  total_loss: 1.41  loss_fcos_cls: 0.4638  loss_fcos_loc: 0.3098  loss_fcos_ctr: 0.6328  loss_mask: 0  time: 0.2863  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:16:24] d2.utils.events INFO:  eta: 6:52:20  iter: 4299  total_loss: 1.316  loss_fcos_cls: 0.4321  loss_fcos_loc: 0.2545  loss_fcos_ctr: 0.617  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:16:30] d2.utils.events INFO:  eta: 6:52:22  iter: 4319  total_loss: 1.44  loss_fcos_cls: 0.5287  loss_fcos_loc: 0.3199  loss_fcos_ctr: 0.635  loss_mask: 0  time: 0.2864  data_time: 0.0032  lr: 0.01  max_mem: 5135M
[09/17 09:16:36] d2.utils.events INFO:  eta: 6:52:37  iter: 4339  total_loss: 1.349  loss_fcos_cls: 0.4156  loss_fcos_loc: 0.3012  loss_fcos_ctr: 0.6338  loss_mask: 0  time: 0.2864  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:16:41] d2.utils.events INFO:  eta: 6:52:31  iter: 4359  total_loss: 1.354  loss_fcos_cls: 0.4449  loss_fcos_loc: 0.2834  loss_fcos_ctr: 0.6265  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:16:47] d2.utils.events INFO:  eta: 6:51:57  iter: 4379  total_loss: 1.358  loss_fcos_cls: 0.4127  loss_fcos_loc: 0.2585  loss_fcos_ctr: 0.6198  loss_mask: 0  time: 0.2863  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:16:53] d2.utils.events INFO:  eta: 6:52:04  iter: 4399  total_loss: 1.342  loss_fcos_cls: 0.3859  loss_fcos_loc: 0.3063  loss_fcos_ctr: 0.6272  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:16:58] d2.utils.events INFO:  eta: 6:51:54  iter: 4419  total_loss: 1.281  loss_fcos_cls: 0.3831  loss_fcos_loc: 0.2709  loss_fcos_ctr: 0.6257  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:17:04] d2.utils.events INFO:  eta: 6:51:34  iter: 4439  total_loss: 1.414  loss_fcos_cls: 0.4472  loss_fcos_loc: 0.2716  loss_fcos_ctr: 0.619  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:17:09] d2.utils.events INFO:  eta: 6:51:21  iter: 4459  total_loss: 1.351  loss_fcos_cls: 0.4482  loss_fcos_loc: 0.2753  loss_fcos_ctr: 0.6231  loss_mask: 0  time: 0.2862  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:17:15] d2.utils.events INFO:  eta: 6:51:15  iter: 4479  total_loss: 1.351  loss_fcos_cls: 0.474  loss_fcos_loc: 0.3121  loss_fcos_ctr: 0.6264  loss_mask: 0  time: 0.2862  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:17:21] d2.utils.events INFO:  eta: 6:50:39  iter: 4499  total_loss: 1.452  loss_fcos_cls: 0.4953  loss_fcos_loc: 0.3144  loss_fcos_ctr: 0.6246  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:17:27] d2.utils.events INFO:  eta: 6:50:24  iter: 4519  total_loss: 1.289  loss_fcos_cls: 0.3984  loss_fcos_loc: 0.2697  loss_fcos_ctr: 0.6222  loss_mask: 0  time: 0.2862  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:17:32] d2.utils.events INFO:  eta: 6:50:27  iter: 4539  total_loss: 1.34  loss_fcos_cls: 0.4058  loss_fcos_loc: 0.2806  loss_fcos_ctr: 0.6328  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:17:38] d2.utils.events INFO:  eta: 6:50:16  iter: 4559  total_loss: 1.388  loss_fcos_cls: 0.4904  loss_fcos_loc: 0.2955  loss_fcos_ctr: 0.6246  loss_mask: 0  time: 0.2863  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:17:44] d2.utils.events INFO:  eta: 6:50:07  iter: 4579  total_loss: 1.338  loss_fcos_cls: 0.4371  loss_fcos_loc: 0.2667  loss_fcos_ctr: 0.6246  loss_mask: 0  time: 0.2862  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:17:50] d2.utils.events INFO:  eta: 6:50:09  iter: 4599  total_loss: 1.402  loss_fcos_cls: 0.4278  loss_fcos_loc: 0.2979  loss_fcos_ctr: 0.6339  loss_mask: 0  time: 0.2863  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:17:56] d2.utils.events INFO:  eta: 6:50:08  iter: 4619  total_loss: 1.29  loss_fcos_cls: 0.3789  loss_fcos_loc: 0.2947  loss_fcos_ctr: 0.6281  loss_mask: 0  time: 0.2863  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:18:01] d2.utils.events INFO:  eta: 6:49:49  iter: 4639  total_loss: 1.256  loss_fcos_cls: 0.3461  loss_fcos_loc: 0.2401  loss_fcos_ctr: 0.6246  loss_mask: 0  time: 0.2863  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:18:07] d2.utils.events INFO:  eta: 6:50:18  iter: 4659  total_loss: 1.348  loss_fcos_cls: 0.4573  loss_fcos_loc: 0.2987  loss_fcos_ctr: 0.6333  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:18:13] d2.utils.events INFO:  eta: 6:49:46  iter: 4679  total_loss: 1.367  loss_fcos_cls: 0.4523  loss_fcos_loc: 0.2907  loss_fcos_ctr: 0.6289  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:18:19] d2.utils.events INFO:  eta: 6:49:40  iter: 4699  total_loss: 1.346  loss_fcos_cls: 0.4419  loss_fcos_loc: 0.2896  loss_fcos_ctr: 0.6265  loss_mask: 0  time: 0.2864  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:18:24] d2.utils.events INFO:  eta: 6:49:30  iter: 4719  total_loss: 1.33  loss_fcos_cls: 0.4461  loss_fcos_loc: 0.2805  loss_fcos_ctr: 0.6237  loss_mask: 0  time: 0.2863  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:18:30] d2.utils.events INFO:  eta: 6:49:29  iter: 4739  total_loss: 1.387  loss_fcos_cls: 0.4499  loss_fcos_loc: 0.2981  loss_fcos_ctr: 0.6218  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:18:36] d2.utils.events INFO:  eta: 6:49:13  iter: 4759  total_loss: 1.347  loss_fcos_cls: 0.4528  loss_fcos_loc: 0.3021  loss_fcos_ctr: 0.6302  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:18:41] d2.utils.events INFO:  eta: 6:48:52  iter: 4779  total_loss: 1.349  loss_fcos_cls: 0.4414  loss_fcos_loc: 0.2731  loss_fcos_ctr: 0.6214  loss_mask: 0  time: 0.2863  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:18:47] d2.utils.events INFO:  eta: 6:48:47  iter: 4799  total_loss: 1.389  loss_fcos_cls: 0.4582  loss_fcos_loc: 0.3051  loss_fcos_ctr: 0.6229  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:18:53] d2.utils.events INFO:  eta: 6:48:19  iter: 4819  total_loss: 1.461  loss_fcos_cls: 0.5013  loss_fcos_loc: 0.318  loss_fcos_ctr: 0.6244  loss_mask: 0  time: 0.2863  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:18:59] d2.utils.events INFO:  eta: 6:48:29  iter: 4839  total_loss: 1.389  loss_fcos_cls: 0.4649  loss_fcos_loc: 0.2907  loss_fcos_ctr: 0.626  loss_mask: 0  time: 0.2864  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:19:05] d2.utils.events INFO:  eta: 6:48:38  iter: 4859  total_loss: 1.364  loss_fcos_cls: 0.4137  loss_fcos_loc: 0.3173  loss_fcos_ctr: 0.6305  loss_mask: 0  time: 0.2864  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:19:11] d2.utils.events INFO:  eta: 6:48:33  iter: 4879  total_loss: 1.327  loss_fcos_cls: 0.4388  loss_fcos_loc: 0.2694  loss_fcos_ctr: 0.6275  loss_mask: 0  time: 0.2864  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:19:16] d2.utils.events INFO:  eta: 6:48:39  iter: 4899  total_loss: 1.294  loss_fcos_cls: 0.3891  loss_fcos_loc: 0.2777  loss_fcos_ctr: 0.63  loss_mask: 0  time: 0.2864  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:19:22] d2.utils.events INFO:  eta: 6:48:50  iter: 4919  total_loss: 1.229  loss_fcos_cls: 0.372  loss_fcos_loc: 0.2426  loss_fcos_ctr: 0.6154  loss_mask: 0  time: 0.2864  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:19:28] d2.utils.events INFO:  eta: 6:49:07  iter: 4939  total_loss: 1.317  loss_fcos_cls: 0.4036  loss_fcos_loc: 0.2994  loss_fcos_ctr: 0.6273  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:19:34] d2.utils.events INFO:  eta: 6:49:06  iter: 4959  total_loss: 1.344  loss_fcos_cls: 0.45  loss_fcos_loc: 0.309  loss_fcos_ctr: 0.6294  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:19:39] d2.utils.events INFO:  eta: 6:49:01  iter: 4979  total_loss: 1.243  loss_fcos_cls: 0.3806  loss_fcos_loc: 0.2515  loss_fcos_ctr: 0.6184  loss_mask: 0  time: 0.2864  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:19:45] fvcore.common.checkpoint INFO: Saving checkpoint to output/fcos/R_101_3x/model_0004999.pth
[09/17 09:19:45] d2.utils.events INFO:  eta: 6:48:18  iter: 4999  total_loss: 1.406  loss_fcos_cls: 0.4709  loss_fcos_loc: 0.2799  loss_fcos_ctr: 0.6285  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:19:51] d2.utils.events INFO:  eta: 6:48:12  iter: 5019  total_loss: 1.36  loss_fcos_cls: 0.4509  loss_fcos_loc: 0.2859  loss_fcos_ctr: 0.63  loss_mask: 0  time: 0.2864  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:19:57] d2.utils.events INFO:  eta: 6:48:09  iter: 5039  total_loss: 1.383  loss_fcos_cls: 0.4418  loss_fcos_loc: 0.3109  loss_fcos_ctr: 0.6258  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:20:02] d2.utils.events INFO:  eta: 6:48:32  iter: 5059  total_loss: 1.391  loss_fcos_cls: 0.5263  loss_fcos_loc: 0.2727  loss_fcos_ctr: 0.6202  loss_mask: 0  time: 0.2864  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:20:08] d2.utils.events INFO:  eta: 6:48:32  iter: 5079  total_loss: 1.402  loss_fcos_cls: 0.4709  loss_fcos_loc: 0.3091  loss_fcos_ctr: 0.6343  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:20:14] d2.utils.events INFO:  eta: 6:48:26  iter: 5099  total_loss: 1.348  loss_fcos_cls: 0.4512  loss_fcos_loc: 0.281  loss_fcos_ctr: 0.6213  loss_mask: 0  time: 0.2864  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:20:20] d2.utils.events INFO:  eta: 6:48:08  iter: 5119  total_loss: 1.347  loss_fcos_cls: 0.4146  loss_fcos_loc: 0.2954  loss_fcos_ctr: 0.6233  loss_mask: 0  time: 0.2865  data_time: 0.0031  lr: 0.01  max_mem: 5135M
[09/17 09:20:26] d2.utils.events INFO:  eta: 6:48:27  iter: 5139  total_loss: 1.359  loss_fcos_cls: 0.4369  loss_fcos_loc: 0.2912  loss_fcos_ctr: 0.6281  loss_mask: 0  time: 0.2866  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:20:32] d2.utils.events INFO:  eta: 6:48:33  iter: 5159  total_loss: 1.365  loss_fcos_cls: 0.4623  loss_fcos_loc: 0.2986  loss_fcos_ctr: 0.6182  loss_mask: 0  time: 0.2866  data_time: 0.0028  lr: 0.01  max_mem: 5135M
[09/17 09:20:38] d2.utils.events INFO:  eta: 6:49:00  iter: 5179  total_loss: 1.364  loss_fcos_cls: 0.4131  loss_fcos_loc: 0.3087  loss_fcos_ctr: 0.6248  loss_mask: 0  time: 0.2865  data_time: 0.0030  lr: 0.01  max_mem: 5135M
[09/17 09:20:43] d2.utils.events INFO:  eta: 6:49:31  iter: 5199  total_loss: 1.422  loss_fcos_cls: 0.4802  loss_fcos_loc: 0.288  loss_fcos_ctr: 0.6326  loss_mask: 0  time: 0.2865  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:20:49] d2.utils.events INFO:  eta: 6:48:34  iter: 5219  total_loss: 1.378  loss_fcos_cls: 0.456  loss_fcos_loc: 0.2845  loss_fcos_ctr: 0.6312  loss_mask: 0  time: 0.2865  data_time: 0.0029  lr: 0.01  max_mem: 5135M
[09/17 09:20:55] d2.utils.events INFO:  eta: 6:48:28  iter: 5239  total_loss: 1.324  loss_fcos_cls: 0.4598  loss_fcos_loc: 0.2799  loss_fcos_ctr: 0.6264  loss_mask: 0  time: 0.2865  data_time: 0.0028  lr: 0.01  max_mem: 5135M
